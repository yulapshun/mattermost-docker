{"version":3,"sources":["webpack:///30.52b730184a3f5e30d5fa.js","webpack:///./components/signup/components/signup_ldap.jsx"],"names":["webpackJsonp","2144","module","exports","__webpack_require__","global","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","default","_interopRequireDefault","defineProperty","value","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_possibleConstructorReturn2","_possibleConstructorReturn3","_createClass2","_createClass3","_inherits2","_inherits3","_propTypes","_propTypes2","_react","_react2","_reactIntl","_es","_diagnostics_actions","_global_actions","GlobalActions","_team_actions","_user_actions","_utils","Utils","_logo","_logo2","_back_button","_back_button2","_form_error","_form_error2","SignupLdap","_React$Component","props","this","_this","__proto__","handleLdapSignup","bind","handleLdapSignupSuccess","handleLdapIdChange","handleLdapPasswordChange","state","ldapError","ldapId","ldapPassword","get","location","object","trackEvent","e","setState","target","_this2","preventDefault","webLoginByLdap","err","message","_this3","hash","query","h","data","d","inviteId","id","addUserToTeamFromInvite","finishSignup","_this4","loadMe","then","loadDefaultLocale","redirect_to","browserHistory","push","redirectUserToDefaultTeam","ldapIdPlaceholder","window","mm_config","LdapLoginFieldName","localizeMessage","errorClass","ldapSignup","EnableLdap","mm_license","IsLicensed","LDAP","createElement","className","FormattedMessage","defaultMessage","onSubmit","error","margin","name","placeholder","onChange","spellCheck","autoCapitalize","type","disabled","terms","FormattedHTMLMessage","values","siteName","SiteName","TermsOfServiceLink","PrivacyPolicyLink","description","CustomBrand","EnableCustomBrand","CustomDescriptionText","src","Link","to","Component"],"mappings":"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","file":"30.52b730184a3f5e30d5fa.js","sourcesContent":["webpackJsonp([30],{\n\n/***/ 2144:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(4);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(7);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _inherits2 = __webpack_require__(8);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = __webpack_require__(2);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactIntl = __webpack_require__(17);\n\nvar _es = __webpack_require__(44);\n\nvar _diagnostics_actions = __webpack_require__(237);\n\nvar _global_actions = __webpack_require__(56);\n\nvar GlobalActions = _interopRequireWildcard(_global_actions);\n\nvar _team_actions = __webpack_require__(435);\n\nvar _user_actions = __webpack_require__(69);\n\nvar _utils = __webpack_require__(16);\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _logo = __webpack_require__(2081);\n\nvar _logo2 = _interopRequireDefault(_logo);\n\nvar _back_button = __webpack_require__(2082);\n\nvar _back_button2 = _interopRequireDefault(_back_button);\n\nvar _form_error = __webpack_require__(238);\n\nvar _form_error2 = _interopRequireDefault(_form_error);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar SignupLdap = function (_React$Component) {\n    (0, _inherits3.default)(SignupLdap, _React$Component);\n    (0, _createClass3.default)(SignupLdap, null, [{\n        key: 'propTypes',\n        get: function get() {\n            return {\n                location: _propTypes2.default.object\n            };\n        }\n    }]);\n\n    function SignupLdap(props) {\n        (0, _classCallCheck3.default)(this, SignupLdap);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (SignupLdap.__proto__ || (0, _getPrototypeOf2.default)(SignupLdap)).call(this, props));\n\n        _this.handleLdapSignup = _this.handleLdapSignup.bind(_this);\n        _this.handleLdapSignupSuccess = _this.handleLdapSignupSuccess.bind(_this);\n\n        _this.handleLdapIdChange = _this.handleLdapIdChange.bind(_this);\n        _this.handleLdapPasswordChange = _this.handleLdapPasswordChange.bind(_this);\n\n        _this.state = {\n            ldapError: '',\n            ldapId: '',\n            ldapPassword: ''\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(SignupLdap, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            (0, _diagnostics_actions.trackEvent)('signup', 'signup_user_01_welcome');\n        }\n    }, {\n        key: 'handleLdapIdChange',\n        value: function handleLdapIdChange(e) {\n            this.setState({\n                ldapId: e.target.value\n            });\n        }\n    }, {\n        key: 'handleLdapPasswordChange',\n        value: function handleLdapPasswordChange(e) {\n            this.setState({\n                ldapPassword: e.target.value\n            });\n        }\n    }, {\n        key: 'handleLdapSignup',\n        value: function handleLdapSignup(e) {\n            var _this2 = this;\n\n            e.preventDefault();\n\n            this.setState({ ldapError: '' });\n\n            (0, _user_actions.webLoginByLdap)(this.state.ldapId, this.state.ldapPassword, null, this.handleLdapSignupSuccess, function (err) {\n                _this2.setState({\n                    ldapError: err.message\n                });\n            });\n        }\n    }, {\n        key: 'handleLdapSignupSuccess',\n        value: function handleLdapSignupSuccess() {\n            var _this3 = this;\n\n            var hash = this.props.location.query.h;\n            var data = this.props.location.query.d;\n            var inviteId = this.props.location.query.id;\n\n            if (inviteId || hash) {\n                (0, _team_actions.addUserToTeamFromInvite)(data, hash, inviteId, function () {\n                    _this3.finishSignup();\n                }, function () {\n                    // there's not really a good way to deal with this, so just let the user log in like normal\n                    _this3.finishSignup();\n                });\n            } else {\n                this.finishSignup();\n            }\n        }\n    }, {\n        key: 'finishSignup',\n        value: function finishSignup() {\n            var _this4 = this;\n\n            (0, _user_actions.loadMe)().then(function () {\n                var query = _this4.props.location.query;\n                GlobalActions.loadDefaultLocale();\n                if (query.redirect_to) {\n                    _es.browserHistory.push(query.redirect_to);\n                } else {\n                    GlobalActions.redirectUserToDefaultTeam();\n                }\n            });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var ldapIdPlaceholder = void 0;\n            if (global.window.mm_config.LdapLoginFieldName) {\n                ldapIdPlaceholder = global.window.mm_config.LdapLoginFieldName;\n            } else {\n                ldapIdPlaceholder = Utils.localizeMessage('login.ldapUsername', 'AD/LDAP Username');\n            }\n\n            var errorClass = '';\n            if (this.state.ldapError) {\n                errorClass += ' has-error';\n            }\n\n            var ldapSignup = void 0;\n            if (global.window.mm_config.EnableLdap === 'true' && global.window.mm_license.IsLicensed === 'true' && global.window.mm_license.LDAP) {\n                ldapSignup = _react2.default.createElement(\n                    'div',\n                    { className: 'inner__content' },\n                    _react2.default.createElement(\n                        'h5',\n                        null,\n                        _react2.default.createElement(\n                            'strong',\n                            null,\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup.ldap',\n                                defaultMessage: 'AD/LDAP Credentials'\n                            })\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'form',\n                        {\n                            onSubmit: this.handleLdapSignup\n                        },\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'signup__email-container' },\n                            _react2.default.createElement(_form_error2.default, {\n                                error: this.state.ldapError,\n                                margin: true\n                            }),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'form-group' + errorClass },\n                                _react2.default.createElement('input', {\n                                    className: 'form-control',\n                                    name: 'ldapId',\n                                    value: this.state.ldapId,\n                                    placeholder: ldapIdPlaceholder,\n                                    onChange: this.handleLdapIdChange,\n                                    spellCheck: 'false',\n                                    autoCapitalize: 'off'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'form-group' + errorClass },\n                                _react2.default.createElement('input', {\n                                    type: 'password',\n                                    className: 'form-control',\n                                    name: 'password',\n                                    value: this.state.ldapPassword,\n                                    placeholder: Utils.localizeMessage('login.password', 'Password'),\n                                    onChange: this.handleLdapPasswordChange,\n                                    spellCheck: 'false'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'form-group' },\n                                _react2.default.createElement(\n                                    'button',\n                                    {\n                                        type: 'submit',\n                                        className: 'btn btn-primary',\n                                        disabled: !this.state.ldapId || !this.state.ldapPassword\n                                    },\n                                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                        id: 'login.signIn',\n                                        defaultMessage: 'Sign in'\n                                    })\n                                )\n                            )\n                        )\n                    )\n                );\n            } else {\n                return null;\n            }\n\n            var terms = null;\n            if (ldapSignup) {\n                terms = _react2.default.createElement(\n                    'p',\n                    null,\n                    _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                        id: 'create_team.agreement',\n                        defaultMessage: 'By proceeding to create your account and use {siteName}, you agree to our <a href=\\'{TermsOfServiceLink}\\'>Terms of Service</a> and <a href=\\'{PrivacyPolicyLink}\\'>Privacy Policy</a>. If you do not agree, you cannot use {siteName}.',\n                        values: {\n                            siteName: global.window.mm_config.SiteName,\n                            TermsOfServiceLink: global.window.mm_config.TermsOfServiceLink,\n                            PrivacyPolicyLink: global.window.mm_config.PrivacyPolicyLink\n                        }\n                    })\n                );\n            }\n\n            var description = null;\n            if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_license.CustomBrand === 'true' && global.window.mm_config.EnableCustomBrand === 'true') {\n                description = global.window.mm_config.CustomDescriptionText;\n            } else {\n                description = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'web.root.signup_info',\n                    defaultMessage: 'All team communication in one place, searchable and accessible anywhere'\n                });\n            }\n\n            return _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(_back_button2.default, null),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'col-sm-12' },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'signup-team__container padding--less' },\n                        _react2.default.createElement('img', {\n                            className: 'signup-team-logo',\n                            src: _logo2.default\n                        }),\n                        _react2.default.createElement(\n                            'h1',\n                            null,\n                            global.window.mm_config.SiteName\n                        ),\n                        _react2.default.createElement(\n                            'h4',\n                            { className: 'color--light' },\n                            description\n                        ),\n                        _react2.default.createElement(\n                            'h4',\n                            { className: 'color--light' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup_user_completed.lets',\n                                defaultMessage: 'Let\\'s create your account'\n                            })\n                        ),\n                        _react2.default.createElement(\n                            'span',\n                            { className: 'color--light' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup_user_completed.haveAccount',\n                                defaultMessage: 'Already have an account?'\n                            }),\n                            ' ',\n                            _react2.default.createElement(\n                                _es.Link,\n                                {\n                                    to: '/login',\n                                    query: this.props.location.query\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'signup_user_completed.signIn',\n                                    defaultMessage: 'Click here to sign in.'\n                                })\n                            )\n                        ),\n                        ldapSignup,\n                        terms\n                    )\n                )\n            );\n        }\n    }]);\n    return SignupLdap;\n}(_react2.default.Component);\n\nexports.default = SignupLdap;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 30.52b730184a3f5e30d5fa.js","// Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\nimport {browserHistory, Link} from 'react-router/es6';\n\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport {addUserToTeamFromInvite} from 'actions/team_actions.jsx';\nimport {loadMe, webLoginByLdap} from 'actions/user_actions.jsx';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport logoImage from 'images/logo.png';\n\nimport BackButton from 'components/common/back_button.jsx';\nimport FormError from 'components/form_error.jsx';\n\nexport default class SignupLdap extends React.Component {\n    static get propTypes() {\n        return {\n            location: PropTypes.object\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleLdapSignup = this.handleLdapSignup.bind(this);\n        this.handleLdapSignupSuccess = this.handleLdapSignupSuccess.bind(this);\n\n        this.handleLdapIdChange = this.handleLdapIdChange.bind(this);\n        this.handleLdapPasswordChange = this.handleLdapPasswordChange.bind(this);\n\n        this.state = ({\n            ldapError: '',\n            ldapId: '',\n            ldapPassword: ''\n        });\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_user_01_welcome');\n    }\n\n    handleLdapIdChange(e) {\n        this.setState({\n            ldapId: e.target.value\n        });\n    }\n\n    handleLdapPasswordChange(e) {\n        this.setState({\n            ldapPassword: e.target.value\n        });\n    }\n\n    handleLdapSignup(e) {\n        e.preventDefault();\n\n        this.setState({ldapError: ''});\n\n        webLoginByLdap(\n            this.state.ldapId,\n            this.state.ldapPassword,\n            null,\n            this.handleLdapSignupSuccess,\n            (err) => {\n                this.setState({\n                    ldapError: err.message\n                });\n            }\n        );\n    }\n\n    handleLdapSignupSuccess() {\n        const hash = this.props.location.query.h;\n        const data = this.props.location.query.d;\n        const inviteId = this.props.location.query.id;\n\n        if (inviteId || hash) {\n            addUserToTeamFromInvite(\n                data,\n                hash,\n                inviteId,\n                () => {\n                    this.finishSignup();\n                },\n                () => {\n                    // there's not really a good way to deal with this, so just let the user log in like normal\n                    this.finishSignup();\n                }\n            );\n        } else {\n            this.finishSignup();\n        }\n    }\n\n    finishSignup() {\n        loadMe().then(\n            () => {\n                const query = this.props.location.query;\n                GlobalActions.loadDefaultLocale();\n                if (query.redirect_to) {\n                    browserHistory.push(query.redirect_to);\n                } else {\n                    GlobalActions.redirectUserToDefaultTeam();\n                }\n            }\n        );\n    }\n\n    render() {\n        let ldapIdPlaceholder;\n        if (global.window.mm_config.LdapLoginFieldName) {\n            ldapIdPlaceholder = global.window.mm_config.LdapLoginFieldName;\n        } else {\n            ldapIdPlaceholder = Utils.localizeMessage('login.ldapUsername', 'AD/LDAP Username');\n        }\n\n        let errorClass = '';\n        if (this.state.ldapError) {\n            errorClass += ' has-error';\n        }\n\n        let ldapSignup;\n        if (global.window.mm_config.EnableLdap === 'true' && global.window.mm_license.IsLicensed === 'true' && global.window.mm_license.LDAP) {\n            ldapSignup = (\n                <div className='inner__content'>\n                    <h5>\n                        <strong>\n                            <FormattedMessage\n                                id='signup.ldap'\n                                defaultMessage='AD/LDAP Credentials'\n                            />\n                        </strong>\n                    </h5>\n                    <form\n                        onSubmit={this.handleLdapSignup}\n                    >\n                        <div className='signup__email-container'>\n                            <FormError\n                                error={this.state.ldapError}\n                                margin={true}\n                            />\n                            <div className={'form-group' + errorClass}>\n                                <input\n                                    className='form-control'\n                                    name='ldapId'\n                                    value={this.state.ldapId}\n                                    placeholder={ldapIdPlaceholder}\n                                    onChange={this.handleLdapIdChange}\n                                    spellCheck='false'\n                                    autoCapitalize='off'\n                                />\n                            </div>\n                            <div className={'form-group' + errorClass}>\n                                <input\n                                    type='password'\n                                    className='form-control'\n                                    name='password'\n                                    value={this.state.ldapPassword}\n                                    placeholder={Utils.localizeMessage('login.password', 'Password')}\n                                    onChange={this.handleLdapPasswordChange}\n                                    spellCheck='false'\n                                />\n                            </div>\n                            <div className='form-group'>\n                                <button\n                                    type='submit'\n                                    className='btn btn-primary'\n                                    disabled={!this.state.ldapId || !this.state.ldapPassword}\n                                >\n                                    <FormattedMessage\n                                        id='login.signIn'\n                                        defaultMessage='Sign in'\n                                    />\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            );\n        } else {\n            return null;\n        }\n\n        let terms = null;\n        if (ldapSignup) {\n            terms = (\n                <p>\n                    <FormattedHTMLMessage\n                        id='create_team.agreement'\n                        defaultMessage=\"By proceeding to create your account and use {siteName}, you agree to our <a href='{TermsOfServiceLink}'>Terms of Service</a> and <a href='{PrivacyPolicyLink}'>Privacy Policy</a>. If you do not agree, you cannot use {siteName}.\"\n                        values={{\n                            siteName: global.window.mm_config.SiteName,\n                            TermsOfServiceLink: global.window.mm_config.TermsOfServiceLink,\n                            PrivacyPolicyLink: global.window.mm_config.PrivacyPolicyLink\n                        }}\n                    />\n                </p>\n            );\n        }\n\n        let description = null;\n        if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_license.CustomBrand === 'true' && global.window.mm_config.EnableCustomBrand === 'true') {\n            description = global.window.mm_config.CustomDescriptionText;\n        } else {\n            description = (\n                <FormattedMessage\n                    id='web.root.signup_info'\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                />\n            );\n        }\n\n        return (\n            <div>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container padding--less'>\n                        <img\n                            className='signup-team-logo'\n                            src={logoImage}\n                        />\n                        <h1>{global.window.mm_config.SiteName}</h1>\n                        <h4 className='color--light'>\n                            {description}\n                        </h4>\n                        <h4 className='color--light'>\n                            <FormattedMessage\n                                id='signup_user_completed.lets'\n                                defaultMessage=\"Let's create your account\"\n                            />\n                        </h4>\n                        <span className='color--light'>\n                            <FormattedMessage\n                                id='signup_user_completed.haveAccount'\n                                defaultMessage='Already have an account?'\n                            />\n                            {' '}\n                            <Link\n                                to={'/login'}\n                                query={this.props.location.query}\n                            >\n                                <FormattedMessage\n                                    id='signup_user_completed.signIn'\n                                    defaultMessage='Click here to sign in.'\n                                />\n                            </Link>\n                        </span>\n                        {ldapSignup}\n                        {terms}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/signup/components/signup_ldap.jsx"],"sourceRoot":""}