{"version":3,"sources":["webpack:///0.9c7e2c030757ccb2d809.js","webpack:///./images/favicon/redfavicon-16x16.png","webpack:///./components/more_channels/index.js","webpack:///./components/more_channels/more_channels.jsx","webpack:///./components/searchable_channel_list.jsx","webpack:///./components/more_direct_channels/index.js","webpack:///./components/more_direct_channels/more_direct_channels.jsx","webpack:///./components/new_channel_flow.jsx","webpack:///./components/new_channel_modal/index.js","webpack:///./components/new_channel_modal/new_channel_modal.jsx","webpack:///./components/change_url_modal.jsx","webpack:///./components/sidebar_header.jsx","webpack:///./components/status_dropdown/index.jsx","webpack:///./components/status_dropdown/status_dropdown.jsx","webpack:///./components/bootstrap_span.jsx","webpack:///./components/sidebar_header_dropdown.jsx","webpack:///./components/sidebar_header_dropdown_button.jsx","webpack:///./components/unread_channel_indicator.jsx","webpack:///./components/sidebar.jsx"],"names":["webpackJsonp","2484","module","exports","__webpack_require__","p","2485","_interopRequireDefault","obj","__esModule","default","mapStateToProps","state","ownProps","_extends3","mapDispatchToProps","dispatch","actions","_redux","bindActionCreators","getChannels","Object","defineProperty","value","_extends2","_reactRedux","_channels","_more_channels","_more_channels2","connect","2486","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_propTypes","_propTypes2","_react","_react2","_reactAddonsPureRenderMixin","_reactAddonsPureRenderMixin2","_reactBootstrap","_reactIntl","_es","_channel_actions","_channel_store","_channel_store2","_team_store","_team_store2","_user_store","_user_store2","_channel_utils","_constants","_constants2","_searchable_channel_list","_searchable_channel_list2","MoreChannels","_React$Component","props","this","_this","__proto__","call","onChange","bind","handleJoin","handleHide","handleExit","nextPage","search","shouldComponentUpdate","searchTimeoutId","show","channels","serverError","key","addChangeListener","getCurrentId","CHANNELS_CHUNK_SIZE","removeChangeListener","setState","onModalDismissed","force","getMoreChannelsList","page","channel","done","_this2","joinChannel","browserHistory","push","getCurrentTeamRelativeUrl","name","err","message","term","_this3","clearTimeout","setTimeout","searchMoreChannels","createElement","className","createNewChannelButton","id","type","onClick","handleNewChannel","FormattedMessage","defaultMessage","createChannelHelpText","isTeamAdmin","isTeamAdminForCurrentTeam","isSystemAdmin","isSystemAdminForCurrentUser","showCreateOption","OPEN_CHANNEL","Modal","dialogClassName","onHide","onExited","Header","closeButton","Title","Body","channelsPerPage","isSearch","noResultsText","Component","propTypes","func","shape","isRequired","2487","_jquery","_jquery2","_reactDom","_reactDom2","_user_agent","UserAgent","newObj","prototype","hasOwnProperty","_utils","_load","_load2","_loading_screen","_loading_screen2","SearchableChannelList","createChannelRow","previousPage","doSearch","nextTimeoutId","joiningChannel","nextDisabled","isMobile","refs","filter","focus","prevProps","prevState","channelList","scrollTop","nextProps","joinButton","src","disabled","display_name","purpose","e","preventDefault","findDOMNode","channelListScroll","listContent","nextButton","previousButton","length","pageStart","pageEnd","channelsToDisplay","slice","map","ref","placeholder","localizeMessage","onInput","defaultProps","arrayOf","object","number","bool","2488","getProfiles","getProfilesInTeam","_users","_more_direct_channels","_more_direct_channels2","2489","global","_assign","_assign2","_client","_user_actions","_redux_store","_redux_store2","_multiselect","_multiselect2","_profile_picture","_profile_picture2","MAX_SELECTABLE_VALUES","MAX_USERS_IN_GM","MoreDirectChannels","resetPaging","multiselect","handleSubmit","handleDelete","handlePageChange","addValue","listType","window","mm_config","RestrictDirectMessage","values","startingUsers","i","user","label","username","users","loadingChannel","addInTeamChangeListener","addStatusesChangeListener","USERS_PER_PAGE","removeInTeamChangeListener","removeStatusesChangeListener","exitToChannel","userIds","v","success","error","openDirectChannelToUser","openGroupChannelToUsers","indexOf","searchProfiles","getState","searchProfilesInCurrentTeam","getProfileList","getProfileListInTeam","prevPage","teamId","searchUsers","SEARCH_TIMEOUT_MILLISECONDS","option","isSelected","onAdd","rowSelected","Client4","getProfilePictureUrl","last_picture_update","status","getStatus","width","height","displayEntireNameForUser","email","note","buttonSubmitText","numRemainingText","num","delete_at","options","optionRenderer","renderOption","valueRenderer","renderValue","perPage","handleInput","handleAdd","noteText","maxValues","2490","_url","Utils","_new_channel_modal","_new_channel_modal2","_change_url_modal","_change_url_modal2","SHOW_NEW_CHANNEL","NewChannelFlow","doSubmit","onModalExited","typeSwitched","urlChangeRequested","urlChangeSubmitted","urlChangeDismissed","channelDataChanged","channelType","flowState","channelDisplayName","channelName","channelPurpose","channelHeader","nameModified","team_id","header","createChannel","data","doOnModalExited","newURL","displayName","cleanUpUrlable","trim","channelData","showChannelModal","showGroupModal","showChangeURLModal","changeURLTitle","changeURLSubmitButtonText","onSubmitChannel","onTypeSwitched","onChangeURLPressed","onDataChanged","title","submitButtonText","currentURL","onModalSubmit","string","2491","ctrlSend","_preferences","getBool","Preferences","CATEGORY_ADVANCED_SETTINGS","_teams","isCurrentUserCurrentTeamAdmin","isCurrentUserSystemAdmin","2492","_interopRequireWildcard","ChannelUtils","NewChannelModal","_React$PureComponent","handleChange","onEnterKeyDown","displayNameError","document","addEventListener","removeEventListener","isInternetExplorer","isEdge","addClass","keyCode","KeyCodes","ENTER","ctrlKey","shiftKey","altKey","MIN_CHANNELNAME_LENGTH","newData","channel_header","channel_purpose","displayNameClass","createPublicChannelLink","href","createPrivateChannelLink","PRIVATE_CHANNEL","channelSwitchText","inputPrefixId","prettyTeamURL","getShortenedURL","bsSize","role","maxLength","MAX_CHANNELNAME_LENGTH","autoFocus","tabIndex","rows","Footer","PureComponent","node","2493","URL","ChangeUrlModal","onURLChanged","doCancel","urlError","userEdit","urlinput","select","url","target","replace","toLowerCase","charAt","getURLError","urlClass","fullUrl","getCurrentTeamUrl","shortURL","urlTooltip","Tooltip","OverlayTrigger","trigger","delayShow","OVERLAY_TIME_DELAY","placement","overlay","2494","_preference_store","_preference_store2","_index","_index2","_tutorial_tip","_sidebar_header_dropdown","_sidebar_header_dropdown2","SidebarHeader","handleResize","getPreferences","currentUser","showTutorialTip","getInt","TUTORIAL_STEP","TutorialSteps","MENU_POPOVER","getStateFromStores","preferences","onPreferenceChange","toggleDropdown","dropdown","renderStatusDropdown","statusDropdown","tutorialTip","createMenuTip","teamNameWithToolTip","teamDescription","teamDisplayName","Constants","teamType","teamName","2495","_users2","getCurrentUser","userId","lastPicUpdate","profilePicture","getStatusForUserId","setStatus","_status_dropdown","_status_dropdown2","2496","_bootstrap_span","_bootstrap_span2","_status_icon","_status_icon2","StatusDropdown","_ref","_temp","_ret","_len","arguments","args","Array","_key","apply","concat","showDropdown","onToggle","closeDropdown","user_id","setOnline","event","UserStatuses","ONLINE","setOffline","OFFLINE","setAway","AWAY","renderStatusOnlineAction","renderStatusAction","renderStatusAwayAction","renderStatusOfflineAction","renderProfilePicture","Dropdown","open","style","bsRole","Menu","2497","_objectWithoutProperties2","_objectWithoutProperties3","BootstrapSpan","_props","children","bsClass","element","2498","_global_actions","GlobalActions","_webrtc_store","_webrtc_store2","_about_build_modal","_about_build_modal2","_add_users_to_team","_add_users_to_team2","_sidebar_header_dropdown_button","_sidebar_header_dropdown_button2","_team_members_modal","_team_members_modal2","SidebarHeaderDropdown","handleAboutModal","aboutModalDismissed","showAccountSettingsModal","showAddUsersToTeamModal","hideAddUsersToTeamModal","showInviteMemberModal","showGetTeamInviteLinkModal","showTeamMembersModal","hideTeamMembersModal","showShortcutsModal","onTeamChange","renderCustomEmojiLink","handleClick","teamMembers","getMyTeamMembers","teamListings","getTeamListings","showAboutModal","isBusy","emitChanged","action","WebrtcActionTypes","IN_PROGRESS","val","off","EnableCustomEmoji","canCreateCustomEmoji","Link","to","config","teamLink","inviteLink","addMemberToTeam","manageLink","sysAdminLink","isAdmin","teamSettings","integrationsLink","OPEN_TEAM","EnableUserCreation","mm_license","IsLicensed","RestrictTeamInvite","PERMISSIONS_SYSTEM_ADMIN","PERMISSIONS_TEAM_ADMIN","membersName","data-toggle","data-target","EnableIncomingWebhooks","EnableOutgoingWebhooks","EnableCommands","EnableOAuthServiceProvider","EnableOnlyAdminIntegrations","teams","moreTeams","EnableTeamCreation","isAlreadyMember","reduce","result","item","showLeaveTeamModal","helpLink","HelpLink","rel","reportLink","ReportAProblemLink","nativeAppLink","AppDownloadLink","isMobileApp","useSafeUrl","teamMembersModal","onLoad","addUsersToTeamModal","keyboardShortcuts","accountSettings","about","logout","emitUserLoggedOutEvent","customEmoji","inviteDivider","teamDivider","backstageDivider","sysAdminDivider","helpDivider","logoutDivider","pullRight","2499","SidebarHeaderDropdownButton","mainMenuToolTip","dangerouslySetInnerHTML","__html","MENU_ICON","oneOf","2500","UnreadChannelIndicator","unreadIcon","UNREAD_ICON_SVG","displayValue","extraClass","display","content","321","_map","_map2","_stringify","_stringify2","ChannelActions","_diagnostics_actions","_app_dispatcher","_app_dispatcher2","_modal_store","_modal_store2","_favicon16x","_favicon16x2","_redfavicon16x","_redfavicon16x2","_new_channel_flow","_new_channel_flow2","_sidebar_header","_sidebar_header2","_tutorial_tip2","_unread_channel_indicator","_unread_channel_indicator2","Sidebar","getTotalUnreadCount","unreads","getCountsStateFromStores","currentTeam","unreadCounts","msgs","messageCount","mentions","mentionCount","members","getMyMembers","currentChannelId","tutorialStep","displayableChannels","getChannelsByCategory","activeId","JSON","parse","getUnreadCounts","CHANNEL_POPOVER","getCurrent","townSquare","getByName","DEFAULT_CHANNEL","offTopic","OFFTOPIC_CHANNEL","onInChannelChange","inChannelChange","onModalChange","showMoreDirectChannelsModal","getProfileListInChannel","channelId","handleOpenMoreDirectChannelsModal","showDirectChannelsModal","hideMoreDirectChannelsModal","clear","updateTitle","currentSiteName","SiteName","currentChannelName","DM_CHANNEL","teammate","getDirectTeammate","unread","mentionTitle","unreadTitle","onScroll","updateUnreadIndicators","scrollToFirstUnreadChannel","firstUnreadChannel","container","firstUnreadElement","position","top","stop","animate","scrollToLastUnreadChannel","lastUnreadChannel","lastUnreadElement","elementBottom","showTopUnread","showBottomUnread","updateScrollbarOnChannelChange","curChannel","getBoundingClientRect","CHANNEL_SCROLL_ADJUSTMENT","perfectScrollbar","navigateChannelShortcut","UP","DOWN","cmdOrCtrlPressed","K","isSwitchingChannel","allChannels","getDisplayedChannels","curChannelId","curIndex","nextIndex","nextChannel","mod","goToChannel","navigateUnreadChannelShortcut","count","increment","getUnreadCount","favoriteChannels","publicChannels","privateChannels","directAndGroupChannels","handleLeavePublicChannel","leaveChannel","trackEvent","handleLeavePrivateChannel","showLeavePrivateChannelModal","handleLeaveDirectChannel","isLeaving","get","set","category","teammate_id","CATEGORY_DIRECT_CHANNEL_SHOW","CATEGORY_GROUP_CHANNEL_SHOW","currentUserId","savePreferences","then","isFavoriteChannel","unmarkFavorite","closedDirectChannel","showMoreChannelsModal","hideMoreChannelsModal","showNewChannelModal","newChannelModalType","hideNewChannelModal","openLeftSidebar","querySelector","classList","add","openQuickSwitcher","handleViewAction","ActionTypes","TOGGLE_QUICK_SWITCH_MODAL","createTutorialTip","screens","townSquareDisplayName","DEFAULT_CHANNEL_UI_NAME","offTopicDisplayName","OFFTOPIC_CHANNEL_UI_NAME","FormattedHTMLMessage","townsquare","offtopic","overlayClass","diagnosticsTag","createChannelElement","index","arr","handleClose","channelMember","unreadCount","msgCount","linkClass","rowClass","mention_count","badge","badgesActive","loadingDMChannel","icon","globeIcon","GLOBE_ICON_SVG","lockIcon","LOCK_ICON_SVG","GM_CHANNEL","removeTooltip","link","fake","encodeURIComponent","trackChannelSelectedEvent","addInChannelChangeListener","addModalListener","TOGGLE_DM_MODAL","nextState","areObjectsEqual","removeClass","removeInChannelChangeListener","removeModalListener","switchChannelIcon","SWITCH_CHANNEL_ICON_SVG","lastBadgesActive","favoriteItems","EnableXToLeaveChannelsFromLHS","publicChannelItems","privateChannelItems","directMessageItems","head","getElementsByTagName","oldLink","getElementById","removeChild","appendChild","directMessageMore","createChannelTootlip","createGroupTootlip","createDirectMessageTooltip","above","below","createPublicChannelIcon","createPrivateChannelIcon","createDirectMessageIcon","moreDirectChannelsModal","moreChannelsModal","quickSwitchTextShortcutId","quickSwitchTextShortcutDefault","isMac","quickSwitchTextShortcut","description","text"],"mappings":"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","file":"0.9c7e2c030757ccb2d809.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 2484:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"files/2c9d31cec343005b617e3b39fdb20895.png\";\n\n/***/ }),\n\n/***/ 2485:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = __webpack_require__(19);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _reactRedux = __webpack_require__(31);\n\nvar _redux = __webpack_require__(20);\n\nvar _channels = __webpack_require__(65);\n\nvar _more_channels = __webpack_require__(2486);\n\nvar _more_channels2 = _interopRequireDefault(_more_channels);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2017 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nfunction mapStateToProps(state, ownProps) {\n    return (0, _extends3.default)({}, ownProps);\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: (0, _redux.bindActionCreators)({\n            getChannels: _channels.getChannels\n        }, dispatch)\n    };\n}\n\nexports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_more_channels2.default);\n\n/***/ }),\n\n/***/ 2486:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(4);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(7);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(8);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = __webpack_require__(2);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactAddonsPureRenderMixin = __webpack_require__(739);\n\nvar _reactAddonsPureRenderMixin2 = _interopRequireDefault(_reactAddonsPureRenderMixin);\n\nvar _reactBootstrap = __webpack_require__(40);\n\nvar _reactIntl = __webpack_require__(17);\n\nvar _es = __webpack_require__(44);\n\nvar _channel_actions = __webpack_require__(79);\n\nvar _channel_store = __webpack_require__(32);\n\nvar _channel_store2 = _interopRequireDefault(_channel_store);\n\nvar _team_store = __webpack_require__(35);\n\nvar _team_store2 = _interopRequireDefault(_team_store);\n\nvar _user_store = __webpack_require__(25);\n\nvar _user_store2 = _interopRequireDefault(_user_store);\n\nvar _channel_utils = __webpack_require__(121);\n\nvar _constants = __webpack_require__(9);\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nvar _searchable_channel_list = __webpack_require__(2487);\n\nvar _searchable_channel_list2 = _interopRequireDefault(_searchable_channel_list);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CHANNELS_CHUNK_SIZE = 50; // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar CHANNELS_PER_PAGE = 50;\nvar SEARCH_TIMEOUT_MILLISECONDS = 100;\n\nvar MoreChannels = function (_React$Component) {\n    (0, _inherits3.default)(MoreChannels, _React$Component);\n\n    function MoreChannels(props) {\n        (0, _classCallCheck3.default)(this, MoreChannels);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (MoreChannels.__proto__ || (0, _getPrototypeOf2.default)(MoreChannels)).call(this, props));\n\n        _this.onChange = _this.onChange.bind(_this);\n        _this.handleJoin = _this.handleJoin.bind(_this);\n        _this.handleHide = _this.handleHide.bind(_this);\n        _this.handleExit = _this.handleExit.bind(_this);\n        _this.nextPage = _this.nextPage.bind(_this);\n        _this.search = _this.search.bind(_this);\n\n        _this.shouldComponentUpdate = _reactAddonsPureRenderMixin2.default.shouldComponentUpdate.bind(_this);\n\n        _this.searchTimeoutId = 0;\n\n        _this.state = {\n            show: true,\n            search: false,\n            channels: null,\n            serverError: null\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(MoreChannels, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            _channel_store2.default.addChangeListener(this.onChange);\n            this.props.actions.getChannels(_team_store2.default.getCurrentId(), 0, CHANNELS_CHUNK_SIZE * 2);\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            _channel_store2.default.removeChangeListener(this.onChange);\n        }\n    }, {\n        key: 'handleHide',\n        value: function handleHide() {\n            this.setState({ show: false });\n        }\n    }, {\n        key: 'handleExit',\n        value: function handleExit() {\n            if (this.props.onModalDismissed) {\n                this.props.onModalDismissed();\n            }\n        }\n    }, {\n        key: 'onChange',\n        value: function onChange(force) {\n            if (this.state.search && !force) {\n                return;\n            }\n\n            this.setState({\n                channels: _channel_store2.default.getMoreChannelsList(),\n                serverError: null\n            });\n        }\n    }, {\n        key: 'nextPage',\n        value: function nextPage(page) {\n            this.props.actions.getChannels(_team_store2.default.getCurrentId(), page + 1, CHANNELS_PER_PAGE);\n        }\n    }, {\n        key: 'handleJoin',\n        value: function handleJoin(channel, done) {\n            var _this2 = this;\n\n            (0, _channel_actions.joinChannel)(channel, function () {\n                _es.browserHistory.push(_team_store2.default.getCurrentTeamRelativeUrl() + '/channels/' + channel.name);\n                if (done) {\n                    done();\n                }\n\n                _this2.handleHide();\n            }, function (err) {\n                _this2.setState({ serverError: err.message });\n                if (done) {\n                    done();\n                }\n            });\n        }\n    }, {\n        key: 'search',\n        value: function search(term) {\n            var _this3 = this;\n\n            clearTimeout(this.searchTimeoutId);\n\n            if (term === '') {\n                this.onChange(true);\n                this.setState({ search: false });\n                this.searchTimeoutId = '';\n                return;\n            }\n\n            var searchTimeoutId = setTimeout(function () {\n                (0, _channel_actions.searchMoreChannels)(term, function (channels) {\n                    if (searchTimeoutId !== _this3.searchTimeoutId) {\n                        return;\n                    }\n                    _this3.setState({ search: true, channels: channels });\n                });\n            }, SEARCH_TIMEOUT_MILLISECONDS);\n\n            this.searchTimeoutId = searchTimeoutId;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var serverError = void 0;\n            if (this.state.serverError) {\n                serverError = _react2.default.createElement(\n                    'div',\n                    { className: 'form-group has-error' },\n                    _react2.default.createElement(\n                        'label',\n                        { className: 'control-label' },\n                        this.state.serverError\n                    )\n                );\n            }\n\n            var createNewChannelButton = _react2.default.createElement(\n                'button',\n                {\n                    id: 'createNewChannel',\n                    type: 'button',\n                    className: 'btn btn-primary channel-create-btn',\n                    onClick: this.props.handleNewChannel\n                },\n                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'more_channels.create',\n                    defaultMessage: 'Create New Channel'\n                })\n            );\n\n            var createChannelHelpText = _react2.default.createElement(\n                'p',\n                { className: 'secondary-message' },\n                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'more_channels.createClick',\n                    defaultMessage: 'Click \\'Create New Channel\\' to make a new one'\n                })\n            );\n\n            var isTeamAdmin = _team_store2.default.isTeamAdminForCurrentTeam();\n            var isSystemAdmin = _user_store2.default.isSystemAdminForCurrentUser();\n\n            if (!(0, _channel_utils.showCreateOption)(_constants2.default.OPEN_CHANNEL, isTeamAdmin, isSystemAdmin)) {\n                createNewChannelButton = null;\n                createChannelHelpText = null;\n            }\n\n            return _react2.default.createElement(\n                _reactBootstrap.Modal,\n                {\n                    dialogClassName: 'more-modal more-modal--action',\n                    show: this.state.show,\n                    onHide: this.handleHide,\n                    onExited: this.handleExit\n                },\n                _react2.default.createElement(\n                    _reactBootstrap.Modal.Header,\n                    { closeButton: true },\n                    _react2.default.createElement(\n                        _reactBootstrap.Modal.Title,\n                        null,\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'more_channels.title',\n                            defaultMessage: 'More Channels'\n                        })\n                    ),\n                    createNewChannelButton\n                ),\n                _react2.default.createElement(\n                    _reactBootstrap.Modal.Body,\n                    null,\n                    _react2.default.createElement(_searchable_channel_list2.default, {\n                        channels: this.state.channels,\n                        channelsPerPage: CHANNELS_PER_PAGE,\n                        nextPage: this.nextPage,\n                        isSearch: this.state.search,\n                        search: this.search,\n                        handleJoin: this.handleJoin,\n                        noResultsText: createChannelHelpText\n                    }),\n                    serverError\n                )\n            );\n        }\n    }]);\n    return MoreChannels;\n}(_react2.default.Component);\n\nMoreChannels.propTypes = {\n    onModalDismissed: _propTypes2.default.func,\n    handleNewChannel: _propTypes2.default.func,\n    actions: _propTypes2.default.shape({\n        getChannels: _propTypes2.default.func.isRequired\n    }).isRequired\n};\nexports.default = MoreChannels;\n\n/***/ }),\n\n/***/ 2487:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(4);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(7);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(8);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _propTypes = __webpack_require__(2);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(47);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _reactIntl = __webpack_require__(17);\n\nvar _user_agent = __webpack_require__(87);\n\nvar UserAgent = _interopRequireWildcard(_user_agent);\n\nvar _utils = __webpack_require__(16);\n\nvar _load = __webpack_require__(208);\n\nvar _load2 = _interopRequireDefault(_load);\n\nvar _loading_screen = __webpack_require__(236);\n\nvar _loading_screen2 = _interopRequireDefault(_loading_screen);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NEXT_BUTTON_TIMEOUT_MILLISECONDS = 500; // Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar SearchableChannelList = function (_React$Component) {\n    (0, _inherits3.default)(SearchableChannelList, _React$Component);\n\n    function SearchableChannelList(props) {\n        (0, _classCallCheck3.default)(this, SearchableChannelList);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (SearchableChannelList.__proto__ || (0, _getPrototypeOf2.default)(SearchableChannelList)).call(this, props));\n\n        _this.createChannelRow = _this.createChannelRow.bind(_this);\n        _this.nextPage = _this.nextPage.bind(_this);\n        _this.previousPage = _this.previousPage.bind(_this);\n        _this.doSearch = _this.doSearch.bind(_this);\n\n        _this.nextTimeoutId = 0;\n\n        _this.state = {\n            joiningChannel: '',\n            page: 0,\n            nextDisabled: false\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(SearchableChannelList, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            // only focus the search box on desktop so that we don't cause the keyboard to open on mobile\n            if (!UserAgent.isMobile()) {\n                this.refs.filter.focus();\n            }\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps, prevState) {\n            if (prevState.page !== this.state.page) {\n                (0, _jquery2.default)(this.refs.channelList).scrollTop(0);\n            }\n        }\n    }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n            if (nextProps.isSearch && !this.props.isSearch) {\n                this.setState({ page: 0 });\n            }\n        }\n    }, {\n        key: 'handleJoin',\n        value: function handleJoin(channel) {\n            var _this2 = this;\n\n            this.setState({ joiningChannel: channel.id });\n            this.props.handleJoin(channel, function () {\n                _this2.setState({ joiningChannel: '' });\n            });\n        }\n    }, {\n        key: 'createChannelRow',\n        value: function createChannelRow(channel) {\n            var joinButton = void 0;\n            if (this.state.joiningChannel === channel.id) {\n                joinButton = _react2.default.createElement('img', {\n                    className: 'join-channel-loading-gif',\n                    src: _load2.default\n                });\n            } else {\n                joinButton = _react2.default.createElement(\n                    'button',\n                    {\n                        onClick: this.handleJoin.bind(this, channel),\n                        className: 'btn btn-primary',\n                        disabled: this.state.joiningChannel !== '' && this.state.joiningChannel !== channel.id\n                    },\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'more_channels.join',\n                        defaultMessage: 'Join'\n                    })\n                );\n            }\n\n            return _react2.default.createElement(\n                'div',\n                {\n                    className: 'more-modal__row',\n                    key: channel.id\n                },\n                _react2.default.createElement(\n                    'div',\n                    { className: 'more-modal__details' },\n                    _react2.default.createElement(\n                        'p',\n                        { className: 'more-modal__name' },\n                        channel.display_name\n                    ),\n                    _react2.default.createElement(\n                        'p',\n                        { className: 'more-modal__description' },\n                        channel.purpose\n                    )\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'more-modal__actions' },\n                    joinButton\n                )\n            );\n        }\n    }, {\n        key: 'nextPage',\n        value: function nextPage(e) {\n            var _this3 = this;\n\n            e.preventDefault();\n            this.setState({ page: this.state.page + 1, nextDisabled: true });\n            this.nextTimeoutId = setTimeout(function () {\n                return _this3.setState({ nextDisabled: false });\n            }, NEXT_BUTTON_TIMEOUT_MILLISECONDS);\n            this.props.nextPage(this.state.page + 1);\n            (0, _jquery2.default)(_reactDom2.default.findDOMNode(this.refs.channelListScroll)).scrollTop(0);\n        }\n    }, {\n        key: 'previousPage',\n        value: function previousPage(e) {\n            e.preventDefault();\n            this.setState({ page: this.state.page - 1 });\n            (0, _jquery2.default)(_reactDom2.default.findDOMNode(this.refs.channelListScroll)).scrollTop(0);\n        }\n    }, {\n        key: 'doSearch',\n        value: function doSearch() {\n            var term = this.refs.filter.value;\n            this.props.search(term);\n            if (term === '') {\n                this.setState({ page: 0 });\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var channels = this.props.channels;\n            var listContent = void 0;\n            var nextButton = void 0;\n            var previousButton = void 0;\n\n            if (channels == null) {\n                listContent = _react2.default.createElement(_loading_screen2.default, null);\n            } else if (channels.length === 0) {\n                listContent = _react2.default.createElement(\n                    'div',\n                    { className: 'no-channel-message' },\n                    _react2.default.createElement(\n                        'p',\n                        { className: 'primary-message' },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'more_channels.noMore',\n                            defaultMessage: 'No more channels to join'\n                        })\n                    ),\n                    this.props.noResultsText\n                );\n            } else {\n                var pageStart = this.state.page * this.props.channelsPerPage;\n                var pageEnd = pageStart + this.props.channelsPerPage;\n                var channelsToDisplay = this.props.channels.slice(pageStart, pageEnd);\n                listContent = channelsToDisplay.map(this.createChannelRow);\n\n                if (channelsToDisplay.length >= this.props.channelsPerPage && pageEnd < this.props.channels.length) {\n                    nextButton = _react2.default.createElement(\n                        'button',\n                        {\n                            className: 'btn btn-default filter-control filter-control__next',\n                            onClick: this.nextPage,\n                            disabled: this.state.nextDisabled\n                        },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'more_channels.next',\n                            defaultMessage: 'Next'\n                        })\n                    );\n                }\n\n                if (this.state.page > 0) {\n                    previousButton = _react2.default.createElement(\n                        'button',\n                        {\n                            className: 'btn btn-default filter-control filter-control__prev',\n                            onClick: this.previousPage\n                        },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'more_channels.prev',\n                            defaultMessage: 'Previous'\n                        })\n                    );\n                }\n            }\n\n            return _react2.default.createElement(\n                'div',\n                { className: 'filtered-user-list' },\n                _react2.default.createElement(\n                    'div',\n                    { className: 'filter-row' },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'col-sm-12' },\n                        _react2.default.createElement('input', {\n                            id: 'searchChannelsTextbox',\n                            ref: 'filter',\n                            className: 'form-control filter-textbox',\n                            placeholder: (0, _utils.localizeMessage)('filtered_channels_list.search', 'Search channels'),\n                            onInput: this.doSearch\n                        })\n                    )\n                ),\n                _react2.default.createElement(\n                    'div',\n                    {\n                        ref: 'channelList',\n                        className: 'more-modal__list'\n                    },\n                    _react2.default.createElement(\n                        'div',\n                        { ref: 'channelListScroll' },\n                        listContent\n                    )\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'filter-controls' },\n                    previousButton,\n                    nextButton\n                )\n            );\n        }\n    }]);\n    return SearchableChannelList;\n}(_react2.default.Component);\n\nexports.default = SearchableChannelList;\n\n\nSearchableChannelList.defaultProps = {\n    channels: [],\n    isSearch: false\n};\n\nSearchableChannelList.propTypes = {\n    channels: _propTypes2.default.arrayOf(_propTypes2.default.object),\n    channelsPerPage: _propTypes2.default.number,\n    nextPage: _propTypes2.default.func.isRequired,\n    isSearch: _propTypes2.default.bool,\n    search: _propTypes2.default.func.isRequired,\n    handleJoin: _propTypes2.default.func.isRequired,\n    noResultsText: _propTypes2.default.object\n};\n\n/***/ }),\n\n/***/ 2488:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = __webpack_require__(19);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _reactRedux = __webpack_require__(31);\n\nvar _redux = __webpack_require__(20);\n\nvar _users = __webpack_require__(61);\n\nvar _more_direct_channels = __webpack_require__(2489);\n\nvar _more_direct_channels2 = _interopRequireDefault(_more_direct_channels);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2017 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nfunction mapStateToProps(state, ownProps) {\n    return (0, _extends3.default)({}, ownProps);\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: (0, _redux.bindActionCreators)({\n            getProfiles: _users.getProfiles,\n            getProfilesInTeam: _users.getProfilesInTeam\n        }, dispatch)\n    };\n}\n\nexports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_more_direct_channels2.default);\n\n/***/ }),\n\n/***/ 2489:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _assign = __webpack_require__(41);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(4);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(7);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(8);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = __webpack_require__(2);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(40);\n\nvar _reactIntl = __webpack_require__(17);\n\nvar _es = __webpack_require__(44);\n\nvar _client = __webpack_require__(29);\n\nvar _users = __webpack_require__(50);\n\nvar _channel_actions = __webpack_require__(79);\n\nvar _user_actions = __webpack_require__(69);\n\nvar _redux_store = __webpack_require__(38);\n\nvar _redux_store2 = _interopRequireDefault(_redux_store);\n\nvar _team_store = __webpack_require__(35);\n\nvar _team_store2 = _interopRequireDefault(_team_store);\n\nvar _user_store = __webpack_require__(25);\n\nvar _user_store2 = _interopRequireDefault(_user_store);\n\nvar _constants = __webpack_require__(9);\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nvar _utils = __webpack_require__(16);\n\nvar _multiselect = __webpack_require__(450);\n\nvar _multiselect2 = _interopRequireDefault(_multiselect);\n\nvar _profile_picture = __webpack_require__(181);\n\nvar _profile_picture2 = _interopRequireDefault(_profile_picture);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar USERS_PER_PAGE = 50;\nvar MAX_SELECTABLE_VALUES = _constants2.default.MAX_USERS_IN_GM - 1;\n\nvar MoreDirectChannels = function (_React$Component) {\n    (0, _inherits3.default)(MoreDirectChannels, _React$Component);\n\n    function MoreDirectChannels(props) {\n        (0, _classCallCheck3.default)(this, MoreDirectChannels);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (MoreDirectChannels.__proto__ || (0, _getPrototypeOf2.default)(MoreDirectChannels)).call(this, props));\n\n        _this.resetPaging = function () {\n            if (_this.refs.multiselect) {\n                _this.refs.multiselect.resetPaging();\n            }\n        };\n\n        _this.handleHide = _this.handleHide.bind(_this);\n        _this.handleExit = _this.handleExit.bind(_this);\n        _this.handleSubmit = _this.handleSubmit.bind(_this);\n        _this.handleDelete = _this.handleDelete.bind(_this);\n        _this.handlePageChange = _this.handlePageChange.bind(_this);\n        _this.onChange = _this.onChange.bind(_this);\n        _this.search = _this.search.bind(_this);\n        _this.addValue = _this.addValue.bind(_this);\n\n        _this.searchTimeoutId = 0;\n        _this.term = '';\n        _this.listType = global.window.mm_config.RestrictDirectMessage;\n\n        var values = [];\n        if (props.startingUsers) {\n            for (var i = 0; i < props.startingUsers.length; i++) {\n                var user = (0, _assign2.default)({}, props.startingUsers[i]);\n                user.value = user.id;\n                user.label = '@' + user.username;\n                values.push(user);\n            }\n        }\n\n        _this.state = {\n            users: null,\n            values: values,\n            show: true,\n            search: false,\n            loadingChannel: -1\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(MoreDirectChannels, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            _user_store2.default.addChangeListener(this.onChange);\n            _user_store2.default.addInTeamChangeListener(this.onChange);\n            _user_store2.default.addStatusesChangeListener(this.onChange);\n\n            if (this.listType === 'any') {\n                this.props.actions.getProfiles(0, USERS_PER_PAGE * 2);\n            } else {\n                this.props.actions.getProfilesInTeam(_team_store2.default.getCurrentId(), 0, USERS_PER_PAGE * 2);\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            _user_store2.default.removeChangeListener(this.onChange);\n            _user_store2.default.removeInTeamChangeListener(this.onChange);\n            _user_store2.default.removeStatusesChangeListener(this.onChange);\n        }\n    }, {\n        key: 'handleHide',\n        value: function handleHide() {\n            this.setState({ show: false });\n        }\n    }, {\n        key: 'handleExit',\n        value: function handleExit() {\n            if (this.exitToChannel) {\n                _es.browserHistory.push(this.exitToChannel);\n            }\n\n            if (this.props.onModalDismissed) {\n                this.props.onModalDismissed();\n            }\n        }\n    }, {\n        key: 'handleSubmit',\n        value: function handleSubmit(e) {\n            var _this2 = this;\n\n            if (e) {\n                e.preventDefault();\n            }\n\n            if (this.state.loadingChannel !== -1) {\n                return;\n            }\n\n            var userIds = this.state.values.map(function (v) {\n                return v.id;\n            });\n            if (userIds.length === 0) {\n                return;\n            }\n\n            this.setState({ loadingChannel: 1 });\n\n            var success = function success(channel) {\n                // Due to how react-overlays Modal handles focus, we delay pushing\n                // the new channel information until the modal is fully exited.\n                // The channel information will be pushed in `handleExit`\n                _this2.exitToChannel = _team_store2.default.getCurrentTeamRelativeUrl() + '/channels/' + channel.name;\n                _this2.setState({ loadingChannel: -1 });\n                _this2.handleHide();\n            };\n\n            var error = function error() {\n                _this2.setState({ loadingChannel: -1 });\n            };\n\n            if (userIds.length === 1) {\n                (0, _channel_actions.openDirectChannelToUser)(userIds[0], success, error);\n            } else {\n                (0, _channel_actions.openGroupChannelToUsers)(userIds, success, error);\n            }\n        }\n    }, {\n        key: 'addValue',\n        value: function addValue(value) {\n            var values = (0, _assign2.default)([], this.state.values);\n            if (values.indexOf(value) === -1) {\n                values.push(value);\n            }\n\n            this.setState({ values: values });\n        }\n    }, {\n        key: 'onChange',\n        value: function onChange() {\n            var users = void 0;\n            if (this.term) {\n                if (this.listType === 'any') {\n                    users = (0, _assign2.default)([], (0, _users.searchProfiles)(_redux_store2.default.getState(), this.term, true));\n                } else {\n                    users = (0, _assign2.default)([], (0, _users.searchProfilesInCurrentTeam)(_redux_store2.default.getState(), this.term, true));\n                }\n            } else if (this.listType === 'any') {\n                users = (0, _assign2.default)([], _user_store2.default.getProfileList(true));\n            } else {\n                users = (0, _assign2.default)([], _user_store2.default.getProfileListInTeam(_team_store2.default.getCurrentId(), true));\n            }\n\n            for (var i = 0; i < users.length; i++) {\n                var user = (0, _assign2.default)({}, users[i]);\n                user.value = user.id;\n                user.label = '@' + user.username;\n                users[i] = user;\n            }\n\n            this.setState({\n                users: users\n            });\n        }\n    }, {\n        key: 'handlePageChange',\n        value: function handlePageChange(page, prevPage) {\n            if (page > prevPage) {\n                if (this.listType === 'any') {\n                    this.props.actions.getProfiles(page + 1, USERS_PER_PAGE);\n                } else {\n                    this.props.actions.getProfilesInTeam(page + 1, USERS_PER_PAGE);\n                }\n            }\n        }\n    }, {\n        key: 'search',\n        value: function search(term) {\n            var _this3 = this;\n\n            clearTimeout(this.searchTimeoutId);\n            this.term = term;\n\n            if (term === '') {\n                this.resetPaging();\n                this.onChange();\n                return;\n            }\n\n            var teamId = void 0;\n            if (this.listType === 'any') {\n                teamId = '';\n            } else {\n                teamId = _team_store2.default.getCurrentId();\n            }\n\n            this.searchTimeoutId = setTimeout(function () {\n                (0, _user_actions.searchUsers)(term, teamId, {}, _this3.resetPaging);\n            }, _constants2.default.SEARCH_TIMEOUT_MILLISECONDS);\n        }\n    }, {\n        key: 'handleDelete',\n        value: function handleDelete(values) {\n            this.setState({ values: values });\n        }\n    }, {\n        key: 'renderOption',\n        value: function renderOption(option, isSelected, onAdd) {\n            var rowSelected = '';\n            if (isSelected) {\n                rowSelected = 'more-modal__row--selected';\n            }\n\n            return _react2.default.createElement(\n                'div',\n                {\n                    key: option.id,\n                    ref: isSelected ? 'selected' : option.id,\n                    className: 'more-modal__row clickable ' + rowSelected,\n                    onClick: function onClick() {\n                        return onAdd(option);\n                    }\n                },\n                _react2.default.createElement(_profile_picture2.default, {\n                    src: _client.Client4.getProfilePictureUrl(option.id, option.last_picture_update),\n                    status: '' + _user_store2.default.getStatus(option.id),\n                    width: '32',\n                    height: '32'\n                }),\n                _react2.default.createElement(\n                    'div',\n                    {\n                        className: 'more-modal__details'\n                    },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'more-modal__name' },\n                        (0, _utils.displayEntireNameForUser)(option)\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'more-modal__description' },\n                        option.email\n                    )\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'more-modal__actions' },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'more-modal__actions--round' },\n                        _react2.default.createElement('i', { className: 'fa fa-plus' })\n                    )\n                )\n            );\n        }\n    }, {\n        key: 'renderValue',\n        value: function renderValue(user) {\n            return user.username;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var note = void 0;\n            if (this.props.startingUsers) {\n                if (this.state.values && this.state.values.length >= MAX_SELECTABLE_VALUES) {\n                    note = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'more_direct_channels.new_convo_note.full',\n                        defaultMessage: 'You\\u2019ve reached the maximum number of people for this conversation. Consider creating a private channel instead.'\n                    });\n                } else {\n                    note = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'more_direct_channels.new_convo_note',\n                        defaultMessage: 'This will start a new conversation. If you\\u2019re adding a lot of people, consider creating a private channel instead.'\n                    });\n                }\n            }\n\n            var buttonSubmitText = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                id: 'multiselect.go',\n                defaultMessage: 'Go'\n            });\n\n            var numRemainingText = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                id: 'multiselect.numPeopleRemaining',\n                defaultMessage: 'Use \\u2191\\u2193 to browse, \\u21B5 to select. You can add {num, number} more {num, plural, one {person} other {people}}. ',\n                values: {\n                    num: MAX_SELECTABLE_VALUES - this.state.values.length\n                }\n            });\n\n            var users = [];\n            if (this.state.users) {\n                users = this.state.users.filter(function (user) {\n                    return user.delete_at === 0;\n                });\n            }\n\n            return _react2.default.createElement(\n                _reactBootstrap.Modal,\n                {\n                    dialogClassName: 'more-modal more-direct-channels',\n                    show: this.state.show,\n                    onHide: this.handleHide,\n                    onExited: this.handleExit\n                },\n                _react2.default.createElement(\n                    _reactBootstrap.Modal.Header,\n                    { closeButton: true },\n                    _react2.default.createElement(\n                        _reactBootstrap.Modal.Title,\n                        null,\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'more_direct_channels.title',\n                            defaultMessage: 'Direct Messages'\n                        })\n                    )\n                ),\n                _react2.default.createElement(\n                    _reactBootstrap.Modal.Body,\n                    null,\n                    _react2.default.createElement(_multiselect2.default, {\n                        key: 'moreDirectChannelsList',\n                        ref: 'multiselect',\n                        options: users,\n                        optionRenderer: this.renderOption,\n                        values: this.state.values,\n                        valueRenderer: this.renderValue,\n                        perPage: USERS_PER_PAGE,\n                        handlePageChange: this.handlePageChange,\n                        handleInput: this.search,\n                        handleDelete: this.handleDelete,\n                        handleAdd: this.addValue,\n                        handleSubmit: this.handleSubmit,\n                        noteText: note,\n                        maxValues: MAX_SELECTABLE_VALUES,\n                        numRemainingText: numRemainingText,\n                        buttonSubmitText: buttonSubmitText\n                    })\n                )\n            );\n        }\n    }]);\n    return MoreDirectChannels;\n}(_react2.default.Component);\n\nMoreDirectChannels.propTypes = {\n    startingUsers: _propTypes2.default.arrayOf(_propTypes2.default.object),\n    onModalDismissed: _propTypes2.default.func,\n    actions: _propTypes2.default.shape({\n        getProfiles: _propTypes2.default.func.isRequired,\n        getProfilesInTeam: _propTypes2.default.func.isRequired\n    }).isRequired\n};\nexports.default = MoreDirectChannels;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))\n\n/***/ }),\n\n/***/ 2490:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(4);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(7);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(8);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = __webpack_require__(2);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactIntl = __webpack_require__(17);\n\nvar _es = __webpack_require__(44);\n\nvar _channel_actions = __webpack_require__(79);\n\nvar _team_store = __webpack_require__(35);\n\nvar _team_store2 = _interopRequireDefault(_team_store);\n\nvar _url = __webpack_require__(78);\n\nvar _utils = __webpack_require__(16);\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _new_channel_modal = __webpack_require__(2491);\n\nvar _new_channel_modal2 = _interopRequireDefault(_new_channel_modal);\n\nvar _change_url_modal = __webpack_require__(2493);\n\nvar _change_url_modal2 = _interopRequireDefault(_change_url_modal);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar SHOW_NEW_CHANNEL = 1;\nvar SHOW_EDIT_URL = 2;\nvar SHOW_EDIT_URL_THEN_COMPLETE = 3;\n\nvar NewChannelFlow = function (_React$Component) {\n    (0, _inherits3.default)(NewChannelFlow, _React$Component);\n\n    function NewChannelFlow(props) {\n        (0, _classCallCheck3.default)(this, NewChannelFlow);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (NewChannelFlow.__proto__ || (0, _getPrototypeOf2.default)(NewChannelFlow)).call(this, props));\n\n        _this.doSubmit = _this.doSubmit.bind(_this);\n        _this.onModalExited = _this.onModalExited.bind(_this);\n        _this.typeSwitched = _this.typeSwitched.bind(_this);\n        _this.urlChangeRequested = _this.urlChangeRequested.bind(_this);\n        _this.urlChangeSubmitted = _this.urlChangeSubmitted.bind(_this);\n        _this.urlChangeDismissed = _this.urlChangeDismissed.bind(_this);\n        _this.channelDataChanged = _this.channelDataChanged.bind(_this);\n\n        _this.state = {\n            serverError: '',\n            channelType: 'O',\n            flowState: SHOW_NEW_CHANNEL,\n            channelDisplayName: '',\n            channelName: '',\n            channelPurpose: '',\n            channelHeader: '',\n            nameModified: false\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(NewChannelFlow, [{\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n            // If we are being shown, grab channel type from props and clear\n            if (nextProps.show === true && this.props.show === false) {\n                this.setState({\n                    serverError: '',\n                    channelType: nextProps.channelType,\n                    flowState: SHOW_NEW_CHANNEL,\n                    channelDisplayName: '',\n                    channelName: '',\n                    channelPurpose: '',\n                    channelHeader: '',\n                    nameModified: false\n                });\n            }\n        }\n    }, {\n        key: 'doSubmit',\n        value: function doSubmit() {\n            var _this2 = this;\n\n            if (!this.state.channelDisplayName) {\n                this.setState({ serverError: Utils.localizeMessage('channel_flow.invalidName', 'Invalid Channel Name') });\n                return;\n            }\n\n            if (this.state.channelName < 2) {\n                this.setState({ flowState: SHOW_EDIT_URL_THEN_COMPLETE });\n                return;\n            }\n\n            var channel = {\n                team_id: _team_store2.default.getCurrentId(),\n                name: this.state.channelName,\n                display_name: this.state.channelDisplayName,\n                purpose: this.state.channelPurpose,\n                header: this.state.channelHeader,\n                type: this.state.channelType\n            };\n\n            (0, _channel_actions.createChannel)(channel, function (data) {\n                _this2.doOnModalExited = function () {\n                    _es.browserHistory.push(_team_store2.default.getCurrentTeamRelativeUrl() + '/channels/' + data.name);\n                };\n\n                _this2.props.onModalDismissed();\n            }, function (err) {\n                if (err.id === 'model.channel.is_valid.2_or_more.app_error') {\n                    _this2.setState({\n                        flowState: SHOW_EDIT_URL_THEN_COMPLETE,\n                        serverError: _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'channel_flow.handleTooShort',\n                            defaultMessage: 'Channel URL must be 2 or more lowercase alphanumeric characters'\n                        })\n                    });\n                    return;\n                }\n                if (err.id === 'store.sql_channel.update.exists.app_error') {\n                    _this2.setState({ serverError: Utils.localizeMessage('channel_flow.alreadyExist', 'A channel with that URL already exists') });\n                    return;\n                }\n                _this2.setState({ serverError: err.message });\n            });\n        }\n    }, {\n        key: 'onModalExited',\n        value: function onModalExited() {\n            if (this.doOnModalExited) {\n                this.doOnModalExited();\n            }\n        }\n    }, {\n        key: 'typeSwitched',\n        value: function typeSwitched() {\n            if (this.state.channelType === 'P') {\n                this.setState({ channelType: 'O' });\n            } else {\n                this.setState({ channelType: 'P' });\n            }\n        }\n    }, {\n        key: 'urlChangeRequested',\n        value: function urlChangeRequested() {\n            this.setState({ flowState: SHOW_EDIT_URL });\n        }\n    }, {\n        key: 'urlChangeSubmitted',\n        value: function urlChangeSubmitted(newURL) {\n            if (this.state.flowState === SHOW_EDIT_URL_THEN_COMPLETE) {\n                this.setState({ channelName: newURL, nameModified: true }, this.doSubmit);\n            } else {\n                this.setState({ flowState: SHOW_NEW_CHANNEL, serverError: null, channelName: newURL, nameModified: true });\n            }\n        }\n    }, {\n        key: 'urlChangeDismissed',\n        value: function urlChangeDismissed() {\n            this.setState({ flowState: SHOW_NEW_CHANNEL });\n        }\n    }, {\n        key: 'channelDataChanged',\n        value: function channelDataChanged(data) {\n            this.setState({\n                channelDisplayName: data.displayName,\n                channelPurpose: data.purpose,\n                channelHeader: data.header\n            });\n            if (!this.state.nameModified) {\n                this.setState({ channelName: (0, _url.cleanUpUrlable)(data.displayName.trim()) });\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var channelData = {\n                name: this.state.channelName,\n                displayName: this.state.channelDisplayName,\n                purpose: this.state.channelPurpose\n            };\n\n            var showChannelModal = false;\n            var showGroupModal = false;\n            var showChangeURLModal = false;\n\n            var changeURLTitle = '';\n            var changeURLSubmitButtonText = '';\n\n            // Only listen to flow state if we are being shown\n            if (this.props.show) {\n                switch (this.state.flowState) {\n                    case SHOW_NEW_CHANNEL:\n                        if (this.state.channelType === 'O') {\n                            showChannelModal = true;\n                        } else {\n                            showGroupModal = true;\n                        }\n                        break;\n                    case SHOW_EDIT_URL:\n                        showChangeURLModal = true;\n                        changeURLTitle = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'channel_flow.changeUrlTitle',\n                            defaultMessage: 'Change Channel URL'\n                        });\n                        changeURLSubmitButtonText = changeURLTitle;\n                        break;\n                    case SHOW_EDIT_URL_THEN_COMPLETE:\n                        showChangeURLModal = true;\n                        changeURLTitle = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'channel_flow.set_url_title',\n                            defaultMessage: 'Set Channel URL'\n                        });\n                        changeURLSubmitButtonText = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'channel_flow.create',\n                            defaultMessage: 'Create Channel'\n                        });\n                        break;\n                }\n            }\n            return _react2.default.createElement(\n                'span',\n                null,\n                _react2.default.createElement(_new_channel_modal2.default, {\n                    show: showChannelModal,\n                    channelType: 'O',\n                    channelData: channelData,\n                    serverError: this.state.serverError,\n                    onSubmitChannel: this.doSubmit,\n                    onModalDismissed: this.props.onModalDismissed,\n                    onModalExited: this.onModalExited,\n                    onTypeSwitched: this.typeSwitched,\n                    onChangeURLPressed: this.urlChangeRequested,\n                    onDataChanged: this.channelDataChanged\n                }),\n                _react2.default.createElement(_new_channel_modal2.default, {\n                    show: showGroupModal,\n                    channelType: 'P',\n                    channelData: channelData,\n                    serverError: this.state.serverError,\n                    onSubmitChannel: this.doSubmit,\n                    onModalExited: this.onModalExited,\n                    onModalDismissed: this.props.onModalDismissed,\n                    onTypeSwitched: this.typeSwitched,\n                    onChangeURLPressed: this.urlChangeRequested,\n                    onDataChanged: this.channelDataChanged\n                }),\n                _react2.default.createElement(_change_url_modal2.default, {\n                    show: showChangeURLModal,\n                    title: changeURLTitle,\n                    submitButtonText: changeURLSubmitButtonText,\n                    currentURL: this.state.channelName,\n                    serverError: this.state.serverError,\n                    onModalSubmit: this.urlChangeSubmitted,\n                    onModalDismissed: this.urlChangeDismissed,\n                    onModalExited: this.onModalExited\n                })\n            );\n        }\n    }]);\n    return NewChannelFlow;\n}(_react2.default.Component);\n\nexports.default = NewChannelFlow;\n\n\nNewChannelFlow.defaultProps = {\n    show: false,\n    channelType: 'O'\n};\n\nNewChannelFlow.propTypes = {\n    show: _propTypes2.default.bool.isRequired,\n    channelType: _propTypes2.default.string.isRequired,\n    onModalDismissed: _propTypes2.default.func.isRequired\n};\n\n/***/ }),\n\n/***/ 2491:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = __webpack_require__(19);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _reactRedux = __webpack_require__(31);\n\nvar _constants = __webpack_require__(26);\n\nvar _preferences = __webpack_require__(64);\n\nvar _teams = __webpack_require__(120);\n\nvar _users = __webpack_require__(50);\n\nvar _new_channel_modal = __webpack_require__(2492);\n\nvar _new_channel_modal2 = _interopRequireDefault(_new_channel_modal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2017 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nfunction mapStateToProps(state, ownProps) {\n    return (0, _extends3.default)({}, ownProps, {\n        ctrlSend: (0, _preferences.getBool)(state, _constants.Preferences.CATEGORY_ADVANCED_SETTINGS, 'send_on_ctrl_enter'),\n        isTeamAdmin: (0, _teams.isCurrentUserCurrentTeamAdmin)(state),\n        isSystemAdmin: (0, _users.isCurrentUserSystemAdmin)(state)\n    });\n}\n\nexports.default = (0, _reactRedux.connect)(mapStateToProps)(_new_channel_modal2.default);\n\n/***/ }),\n\n/***/ 2492:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(4);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(7);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(8);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _propTypes = __webpack_require__(2);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(40);\n\nvar _reactDom = __webpack_require__(47);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _reactIntl = __webpack_require__(17);\n\nvar _channel_utils = __webpack_require__(121);\n\nvar ChannelUtils = _interopRequireWildcard(_channel_utils);\n\nvar _constants = __webpack_require__(9);\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nvar _url = __webpack_require__(78);\n\nvar _user_agent = __webpack_require__(87);\n\nvar UserAgent = _interopRequireWildcard(_user_agent);\n\nvar _utils = __webpack_require__(16);\n\nvar Utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NewChannelModal = function (_React$PureComponent) {\n    (0, _inherits3.default)(NewChannelModal, _React$PureComponent);\n\n    function NewChannelModal(props) {\n        (0, _classCallCheck3.default)(this, NewChannelModal);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (NewChannelModal.__proto__ || (0, _getPrototypeOf2.default)(NewChannelModal)).call(this, props));\n\n        _this.handleSubmit = _this.handleSubmit.bind(_this);\n        _this.handleChange = _this.handleChange.bind(_this);\n        _this.onEnterKeyDown = _this.onEnterKeyDown.bind(_this);\n\n        _this.state = {\n            displayNameError: ''\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(NewChannelModal, [{\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n            if (nextProps.show === true && this.props.show === false) {\n                this.setState({\n                    displayNameError: ''\n                });\n\n                document.addEventListener('keydown', this.onEnterKeyDown);\n            } else if (nextProps.show === false && this.props.show === true) {\n                document.removeEventListener('keydown', this.onEnterKeyDown);\n            }\n        }\n    }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            // ???\n            if (UserAgent.isInternetExplorer() || UserAgent.isEdge()) {\n                (0, _jquery2.default)('body').addClass('browser--ie');\n            }\n        }\n    }, {\n        key: 'onEnterKeyDown',\n        value: function onEnterKeyDown(e) {\n            if (this.props.ctrlSend && e.keyCode === _constants2.default.KeyCodes.ENTER && e.ctrlKey) {\n                this.handleSubmit(e);\n            } else if (!this.props.ctrlSend && e.keyCode === _constants2.default.KeyCodes.ENTER && !e.shiftKey && !e.altKey) {\n                this.handleSubmit(e);\n            }\n        }\n    }, {\n        key: 'handleSubmit',\n        value: function handleSubmit(e) {\n            e.preventDefault();\n\n            var displayName = _reactDom2.default.findDOMNode(this.refs.display_name).value.trim();\n            if (displayName.length < _constants2.default.MIN_CHANNELNAME_LENGTH) {\n                this.setState({ displayNameError: true });\n                return;\n            }\n\n            this.props.onSubmitChannel();\n        }\n    }, {\n        key: 'handleChange',\n        value: function handleChange() {\n            var newData = {\n                displayName: this.refs.display_name.value,\n                header: this.refs.channel_header.value,\n                purpose: this.refs.channel_purpose.value\n            };\n            this.props.onDataChanged(newData);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var displayNameError = null;\n            var serverError = null;\n            var displayNameClass = 'form-group';\n\n            if (this.state.displayNameError) {\n                displayNameError = _react2.default.createElement(\n                    'p',\n                    { className: 'input__help error' },\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'channel_modal.displayNameError',\n                        defaultMessage: 'Channel name must be 2 or more characters'\n                    }),\n                    this.state.displayNameError\n                );\n                displayNameClass += ' has-error';\n            }\n\n            if (this.props.serverError) {\n                serverError = _react2.default.createElement(\n                    'div',\n                    { className: 'form-group has-error' },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'col-sm-12' },\n                        _react2.default.createElement(\n                            'p',\n                            { className: 'input__help error' },\n                            this.props.serverError\n                        )\n                    )\n                );\n            }\n\n            var createPublicChannelLink = _react2.default.createElement(\n                'a',\n                {\n                    href: '#',\n                    onClick: this.props.onTypeSwitched\n                },\n                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'channel_modal.publicChannel1',\n                    defaultMessage: 'Create a public channel'\n                })\n            );\n\n            var createPrivateChannelLink = _react2.default.createElement(\n                'a',\n                {\n                    href: '#',\n                    onClick: this.props.onTypeSwitched\n                },\n                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'channel_modal.privateGroup2',\n                    defaultMessage: 'Create a private channel'\n                })\n            );\n\n            if (!ChannelUtils.showCreateOption(_constants2.default.OPEN_CHANNEL, this.props.isTeamAdmin, this.props.isSystemAdmin)) {\n                createPublicChannelLink = null;\n            }\n\n            if (!ChannelUtils.showCreateOption(_constants2.default.PRIVATE_CHANNEL, this.props.isTeamAdmin, this.props.isSystemAdmin)) {\n                createPrivateChannelLink = null;\n            }\n\n            var channelSwitchText = '';\n            var inputPrefixId = '';\n            switch (this.props.channelType) {\n                case 'P':\n                    channelSwitchText = _react2.default.createElement(\n                        'div',\n                        { className: 'modal-intro' },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'channel_modal.privateGroup1',\n                            defaultMessage: 'Create a new private channel with restricted membership. '\n                        }),\n                        createPublicChannelLink\n                    );\n                    inputPrefixId = 'newPrivateChannel';\n                    break;\n                case 'O':\n                    channelSwitchText = _react2.default.createElement(\n                        'div',\n                        { className: 'modal-intro' },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'channel_modal.publicChannel2',\n                            defaultMessage: 'Create a new public channel anyone can join. '\n                        }),\n                        createPrivateChannelLink\n                    );\n                    inputPrefixId = 'newPublicChannel';\n                    break;\n            }\n\n            var prettyTeamURL = (0, _url.getShortenedURL)();\n\n            return _react2.default.createElement(\n                'span',\n                null,\n                _react2.default.createElement(\n                    _reactBootstrap.Modal,\n                    {\n                        dialogClassName: 'new-channel__modal',\n                        show: this.props.show,\n                        bsSize: 'large',\n                        onHide: this.props.onModalDismissed,\n                        onExited: this.props.onModalExited\n                    },\n                    _react2.default.createElement(\n                        _reactBootstrap.Modal.Header,\n                        { closeButton: true },\n                        _react2.default.createElement(\n                            _reactBootstrap.Modal.Title,\n                            null,\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'channel_modal.modalTitle',\n                                defaultMessage: 'New Channel'\n                            })\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'form',\n                        {\n                            role: 'form',\n                            className: 'form-horizontal'\n                        },\n                        _react2.default.createElement(\n                            _reactBootstrap.Modal.Body,\n                            null,\n                            _react2.default.createElement(\n                                'div',\n                                null,\n                                channelSwitchText\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: displayNameClass },\n                                _react2.default.createElement(\n                                    'label',\n                                    { className: 'col-sm-3 form__label control-label' },\n                                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                        id: 'channel_modal.name',\n                                        defaultMessage: 'Name'\n                                    })\n                                ),\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'col-sm-9' },\n                                    _react2.default.createElement('input', {\n                                        id: inputPrefixId + 'Name',\n                                        onChange: this.handleChange,\n                                        type: 'text',\n                                        ref: 'display_name',\n                                        className: 'form-control',\n                                        placeholder: Utils.localizeMessage('channel_modal.nameEx', 'E.g.: \"Bugs\", \"Marketing\", \"客户支持\"'),\n                                        maxLength: _constants2.default.MAX_CHANNELNAME_LENGTH,\n                                        value: this.props.channelData.displayName,\n                                        autoFocus: true,\n                                        tabIndex: '1'\n                                    }),\n                                    displayNameError,\n                                    _react2.default.createElement(\n                                        'p',\n                                        { className: 'input__help dark' },\n                                        'URL: ' + prettyTeamURL + this.props.channelData.name + ' (',\n                                        _react2.default.createElement(\n                                            'button',\n                                            {\n                                                className: 'color--link style--none',\n                                                onClick: this.props.onChangeURLPressed\n                                            },\n                                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                                id: 'channel_modal.edit',\n                                                defaultMessage: 'Edit'\n                                            })\n                                        ),\n                                        ')'\n                                    )\n                                )\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'form-group' },\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'col-sm-3' },\n                                    _react2.default.createElement(\n                                        'label',\n                                        { className: 'form__label control-label' },\n                                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                            id: 'channel_modal.purpose',\n                                            defaultMessage: 'Purpose'\n                                        })\n                                    ),\n                                    _react2.default.createElement(\n                                        'label',\n                                        { className: 'form__label light' },\n                                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                            id: 'channel_modal.optional',\n                                            defaultMessage: '(optional)'\n                                        })\n                                    )\n                                ),\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'col-sm-9' },\n                                    _react2.default.createElement('textarea', {\n                                        id: inputPrefixId + 'Purpose',\n                                        className: 'form-control no-resize',\n                                        ref: 'channel_purpose',\n                                        rows: '4',\n                                        placeholder: Utils.localizeMessage('channel_modal.purposeEx', 'E.g.: \"A channel to file bugs and improvements\"'),\n                                        maxLength: '250',\n                                        value: this.props.channelData.purpose,\n                                        onChange: this.handleChange,\n                                        tabIndex: '2'\n                                    }),\n                                    _react2.default.createElement(\n                                        'p',\n                                        { className: 'input__help' },\n                                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                            id: 'channel_modal.descriptionHelp',\n                                            defaultMessage: 'Describe how this channel should be used.'\n                                        })\n                                    )\n                                )\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'form-group less' },\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'col-sm-3' },\n                                    _react2.default.createElement(\n                                        'label',\n                                        { className: 'form__label control-label' },\n                                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                            id: 'channel_modal.header',\n                                            defaultMessage: 'Header'\n                                        })\n                                    ),\n                                    _react2.default.createElement(\n                                        'label',\n                                        { className: 'form__label light' },\n                                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                            id: 'channel_modal.optional',\n                                            defaultMessage: '(optional)'\n                                        })\n                                    )\n                                ),\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'col-sm-9' },\n                                    _react2.default.createElement('textarea', {\n                                        id: inputPrefixId + 'Header',\n                                        className: 'form-control no-resize',\n                                        ref: 'channel_header',\n                                        rows: '4',\n                                        placeholder: Utils.localizeMessage('channel_modal.headerEx', 'E.g.: \"[Link Title](http://example.com)\"'),\n                                        maxLength: '1024',\n                                        value: this.props.channelData.header,\n                                        onChange: this.handleChange,\n                                        tabIndex: '2'\n                                    }),\n                                    _react2.default.createElement(\n                                        'p',\n                                        { className: 'input__help' },\n                                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                            id: 'channel_modal.headerHelp',\n                                            defaultMessage: 'Set text that will appear in the header of the channel beside the channel name. For example, include frequently used links by typing [Link Title](http://example.com).'\n                                        })\n                                    ),\n                                    serverError\n                                )\n                            )\n                        ),\n                        _react2.default.createElement(\n                            _reactBootstrap.Modal.Footer,\n                            null,\n                            _react2.default.createElement(\n                                'button',\n                                {\n                                    type: 'button',\n                                    className: 'btn btn-default',\n                                    onClick: this.props.onModalDismissed\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'channel_modal.cancel',\n                                    defaultMessage: 'Cancel'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'button',\n                                {\n                                    onClick: this.handleSubmit,\n                                    type: 'submit',\n                                    className: 'btn btn-primary',\n                                    tabIndex: '3'\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'channel_modal.createNew',\n                                    defaultMessage: 'Create New Channel'\n                                })\n                            )\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return NewChannelModal;\n}(_react2.default.PureComponent); // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nNewChannelModal.propTypes = {\n\n    /**\n     * Set whether to show the modal or not\n     */\n    show: _propTypes2.default.bool.isRequired,\n\n    /**\n     * The type of channel to create, 'O' or 'P'\n     */\n    channelType: _propTypes2.default.string.isRequired,\n\n    /**\n     * The data needed to create the channel\n     */\n    channelData: _propTypes2.default.object.isRequired,\n\n    /**\n     * Set to force form submission on CTRL/CMD + ENTER instead of ENTER\n     */\n    ctrlSend: _propTypes2.default.bool,\n\n    /**\n     * Set to show options available to team admins\n     */\n    isTeamAdmin: _propTypes2.default.bool,\n\n    /**\n     * Set to show options available to system admins\n     */\n    isSystemAdmin: _propTypes2.default.bool,\n\n    /**\n     * Server error from failed channel creation\n     */\n    serverError: _propTypes2.default.node,\n\n    /**\n     * Function used to submit the channel\n     */\n    onSubmitChannel: _propTypes2.default.func.isRequired,\n\n    /**\n     * Function to call when modal is dimissed\n     */\n    onModalDismissed: _propTypes2.default.func.isRequired,\n\n    /**\n     * Function to call when modal has exited\n     */\n    onModalExited: _propTypes2.default.func,\n\n    /**\n     * Function to call to switch channel type\n     */\n    onTypeSwitched: _propTypes2.default.func.isRequired,\n\n    /**\n     * Function to call when edit URL button is pressed\n     */\n    onChangeURLPressed: _propTypes2.default.func.isRequired,\n\n    /**\n     * Function to call when channel data is modified\n     */\n    onDataChanged: _propTypes2.default.func.isRequired\n};\nexports.default = NewChannelModal;\n\n/***/ }),\n\n/***/ 2493:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(4);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(7);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(8);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = __webpack_require__(2);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(40);\n\nvar _reactDom = __webpack_require__(47);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _reactIntl = __webpack_require__(17);\n\nvar _team_store = __webpack_require__(35);\n\nvar _team_store2 = _interopRequireDefault(_team_store);\n\nvar _constants = __webpack_require__(9);\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nvar _url = __webpack_require__(78);\n\nvar URL = _interopRequireWildcard(_url);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar ChangeUrlModal = function (_React$Component) {\n    (0, _inherits3.default)(ChangeUrlModal, _React$Component);\n\n    function ChangeUrlModal(props) {\n        (0, _classCallCheck3.default)(this, ChangeUrlModal);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (ChangeUrlModal.__proto__ || (0, _getPrototypeOf2.default)(ChangeUrlModal)).call(this, props));\n\n        _this.onURLChanged = _this.onURLChanged.bind(_this);\n        _this.doSubmit = _this.doSubmit.bind(_this);\n        _this.doCancel = _this.doCancel.bind(_this);\n\n        _this.state = {\n            currentURL: props.currentURL,\n            urlError: '',\n            userEdit: false\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(ChangeUrlModal, [{\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n            // This check prevents the url being deleted when we re-render\n            // because of user status check\n            if (!this.state.userEdit) {\n                this.setState({\n                    currentURL: nextProps.currentURL\n                });\n            }\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            if (this.props.show === true && prevProps.show === false) {\n                _reactDom2.default.findDOMNode(this.refs.urlinput).select();\n            }\n        }\n    }, {\n        key: 'onURLChanged',\n        value: function onURLChanged(e) {\n            var url = e.target.value.trim();\n            this.setState({ currentURL: url.replace(/[^A-Za-z0-9-_]/g, '').toLowerCase(), userEdit: true });\n        }\n    }, {\n        key: 'getURLError',\n        value: function getURLError(url) {\n            var error = []; //eslint-disable-line prefer-const\n            if (url.length < 2) {\n                error.push(_react2.default.createElement(\n                    'span',\n                    { key: 'error1' },\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'change_url.longer',\n                        defaultMessage: 'URL must be two or more characters.'\n                    }),\n                    _react2.default.createElement('br', null)\n                ));\n            }\n            if (url.charAt(0) === '-' || url.charAt(0) === '_') {\n                error.push(_react2.default.createElement(\n                    'span',\n                    { key: 'error2' },\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'change_url.startWithLetter',\n                        defaultMessage: 'URL must start with a letter or number.'\n                    }),\n                    _react2.default.createElement('br', null)\n                ));\n            }\n            if (url.length > 1 && (url.charAt(url.length - 1) === '-' || url.charAt(url.length - 1) === '_')) {\n                error.push(_react2.default.createElement(\n                    'span',\n                    { key: 'error3' },\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'change_url.endWithLetter',\n                        defaultMessage: 'URL must end with a letter or number.'\n                    }),\n                    _react2.default.createElement('br', null)\n                ));\n            }\n            if (url.indexOf('__') > -1) {\n                error.push(_react2.default.createElement(\n                    'span',\n                    { key: 'error4' },\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'change_url.noUnderscore',\n                        defaultMessage: 'URL can not contain two underscores in a row.'\n                    }),\n                    _react2.default.createElement('br', null)\n                ));\n            }\n\n            // In case of error we don't detect\n            if (error.length === 0) {\n                error.push(_react2.default.createElement(\n                    'span',\n                    { key: 'errorlast' },\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'change_url.invalidUrl',\n                        defaultMessage: 'Invalid URL'\n                    }),\n                    _react2.default.createElement('br', null)\n                ));\n            }\n            return error;\n        }\n    }, {\n        key: 'doSubmit',\n        value: function doSubmit(e) {\n            e.preventDefault();\n\n            var url = _reactDom2.default.findDOMNode(this.refs.urlinput).value;\n            var cleanedURL = URL.cleanUpUrlable(url);\n            if (cleanedURL !== url || url.length < 2 || url.indexOf('__') > -1) {\n                this.setState({ urlError: this.getURLError(url) });\n                return;\n            }\n            this.setState({ urlError: '', userEdit: false });\n            this.props.onModalSubmit(url);\n        }\n    }, {\n        key: 'doCancel',\n        value: function doCancel() {\n            this.setState({ urlError: '', userEdit: false });\n            this.props.onModalDismissed();\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var urlClass = 'input-group input-group--limit';\n            var error = null;\n\n            if (this.state.urlError) {\n                urlClass += ' has-error';\n            }\n\n            if (this.props.serverError || this.state.urlError) {\n                error = _react2.default.createElement(\n                    'div',\n                    { className: 'form-group has-error' },\n                    _react2.default.createElement(\n                        'p',\n                        { className: 'input__help error' },\n                        this.state.urlError || this.props.serverError\n                    )\n                );\n            }\n\n            var fullUrl = _team_store2.default.getCurrentTeamUrl() + '/channels';\n            var shortURL = URL.getShortenedURL(fullUrl);\n            var urlTooltip = _react2.default.createElement(\n                _reactBootstrap.Tooltip,\n                { id: 'urlTooltip' },\n                fullUrl\n            );\n\n            return _react2.default.createElement(\n                _reactBootstrap.Modal,\n                {\n                    show: this.props.show,\n                    onHide: this.doCancel,\n                    onExited: this.props.onModalExited\n                },\n                _react2.default.createElement(\n                    _reactBootstrap.Modal.Header,\n                    { closeButton: true },\n                    _react2.default.createElement(\n                        _reactBootstrap.Modal.Title,\n                        null,\n                        this.props.title\n                    )\n                ),\n                _react2.default.createElement(\n                    'form',\n                    {\n                        role: 'form',\n                        className: 'form-horizontal'\n                    },\n                    _react2.default.createElement(\n                        _reactBootstrap.Modal.Body,\n                        null,\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'modal-intro' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'channel_flow.changeUrlDescription',\n                                defaultMessage: 'Some characters are now allowed in URLs and may be removed.'\n                            })\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'form-group' },\n                            _react2.default.createElement(\n                                'label',\n                                { className: 'col-sm-2 form__label control-label' },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'change_url.urlLabel',\n                                    defaultMessage: 'Channel URL'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'col-sm-10' },\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: urlClass },\n                                    _react2.default.createElement(\n                                        _reactBootstrap.OverlayTrigger,\n                                        {\n                                            trigger: ['hover', 'focus'],\n                                            delayShow: _constants2.default.OVERLAY_TIME_DELAY,\n                                            placement: 'top',\n                                            overlay: urlTooltip\n                                        },\n                                        _react2.default.createElement(\n                                            'span',\n                                            { className: 'input-group-addon' },\n                                            shortURL\n                                        )\n                                    ),\n                                    _react2.default.createElement('input', {\n                                        type: 'text',\n                                        ref: 'urlinput',\n                                        className: 'form-control',\n                                        maxLength: _constants2.default.MAX_CHANNELNAME_LENGTH,\n                                        onChange: this.onURLChanged,\n                                        value: this.state.currentURL,\n                                        autoFocus: true,\n                                        tabIndex: '1'\n                                    })\n                                ),\n                                error\n                            )\n                        )\n                    ),\n                    _react2.default.createElement(\n                        _reactBootstrap.Modal.Footer,\n                        null,\n                        _react2.default.createElement(\n                            'button',\n                            {\n                                type: 'button',\n                                className: 'btn btn-default',\n                                onClick: this.doCancel\n                            },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'change_url.close',\n                                defaultMessage: 'Close'\n                            })\n                        ),\n                        _react2.default.createElement(\n                            'button',\n                            {\n                                onClick: this.doSubmit,\n                                type: 'submit',\n                                className: 'btn btn-primary',\n                                tabIndex: '2'\n                            },\n                            this.props.submitButtonText\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return ChangeUrlModal;\n}(_react2.default.Component);\n\nexports.default = ChangeUrlModal;\n\n\nChangeUrlModal.defaultProps = {\n    show: false,\n    title: 'Change URL',\n    submitButtonText: 'Save',\n    currentURL: '',\n    serverError: null\n};\n\nChangeUrlModal.propTypes = {\n    show: _propTypes2.default.bool.isRequired,\n    title: _propTypes2.default.node,\n    submitButtonText: _propTypes2.default.node,\n    currentURL: _propTypes2.default.string,\n    serverError: _propTypes2.default.node,\n    onModalSubmit: _propTypes2.default.func.isRequired,\n    onModalExited: _propTypes2.default.func,\n    onModalDismissed: _propTypes2.default.func.isRequired\n};\n\n/***/ }),\n\n/***/ 2494:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = __webpack_require__(19);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(4);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(7);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(8);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = __webpack_require__(2);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(40);\n\nvar _preference_store = __webpack_require__(119);\n\nvar _preference_store2 = _interopRequireDefault(_preference_store);\n\nvar _constants = __webpack_require__(9);\n\nvar _utils = __webpack_require__(16);\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _index = __webpack_require__(2495);\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _tutorial_tip = __webpack_require__(742);\n\nvar _sidebar_header_dropdown = __webpack_require__(2498);\n\nvar _sidebar_header_dropdown2 = _interopRequireDefault(_sidebar_header_dropdown);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SidebarHeader = function (_React$Component) {\n    (0, _inherits3.default)(SidebarHeader, _React$Component);\n\n    function SidebarHeader(props) {\n        (0, _classCallCheck3.default)(this, SidebarHeader);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (SidebarHeader.__proto__ || (0, _getPrototypeOf2.default)(SidebarHeader)).call(this, props));\n\n        _this.handleResize = function () {\n            var isMobile = Utils.isMobile();\n            _this.setState({ isMobile: isMobile });\n        };\n\n        _this.getPreferences = function () {\n            if (!_this.props.currentUser) {\n                return {};\n            }\n            var tutorialStep = _preference_store2.default.getInt(_constants.Preferences.TUTORIAL_STEP, _this.props.currentUser.id, 999);\n            var showTutorialTip = tutorialStep === _constants.TutorialSteps.MENU_POPOVER && !Utils.isMobile();\n\n            return { showTutorialTip: showTutorialTip };\n        };\n\n        _this.getStateFromStores = function () {\n            var preferences = _this.getPreferences();\n            var isMobile = Utils.isMobile();\n            return (0, _extends3.default)({}, preferences, { isMobile: isMobile });\n        };\n\n        _this.onPreferenceChange = function () {\n            _this.setState(_this.getPreferences());\n        };\n\n        _this.toggleDropdown = function (e) {\n            e.preventDefault();\n\n            _this.refs.dropdown.toggleDropdown();\n        };\n\n        _this.renderStatusDropdown = function () {\n            if (_this.state.isMobile) {\n                return null;\n            }\n            return _react2.default.createElement(_index2.default, null);\n        };\n\n        _this.state = _this.getStateFromStores();\n        return _this;\n    }\n\n    (0, _createClass3.default)(SidebarHeader, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            _preference_store2.default.addChangeListener(this.onPreferenceChange);\n            window.addEventListener('resize', this.handleResize);\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            _preference_store2.default.removeChangeListener(this.onPreferenceChange);\n            window.removeEventListener('resize', this.handleResize);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var statusDropdown = this.renderStatusDropdown();\n\n            var tutorialTip = null;\n            if (this.state.showTutorialTip) {\n                tutorialTip = (0, _tutorial_tip.createMenuTip)(this.toggleDropdown);\n            }\n\n            var teamNameWithToolTip = null;\n            if (this.props.teamDescription === '') {\n                teamNameWithToolTip = _react2.default.createElement(\n                    'div',\n                    {\n                        id: 'headerTeamName',\n                        className: 'team__name'\n                    },\n                    this.props.teamDisplayName\n                );\n            } else {\n                teamNameWithToolTip = _react2.default.createElement(\n                    _reactBootstrap.OverlayTrigger,\n                    {\n                        trigger: ['hover', 'focus'],\n                        delayShow: _constants.Constants.OVERLAY_TIME_DELAY,\n                        placement: 'bottom',\n                        overlay: _react2.default.createElement(\n                            _reactBootstrap.Tooltip,\n                            { id: 'team-name__tooltip' },\n                            this.props.teamDescription\n                        ),\n                        ref: 'descriptionOverlay'\n                    },\n                    _react2.default.createElement(\n                        'div',\n                        {\n                            id: 'headerTeamName',\n                            className: 'team__name'\n                        },\n                        this.props.teamDisplayName\n                    )\n                );\n            }\n\n            return _react2.default.createElement(\n                'div',\n                {\n                    id: 'teamHeader',\n                    className: 'team__header theme'\n                },\n                tutorialTip,\n                _react2.default.createElement(\n                    'div',\n                    {\n                        id: 'headerInfo',\n                        className: 'header__info'\n                    },\n                    teamNameWithToolTip,\n                    _react2.default.createElement(\n                        'div',\n                        {\n                            id: 'headerUsername',\n                            className: 'user__name'\n                        },\n                        '@' + this.props.currentUser.username\n                    )\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { id: 'sidebarDropdownMenuContainer' },\n                    _react2.default.createElement(_sidebar_header_dropdown2.default, {\n                        ref: 'dropdown',\n                        teamType: this.props.teamType,\n                        teamDisplayName: this.props.teamDisplayName,\n                        teamName: this.props.teamName,\n                        currentUser: this.props.currentUser\n                    })\n                ),\n                statusDropdown\n            );\n        }\n    }]);\n    return SidebarHeader;\n}(_react2.default.Component); // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nexports.default = SidebarHeader;\n\n\nSidebarHeader.defaultProps = {\n    teamDisplayName: '',\n    teamDescription: '',\n    teamType: ''\n};\nSidebarHeader.propTypes = {\n    teamDisplayName: _propTypes2.default.string,\n    teamDescription: _propTypes2.default.string,\n    teamName: _propTypes2.default.string,\n    teamType: _propTypes2.default.string,\n    currentUser: _propTypes2.default.object\n};\n\n/***/ }),\n\n/***/ 2495:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _reactRedux = __webpack_require__(31);\n\nvar _redux = __webpack_require__(20);\n\nvar _users = __webpack_require__(61);\n\nvar _client = __webpack_require__(29);\n\nvar _users2 = __webpack_require__(50);\n\nvar _status_dropdown = __webpack_require__(2496);\n\nvar _status_dropdown2 = _interopRequireDefault(_status_dropdown);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2017-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nfunction mapStateToProps(state) {\n    var currentUser = (0, _users2.getCurrentUser)(state);\n    var userId = currentUser.id;\n    var lastPicUpdate = currentUser.last_picture_update;\n    var profilePicture = _client.Client4.getProfilePictureUrl(userId, lastPicUpdate);\n    var status = (0, _users2.getStatusForUserId)(state, currentUser.id);\n    return {\n        userId: userId,\n        profilePicture: profilePicture,\n        status: status\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: (0, _redux.bindActionCreators)({\n            setStatus: _users.setStatus\n        }, dispatch)\n    };\n}\n\nexports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(_status_dropdown2.default);\n\n/***/ }),\n\n/***/ 2496:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(4);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(7);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(8);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = __webpack_require__(2);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(40);\n\nvar _reactIntl = __webpack_require__(17);\n\nvar _constants = __webpack_require__(9);\n\nvar _bootstrap_span = __webpack_require__(2497);\n\nvar _bootstrap_span2 = _interopRequireDefault(_bootstrap_span);\n\nvar _status_icon = __webpack_require__(440);\n\nvar _status_icon2 = _interopRequireDefault(_status_icon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar StatusDropdown = function (_React$Component) {\n    (0, _inherits3.default)(StatusDropdown, _React$Component);\n\n    function StatusDropdown() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        (0, _classCallCheck3.default)(this, StatusDropdown);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = StatusDropdown.__proto__ || (0, _getPrototypeOf2.default)(StatusDropdown)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n            showDropdown: false\n        }, _this.onToggle = function (showDropdown) {\n            _this.setState({ showDropdown: showDropdown });\n        }, _this.closeDropdown = function () {\n            _this.setState({ showDropdown: false });\n        }, _this.setStatus = function (status) {\n            _this.props.actions.setStatus({\n                user_id: _this.props.userId,\n                status: status\n            });\n            _this.closeDropdown();\n        }, _this.setOnline = function (event) {\n            event.preventDefault();\n            _this.setStatus(_constants.UserStatuses.ONLINE);\n        }, _this.setOffline = function (event) {\n            event.preventDefault();\n            _this.setStatus(_constants.UserStatuses.OFFLINE);\n        }, _this.setAway = function (event) {\n            event.preventDefault();\n            _this.setStatus(_constants.UserStatuses.AWAY);\n        }, _this.renderStatusOnlineAction = function () {\n            return _this.renderStatusAction(_constants.UserStatuses.ONLINE, _this.setOnline);\n        }, _this.renderStatusAwayAction = function () {\n            return _this.renderStatusAction(_constants.UserStatuses.AWAY, _this.setAway);\n        }, _this.renderStatusOfflineAction = function () {\n            return _this.renderStatusAction(_constants.UserStatuses.OFFLINE, _this.setOffline);\n        }, _this.renderProfilePicture = function () {\n            if (!_this.props.profilePicture) {\n                return null;\n            }\n            return _react2.default.createElement('img', {\n                className: 'user__picture',\n                src: _this.props.profilePicture\n            });\n        }, _this.renderStatusAction = function (status, onClick) {\n            return _react2.default.createElement(\n                'li',\n                { key: status },\n                _react2.default.createElement(\n                    'a',\n                    {\n                        id: 'status' + status,\n                        href: '#',\n                        onClick: onClick\n                    },\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'status_dropdown.set_' + status,\n                        defaultMessage: status\n                    })\n                )\n            );\n        }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);\n    }\n\n    (0, _createClass3.default)(StatusDropdown, [{\n        key: 'render',\n        value: function render() {\n            var profilePicture = this.renderProfilePicture();\n            var actions = [this.renderStatusOnlineAction(), this.renderStatusAwayAction(), this.renderStatusOfflineAction()];\n            return _react2.default.createElement(\n                _reactBootstrap.Dropdown,\n                {\n                    id: 'status-dropdown',\n                    open: this.state.showDropdown,\n                    onToggle: this.onToggle,\n                    style: this.props.style\n                },\n                _react2.default.createElement(\n                    _bootstrap_span2.default,\n                    {\n                        bsRole: 'toggle'\n                    },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'status-wrapper status-selector' },\n                        profilePicture,\n                        _react2.default.createElement(_status_icon2.default, { status: this.props.status }),\n                        _react2.default.createElement(\n                            'span',\n                            { className: 'status status-edit edit' },\n                            _react2.default.createElement('i', { className: 'fa fa-caret-down' })\n                        )\n                    )\n                ),\n                _react2.default.createElement(\n                    _reactBootstrap.Dropdown.Menu,\n                    { id: 'editStatusMenu' },\n                    actions\n                )\n            );\n        }\n    }]);\n    return StatusDropdown;\n}(_react2.default.Component); // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nStatusDropdown.propTypes = {\n    style: _propTypes2.default.object,\n    status: _propTypes2.default.string,\n    userId: _propTypes2.default.string.isRequired,\n    profilePicture: _propTypes2.default.string,\n    actions: _propTypes2.default.shape({\n        setStatus: _propTypes2.default.func.isRequired\n    }).isRequired\n};\nexports.default = StatusDropdown;\n\n/***/ }),\n\n/***/ 2497:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _objectWithoutProperties2 = __webpack_require__(123);\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(4);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(7);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(8);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = __webpack_require__(2);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar BootstrapSpan = function (_React$PureComponent) {\n    (0, _inherits3.default)(BootstrapSpan, _React$PureComponent);\n\n    function BootstrapSpan() {\n        (0, _classCallCheck3.default)(this, BootstrapSpan);\n        return (0, _possibleConstructorReturn3.default)(this, (BootstrapSpan.__proto__ || (0, _getPrototypeOf2.default)(BootstrapSpan)).apply(this, arguments));\n    }\n\n    (0, _createClass3.default)(BootstrapSpan, [{\n        key: 'render',\n        value: function render() {\n            var _props = this.props,\n                children = _props.children,\n                props = (0, _objectWithoutProperties3.default)(_props, ['children']);\n\n            delete props.bsRole;\n            delete props.bsClass;\n\n            return _react2.default.createElement(\n                'span',\n                props,\n                children\n            );\n        }\n    }]);\n    return BootstrapSpan;\n}(_react2.default.PureComponent);\n\nBootstrapSpan.propTypes = {\n    children: _propTypes2.default.element\n};\nexports.default = BootstrapSpan;\n\n/***/ }),\n\n/***/ 2498:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(4);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(7);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(8);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _propTypes = __webpack_require__(2);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(40);\n\nvar _reactDom = __webpack_require__(47);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _reactIntl = __webpack_require__(17);\n\nvar _es = __webpack_require__(44);\n\nvar _global_actions = __webpack_require__(56);\n\nvar GlobalActions = _interopRequireWildcard(_global_actions);\n\nvar _team_store = __webpack_require__(35);\n\nvar _team_store2 = _interopRequireDefault(_team_store);\n\nvar _user_store = __webpack_require__(25);\n\nvar _user_store2 = _interopRequireDefault(_user_store);\n\nvar _webrtc_store = __webpack_require__(436);\n\nvar _webrtc_store2 = _interopRequireDefault(_webrtc_store);\n\nvar _constants = __webpack_require__(9);\n\nvar _url = __webpack_require__(78);\n\nvar _user_agent = __webpack_require__(87);\n\nvar UserAgent = _interopRequireWildcard(_user_agent);\n\nvar _utils = __webpack_require__(16);\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _about_build_modal = __webpack_require__(2090);\n\nvar _about_build_modal2 = _interopRequireDefault(_about_build_modal);\n\nvar _add_users_to_team = __webpack_require__(2097);\n\nvar _add_users_to_team2 = _interopRequireDefault(_add_users_to_team);\n\nvar _sidebar_header_dropdown_button = __webpack_require__(2499);\n\nvar _sidebar_header_dropdown_button2 = _interopRequireDefault(_sidebar_header_dropdown_button);\n\nvar _team_members_modal = __webpack_require__(754);\n\nvar _team_members_modal2 = _interopRequireDefault(_team_members_modal);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SidebarHeaderDropdown = function (_React$Component) {\n    (0, _inherits3.default)(SidebarHeaderDropdown, _React$Component);\n\n    function SidebarHeaderDropdown(props) {\n        (0, _classCallCheck3.default)(this, SidebarHeaderDropdown);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (SidebarHeaderDropdown.__proto__ || (0, _getPrototypeOf2.default)(SidebarHeaderDropdown)).call(this, props));\n\n        _this.toggleDropdown = _this.toggleDropdown.bind(_this);\n\n        _this.handleAboutModal = _this.handleAboutModal.bind(_this);\n        _this.aboutModalDismissed = _this.aboutModalDismissed.bind(_this);\n        _this.showAccountSettingsModal = _this.showAccountSettingsModal.bind(_this);\n        _this.showAddUsersToTeamModal = _this.showAddUsersToTeamModal.bind(_this);\n        _this.hideAddUsersToTeamModal = _this.hideAddUsersToTeamModal.bind(_this);\n        _this.showInviteMemberModal = _this.showInviteMemberModal.bind(_this);\n        _this.showGetTeamInviteLinkModal = _this.showGetTeamInviteLinkModal.bind(_this);\n        _this.showTeamMembersModal = _this.showTeamMembersModal.bind(_this);\n        _this.hideTeamMembersModal = _this.hideTeamMembersModal.bind(_this);\n        _this.showShortcutsModal = _this.showShortcutsModal.bind(_this);\n\n        _this.onTeamChange = _this.onTeamChange.bind(_this);\n\n        _this.renderCustomEmojiLink = _this.renderCustomEmojiLink.bind(_this);\n\n        _this.handleClick = _this.handleClick.bind(_this);\n\n        _this.state = {\n            teamMembers: _team_store2.default.getMyTeamMembers(),\n            teamListings: _team_store2.default.getTeamListings(),\n            showAboutModal: false,\n            showDropdown: false,\n            showTeamMembersModal: false,\n            showAddUsersToTeamModal: false\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(SidebarHeaderDropdown, [{\n        key: 'handleClick',\n        value: function handleClick(e) {\n            if (_webrtc_store2.default.isBusy()) {\n                _webrtc_store2.default.emitChanged({ action: _constants.WebrtcActionTypes.IN_PROGRESS });\n                e.preventDefault();\n            }\n        }\n    }, {\n        key: 'toggleDropdown',\n        value: function toggleDropdown(val) {\n            if (typeof val === 'boolean') {\n                this.setState({ showDropdown: val });\n                return;\n            }\n\n            if (val && val.preventDefault) {\n                val.preventDefault();\n            }\n\n            this.setState({ showDropdown: !this.state.showDropdown });\n        }\n    }, {\n        key: 'handleAboutModal',\n        value: function handleAboutModal(e) {\n            e.preventDefault();\n\n            this.setState({\n                showAboutModal: true,\n                showDropdown: false\n            });\n        }\n    }, {\n        key: 'aboutModalDismissed',\n        value: function aboutModalDismissed() {\n            this.setState({ showAboutModal: false });\n        }\n    }, {\n        key: 'showAccountSettingsModal',\n        value: function showAccountSettingsModal(e) {\n            e.preventDefault();\n\n            this.setState({ showDropdown: false });\n\n            GlobalActions.showAccountSettingsModal();\n        }\n    }, {\n        key: 'showShortcutsModal',\n        value: function showShortcutsModal(e) {\n            e.preventDefault();\n            this.setState({ showDropdown: false });\n\n            GlobalActions.showShortcutsModal();\n        }\n    }, {\n        key: 'showAddUsersToTeamModal',\n        value: function showAddUsersToTeamModal(e) {\n            e.preventDefault();\n\n            this.setState({\n                showAddUsersToTeamModal: true,\n                showDropdown: false\n            });\n        }\n    }, {\n        key: 'hideAddUsersToTeamModal',\n        value: function hideAddUsersToTeamModal() {\n            this.setState({\n                showAddUsersToTeamModal: false\n            });\n        }\n    }, {\n        key: 'showInviteMemberModal',\n        value: function showInviteMemberModal(e) {\n            e.preventDefault();\n\n            this.setState({ showDropdown: false });\n\n            GlobalActions.showInviteMemberModal();\n        }\n    }, {\n        key: 'showGetTeamInviteLinkModal',\n        value: function showGetTeamInviteLinkModal(e) {\n            e.preventDefault();\n\n            this.setState({ showDropdown: false });\n\n            GlobalActions.showGetTeamInviteLinkModal();\n        }\n    }, {\n        key: 'showTeamMembersModal',\n        value: function showTeamMembersModal(e) {\n            e.preventDefault();\n\n            this.setState({\n                showTeamMembersModal: true\n            });\n        }\n    }, {\n        key: 'hideTeamMembersModal',\n        value: function hideTeamMembersModal() {\n            this.setState({\n                showTeamMembersModal: false\n            });\n        }\n    }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            _team_store2.default.addChangeListener(this.onTeamChange);\n        }\n    }, {\n        key: 'onTeamChange',\n        value: function onTeamChange() {\n            this.setState({\n                teamMembers: _team_store2.default.getMyTeamMembers(),\n                teamListings: _team_store2.default.getTeamListings(),\n                showDropdown: false\n            });\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            (0, _jquery2.default)(_reactDom2.default.findDOMNode(this.refs.dropdown)).off('hide.bs.dropdown');\n            _team_store2.default.removeChangeListener(this.onTeamChange);\n        }\n    }, {\n        key: 'renderCustomEmojiLink',\n        value: function renderCustomEmojiLink() {\n            if (window.mm_config.EnableCustomEmoji !== 'true' || !Utils.canCreateCustomEmoji(this.props.currentUser)) {\n                return null;\n            }\n\n            return _react2.default.createElement(\n                'li',\n                null,\n                _react2.default.createElement(\n                    _es.Link,\n                    {\n                        id: 'customEmoji',\n                        onClick: this.handleClick,\n                        to: '/' + this.props.teamName + '/emoji'\n                    },\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'navbar_dropdown.emoji',\n                        defaultMessage: 'Custom Emoji'\n                    })\n                )\n            );\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var config = global.mm_config;\n            var currentUser = this.props.currentUser;\n            var teamLink = '';\n            var inviteLink = '';\n            var addMemberToTeam = '';\n            var manageLink = '';\n            var sysAdminLink = '';\n            var isAdmin = false;\n            var isSystemAdmin = false;\n            var teamSettings = null;\n            var integrationsLink = null;\n\n            if (!currentUser) {\n                return null;\n            }\n\n            if (currentUser != null) {\n                isAdmin = _team_store2.default.isTeamAdminForCurrentTeam() || _user_store2.default.isSystemAdminForCurrentUser();\n                isSystemAdmin = _user_store2.default.isSystemAdminForCurrentUser();\n\n                inviteLink = _react2.default.createElement(\n                    'li',\n                    null,\n                    _react2.default.createElement(\n                        'button',\n                        {\n                            className: 'style--none',\n                            id: 'sendEmailInvite',\n                            onClick: this.showInviteMemberModal\n                        },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'navbar_dropdown.inviteMember',\n                            defaultMessage: 'Send Email Invite'\n                        })\n                    )\n                );\n\n                addMemberToTeam = _react2.default.createElement(\n                    'li',\n                    null,\n                    _react2.default.createElement(\n                        'button',\n                        {\n                            className: 'style--none',\n                            id: 'addUsersToTeam',\n                            onClick: this.showAddUsersToTeamModal\n                        },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'navbar_dropdown.addMemberToTeam',\n                            defaultMessage: 'Add Members to Team'\n                        })\n                    )\n                );\n\n                if (this.props.teamType === _constants.Constants.OPEN_TEAM && config.EnableUserCreation === 'true') {\n                    teamLink = _react2.default.createElement(\n                        'li',\n                        null,\n                        _react2.default.createElement(\n                            'button',\n                            {\n                                className: 'style--none',\n                                id: 'getTeamInviteLink',\n                                onClick: this.showGetTeamInviteLinkModal\n                            },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'navbar_dropdown.teamLink',\n                                defaultMessage: 'Get Team Invite Link'\n                            })\n                        )\n                    );\n                }\n\n                if (global.window.mm_license.IsLicensed === 'true') {\n                    if (config.RestrictTeamInvite === _constants.Constants.PERMISSIONS_SYSTEM_ADMIN && !isSystemAdmin) {\n                        teamLink = null;\n                        inviteLink = null;\n                        addMemberToTeam = null;\n                    } else if (config.RestrictTeamInvite === _constants.Constants.PERMISSIONS_TEAM_ADMIN && !isAdmin) {\n                        teamLink = null;\n                        inviteLink = null;\n                        addMemberToTeam = null;\n                    }\n                }\n            }\n\n            var membersName = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                id: 'navbar_dropdown.manageMembers',\n                defaultMessage: 'Manage Members'\n            });\n\n            if (isAdmin) {\n                teamSettings = _react2.default.createElement(\n                    'li',\n                    null,\n                    _react2.default.createElement(\n                        'button',\n                        {\n                            className: 'style--none',\n                            id: 'teamSettings',\n                            'data-toggle': 'modal',\n                            'data-target': '#team_settings',\n                            onClick: this.toggleDropdown\n                        },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'navbar_dropdown.teamSettings',\n                            defaultMessage: 'Team Settings'\n                        })\n                    )\n                );\n            } else {\n                membersName = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'navbar_dropdown.viewMembers',\n                    defaultMessage: 'View Members'\n                });\n            }\n\n            manageLink = _react2.default.createElement(\n                'li',\n                null,\n                _react2.default.createElement(\n                    'button',\n                    {\n                        id: 'manageMembers',\n                        className: 'style--none',\n                        onClick: this.showTeamMembersModal\n                    },\n                    membersName\n                )\n            );\n\n            var integrationsEnabled = config.EnableIncomingWebhooks === 'true' || config.EnableOutgoingWebhooks === 'true' || config.EnableCommands === 'true' || config.EnableOAuthServiceProvider === 'true' && (isSystemAdmin || config.EnableOnlyAdminIntegrations !== 'true');\n            if (integrationsEnabled && (isAdmin || config.EnableOnlyAdminIntegrations !== 'true')) {\n                integrationsLink = _react2.default.createElement(\n                    'li',\n                    null,\n                    _react2.default.createElement(\n                        _es.Link,\n                        {\n                            id: 'Integrations',\n                            to: '/' + this.props.teamName + '/integrations',\n                            onClick: this.handleClick\n                        },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'navbar_dropdown.integrations',\n                            defaultMessage: 'Integrations'\n                        })\n                    )\n                );\n            }\n\n            if (isSystemAdmin) {\n                sysAdminLink = _react2.default.createElement(\n                    'li',\n                    null,\n                    _react2.default.createElement(\n                        _es.Link,\n                        {\n                            id: 'systemConsole',\n                            to: '/admin_console',\n                            onClick: this.handleClick\n                        },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'navbar_dropdown.console',\n                            defaultMessage: 'System Console'\n                        })\n                    )\n                );\n            }\n\n            var teams = [];\n            var moreTeams = false;\n\n            if (config.EnableTeamCreation === 'true' || _user_store2.default.isSystemAdminForCurrentUser()) {\n                teams.push(_react2.default.createElement(\n                    'li',\n                    { key: 'newTeam_li' },\n                    _react2.default.createElement(\n                        _es.Link,\n                        {\n                            id: 'createTeam',\n                            key: 'newTeam_a',\n                            to: '/create_team',\n                            onClick: this.handleClick\n                        },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'navbar_dropdown.create',\n                            defaultMessage: 'Create a New Team'\n                        })\n                    )\n                ));\n            }\n\n            var isAlreadyMember = this.state.teamMembers.reduce(function (result, item) {\n                result[item.team_id] = true;\n                return result;\n            }, {});\n\n            for (var id in this.state.teamListings) {\n                if (this.state.teamListings.hasOwnProperty(id) && !isAlreadyMember[id]) {\n                    moreTeams = true;\n                    break;\n                }\n            }\n\n            if (moreTeams) {\n                teams.push(_react2.default.createElement(\n                    'li',\n                    { key: 'joinTeam_li' },\n                    _react2.default.createElement(\n                        _es.Link,\n                        {\n                            id: 'joinAnotherTeam',\n                            onClick: this.handleClick,\n                            to: '/select_team'\n                        },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'navbar_dropdown.join',\n                            defaultMessage: 'Join Another Team'\n                        })\n                    )\n                ));\n            }\n\n            teams.push(_react2.default.createElement(\n                'li',\n                { key: 'leaveTeam_li' },\n                _react2.default.createElement(\n                    'button',\n                    {\n                        className: 'style--none',\n                        id: 'leaveTeam',\n                        onClick: GlobalActions.showLeaveTeamModal\n                    },\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'navbar_dropdown.leave',\n                        defaultMessage: 'Leave Team'\n                    })\n                )\n            ));\n\n            var helpLink = null;\n            if (config.HelpLink) {\n                helpLink = _react2.default.createElement(\n                    'li',\n                    null,\n                    _react2.default.createElement(\n                        _es.Link,\n                        {\n                            id: 'helpLink',\n                            target: '_blank',\n                            rel: 'noopener noreferrer',\n                            to: config.HelpLink\n                        },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'navbar_dropdown.help',\n                            defaultMessage: 'Help'\n                        })\n                    )\n                );\n            }\n\n            var reportLink = null;\n            if (config.ReportAProblemLink) {\n                reportLink = _react2.default.createElement(\n                    'li',\n                    null,\n                    _react2.default.createElement(\n                        _es.Link,\n                        {\n                            id: 'reportLink',\n                            target: '_blank',\n                            rel: 'noopener noreferrer',\n                            to: config.ReportAProblemLink\n                        },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'navbar_dropdown.report',\n                            defaultMessage: 'Report a Problem'\n                        })\n                    )\n                );\n            }\n\n            var nativeAppLink = null;\n            if (global.window.mm_config.AppDownloadLink && !UserAgent.isMobileApp()) {\n                nativeAppLink = _react2.default.createElement(\n                    'li',\n                    null,\n                    _react2.default.createElement(\n                        _es.Link,\n                        {\n                            id: 'nativeAppLink',\n                            target: '_blank',\n                            rel: 'noopener noreferrer',\n                            to: (0, _url.useSafeUrl)(global.window.mm_config.AppDownloadLink)\n                        },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'navbar_dropdown.nativeApps',\n                            defaultMessage: 'Download Apps'\n                        })\n                    )\n                );\n            }\n\n            var teamMembersModal = void 0;\n            if (this.state.showTeamMembersModal) {\n                teamMembersModal = _react2.default.createElement(_team_members_modal2.default, {\n                    onLoad: this.toggleDropdown,\n                    onHide: this.hideTeamMembersModal,\n                    isAdmin: isAdmin\n                });\n            }\n\n            var addUsersToTeamModal = void 0;\n            if (this.state.showAddUsersToTeamModal) {\n                addUsersToTeamModal = _react2.default.createElement(_add_users_to_team2.default, {\n                    onModalDismissed: this.hideAddUsersToTeamModal\n                });\n            }\n\n            var keyboardShortcuts = _react2.default.createElement(\n                'li',\n                null,\n                _react2.default.createElement(\n                    'button',\n                    {\n                        className: 'style--none',\n                        id: 'keyboardShortcuts',\n                        onClick: this.showShortcutsModal\n                    },\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'navbar_dropdown.keyboardShortcuts',\n                        defaultMessage: 'Keyboard Shortcuts'\n                    })\n                )\n            );\n\n            var accountSettings = _react2.default.createElement(\n                'li',\n                null,\n                _react2.default.createElement(\n                    'button',\n                    {\n                        className: 'style--none',\n                        id: 'accountSettings',\n                        onClick: this.showAccountSettingsModal\n                    },\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'navbar_dropdown.accountSettings',\n                        defaultMessage: 'Account Settings'\n                    })\n                )\n            );\n\n            var about = _react2.default.createElement(\n                'li',\n                null,\n                _react2.default.createElement(\n                    'button',\n                    {\n                        id: 'about',\n                        className: 'style--none',\n                        onClick: this.handleAboutModal\n                    },\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'navbar_dropdown.about',\n                        defaultMessage: 'About Mattermost'\n                    })\n                )\n            );\n\n            var logout = _react2.default.createElement(\n                'li',\n                null,\n                _react2.default.createElement(\n                    'button',\n                    {\n                        className: 'style--none',\n                        id: 'logout',\n                        onClick: function onClick() {\n                            return GlobalActions.emitUserLoggedOutEvent();\n                        }\n                    },\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'navbar_dropdown.logout',\n                        defaultMessage: 'Logout'\n                    })\n                )\n            );\n\n            var customEmoji = this.renderCustomEmojiLink();\n\n            // Dividers.\n            var inviteDivider = null;\n            if (inviteLink || teamLink || addMemberToTeam) {\n                inviteDivider = _react2.default.createElement('li', { className: 'divider' });\n            }\n\n            var teamDivider = null;\n            if (teamSettings || manageLink || teams) {\n                teamDivider = _react2.default.createElement('li', { className: 'divider' });\n            }\n\n            var backstageDivider = null;\n            if (integrationsLink || customEmoji) {\n                backstageDivider = _react2.default.createElement('li', { className: 'divider' });\n            }\n\n            var sysAdminDivider = null;\n            if (sysAdminLink) {\n                sysAdminDivider = _react2.default.createElement('li', { className: 'divider' });\n            }\n\n            var helpDivider = null;\n            if (helpLink || reportLink || nativeAppLink || about) {\n                helpDivider = _react2.default.createElement('li', { className: 'divider' });\n            }\n\n            var logoutDivider = null;\n            if (logout) {\n                logoutDivider = _react2.default.createElement('li', { className: 'divider' });\n            }\n\n            return _react2.default.createElement(\n                _reactBootstrap.Dropdown,\n                {\n                    id: 'sidebar-header-dropdown',\n                    open: this.state.showDropdown,\n                    onToggle: this.toggleDropdown,\n                    className: 'sidebar-header-dropdown',\n                    pullRight: true\n                },\n                _react2.default.createElement(_sidebar_header_dropdown_button2.default, {\n                    bsRole: 'toggle',\n                    onClick: this.toggleDropdown\n                }),\n                _react2.default.createElement(\n                    _reactBootstrap.Dropdown.Menu,\n                    { id: 'sidebarDropdownMenu' },\n                    accountSettings,\n                    inviteDivider,\n                    inviteLink,\n                    teamLink,\n                    addMemberToTeam,\n                    teamDivider,\n                    teamSettings,\n                    manageLink,\n                    teams,\n                    backstageDivider,\n                    integrationsLink,\n                    customEmoji,\n                    sysAdminDivider,\n                    sysAdminLink,\n                    helpDivider,\n                    helpLink,\n                    keyboardShortcuts,\n                    reportLink,\n                    nativeAppLink,\n                    about,\n                    logoutDivider,\n                    logout,\n                    teamMembersModal,\n                    _react2.default.createElement(_about_build_modal2.default, {\n                        show: this.state.showAboutModal,\n                        onModalDismissed: this.aboutModalDismissed\n                    }),\n                    addUsersToTeamModal\n                )\n            );\n        }\n    }]);\n    return SidebarHeaderDropdown;\n}(_react2.default.Component); // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nSidebarHeaderDropdown.propTypes = {\n    teamType: _propTypes2.default.string,\n    teamDisplayName: _propTypes2.default.string,\n    teamName: _propTypes2.default.string,\n    currentUser: _propTypes2.default.object\n};\nSidebarHeaderDropdown.defaultProps = {\n    teamType: ''\n};\nexports.default = SidebarHeaderDropdown;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))\n\n/***/ }),\n\n/***/ 2499:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(4);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(7);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(8);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = __webpack_require__(2);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(40);\n\nvar _reactIntl = __webpack_require__(17);\n\nvar _constants = __webpack_require__(9);\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SidebarHeaderDropdownButton = function (_React$PureComponent) {\n    (0, _inherits3.default)(SidebarHeaderDropdownButton, _React$PureComponent);\n\n    function SidebarHeaderDropdownButton() {\n        (0, _classCallCheck3.default)(this, SidebarHeaderDropdownButton);\n        return (0, _possibleConstructorReturn3.default)(this, (SidebarHeaderDropdownButton.__proto__ || (0, _getPrototypeOf2.default)(SidebarHeaderDropdownButton)).apply(this, arguments));\n    }\n\n    (0, _createClass3.default)(SidebarHeaderDropdownButton, [{\n        key: 'render',\n        value: function render() {\n            var mainMenuToolTip = _react2.default.createElement(\n                _reactBootstrap.Tooltip,\n                { id: 'main-menu__tooltip' },\n                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'sidebar.mainMenu',\n                    defaultMessage: 'Main menu'\n                })\n            );\n\n            return _react2.default.createElement(\n                _reactBootstrap.OverlayTrigger,\n                {\n                    trigger: ['hover', 'focus'],\n                    delayShow: _constants2.default.OVERLAY_TIME_DELAY,\n                    placement: 'right',\n                    overlay: mainMenuToolTip\n                },\n                _react2.default.createElement(\n                    'button',\n                    {\n                        id: 'sidebarHeaderDropdownButton',\n                        className: 'sidebar-header-dropdown__toggle cursor--pointer style--none',\n                        onClick: this.props.onClick\n                    },\n                    _react2.default.createElement('span', {\n                        className: 'sidebar-header-dropdown__icon',\n                        dangerouslySetInnerHTML: { __html: _constants2.default.MENU_ICON }\n                    })\n                )\n            );\n        }\n    }]);\n    return SidebarHeaderDropdownButton;\n}(_react2.default.PureComponent); // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nSidebarHeaderDropdownButton.propTypes = {\n    bsRole: _propTypes2.default.oneOf(['toggle']).isRequired, // eslint-disable-line react/no-unused-prop-types\n    onClick: _propTypes2.default.func.isRequired\n};\nexports.default = SidebarHeaderDropdownButton;\n\n/***/ }),\n\n/***/ 2500:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(4);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(7);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(8);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = __webpack_require__(2);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _constants = __webpack_require__(9);\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar UnreadChannelIndicator = function (_React$PureComponent) {\n    (0, _inherits3.default)(UnreadChannelIndicator, _React$PureComponent);\n\n    function UnreadChannelIndicator() {\n        (0, _classCallCheck3.default)(this, UnreadChannelIndicator);\n        return (0, _possibleConstructorReturn3.default)(this, (UnreadChannelIndicator.__proto__ || (0, _getPrototypeOf2.default)(UnreadChannelIndicator)).apply(this, arguments));\n    }\n\n    (0, _createClass3.default)(UnreadChannelIndicator, [{\n        key: 'render',\n        value: function render() {\n            var unreadIcon = _constants2.default.UNREAD_ICON_SVG;\n\n            var displayValue = 'none';\n            if (this.props.show) {\n                displayValue = 'block';\n            }\n\n            return _react2.default.createElement(\n                'div',\n                {\n                    id: 'unreadIndicator' + this.props.name,\n                    className: 'nav-pills__unread-indicator ' + this.props.extraClass,\n                    style: { display: displayValue },\n                    onClick: this.props.onClick\n                },\n                this.props.content,\n                _react2.default.createElement('span', {\n                    className: 'icon icon__unread',\n                    dangerouslySetInnerHTML: { __html: unreadIcon }\n                })\n            );\n        }\n    }]);\n    return UnreadChannelIndicator;\n}(_react2.default.PureComponent); // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nUnreadChannelIndicator.propTypes = {\n\n    /**\n     * Function to call when the indicator is clicked\n     */\n    onClick: _propTypes2.default.func.isRequired,\n\n    /**\n     * Set whether to show the indicator or not\n     */\n    show: _propTypes2.default.bool,\n\n    /**\n     * The additional CSS class for the indicator\n     */\n    extraClass: _propTypes2.default.string,\n\n    /**\n     * The content of the indicator\n     */\n    content: _propTypes2.default.node,\n\n    /**\n     * The name of the indicator\n     */\n    name: _propTypes2.default.string\n};\nUnreadChannelIndicator.defaultProps = {\n    show: false,\n    extraClass: '',\n    content: ''\n};\nexports.default = UnreadChannelIndicator;\n\n/***/ }),\n\n/***/ 321:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _map = __webpack_require__(156);\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _stringify = __webpack_require__(155);\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _extends2 = __webpack_require__(19);\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(4);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(7);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(8);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(40);\n\nvar _reactDom = __webpack_require__(47);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _reactIntl = __webpack_require__(17);\n\nvar _es = __webpack_require__(44);\n\nvar _preferences = __webpack_require__(210);\n\nvar _channels = __webpack_require__(136);\n\nvar _channel_actions = __webpack_require__(79);\n\nvar ChannelActions = _interopRequireWildcard(_channel_actions);\n\nvar _diagnostics_actions = __webpack_require__(237);\n\nvar _global_actions = __webpack_require__(56);\n\nvar GlobalActions = _interopRequireWildcard(_global_actions);\n\nvar _app_dispatcher = __webpack_require__(34);\n\nvar _app_dispatcher2 = _interopRequireDefault(_app_dispatcher);\n\nvar _channel_store = __webpack_require__(32);\n\nvar _channel_store2 = _interopRequireDefault(_channel_store);\n\nvar _modal_store = __webpack_require__(2080);\n\nvar _modal_store2 = _interopRequireDefault(_modal_store);\n\nvar _preference_store = __webpack_require__(119);\n\nvar _preference_store2 = _interopRequireDefault(_preference_store);\n\nvar _redux_store = __webpack_require__(38);\n\nvar _redux_store2 = _interopRequireDefault(_redux_store);\n\nvar _team_store = __webpack_require__(35);\n\nvar _team_store2 = _interopRequireDefault(_team_store);\n\nvar _user_store = __webpack_require__(25);\n\nvar _user_store2 = _interopRequireDefault(_user_store);\n\nvar _channel_utils = __webpack_require__(121);\n\nvar ChannelUtils = _interopRequireWildcard(_channel_utils);\n\nvar _constants = __webpack_require__(9);\n\nvar _utils = __webpack_require__(16);\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _favicon16x = __webpack_require__(790);\n\nvar _favicon16x2 = _interopRequireDefault(_favicon16x);\n\nvar _redfavicon16x = __webpack_require__(2484);\n\nvar _redfavicon16x2 = _interopRequireDefault(_redfavicon16x);\n\nvar _load = __webpack_require__(208);\n\nvar _load2 = _interopRequireDefault(_load);\n\nvar _more_channels = __webpack_require__(2485);\n\nvar _more_channels2 = _interopRequireDefault(_more_channels);\n\nvar _more_direct_channels = __webpack_require__(2488);\n\nvar _more_direct_channels2 = _interopRequireDefault(_more_direct_channels);\n\nvar _new_channel_flow = __webpack_require__(2490);\n\nvar _new_channel_flow2 = _interopRequireDefault(_new_channel_flow);\n\nvar _sidebar_header = __webpack_require__(2494);\n\nvar _sidebar_header2 = _interopRequireDefault(_sidebar_header);\n\nvar _status_icon = __webpack_require__(440);\n\nvar _status_icon2 = _interopRequireDefault(_status_icon);\n\nvar _tutorial_tip = __webpack_require__(742);\n\nvar _tutorial_tip2 = _interopRequireDefault(_tutorial_tip);\n\nvar _unread_channel_indicator = __webpack_require__(2500);\n\nvar _unread_channel_indicator2 = _interopRequireDefault(_unread_channel_indicator);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Preferences = _constants.Constants.Preferences; // Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar TutorialSteps = _constants.Constants.TutorialSteps;\n\nvar dispatch = _redux_store2.default.dispatch;\nvar getState = _redux_store2.default.getState;\n\nvar Sidebar = function (_React$Component) {\n    (0, _inherits3.default)(Sidebar, _React$Component);\n\n    function Sidebar(props) {\n        (0, _classCallCheck3.default)(this, Sidebar);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (Sidebar.__proto__ || (0, _getPrototypeOf2.default)(Sidebar)).call(this, props));\n\n        _this.getTotalUnreadCount = function () {\n            var unreads = ChannelUtils.getCountsStateFromStores(_this.state.currentTeam, _this.state.teamMembers, _this.state.unreadCounts);\n            return { msgs: unreads.messageCount, mentions: unreads.mentionCount };\n        };\n\n        _this.getStateFromStores = function () {\n            var members = _channel_store2.default.getMyMembers();\n            var teamMembers = _team_store2.default.getMyTeamMembers();\n            var currentChannelId = _channel_store2.default.getCurrentId();\n            var tutorialStep = _preference_store2.default.getInt(Preferences.TUTORIAL_STEP, _user_store2.default.getCurrentId(), 999);\n\n            var displayableChannels = (0, _channels.getChannelsByCategory)(_redux_store2.default.getState());\n\n            return (0, _extends3.default)({\n                activeId: currentChannelId,\n                members: members,\n                teamMembers: teamMembers\n            }, displayableChannels, {\n                unreadCounts: JSON.parse((0, _stringify2.default)(_channel_store2.default.getUnreadCounts())),\n                showTutorialTip: tutorialStep === TutorialSteps.CHANNEL_POPOVER,\n                currentTeam: _team_store2.default.getCurrent(),\n                currentUser: _user_store2.default.getCurrentUser(),\n                townSquare: _channel_store2.default.getByName(_constants.Constants.DEFAULT_CHANNEL),\n                offTopic: _channel_store2.default.getByName(_constants.Constants.OFFTOPIC_CHANNEL)\n            });\n        };\n\n        _this.onInChannelChange = function () {\n            _this.setState({ inChannelChange: !_this.state.inChannelChange });\n        };\n\n        _this.onModalChange = function (value, args) {\n            _this.showMoreDirectChannelsModal(_user_store2.default.getProfileListInChannel(args.channelId, true, false));\n        };\n\n        _this.handleOpenMoreDirectChannelsModal = function (e) {\n            e.preventDefault();\n            if (_this.state.showDirectChannelsModal) {\n                _this.hideMoreDirectChannelsModal();\n            } else {\n                _this.showMoreDirectChannelsModal();\n            }\n        };\n\n        _this.onChange = function () {\n            if (_this.state.currentTeam.id !== _team_store2.default.getCurrentId()) {\n                _channel_store2.default.clear();\n            }\n            _this.setState(_this.getStateFromStores());\n            _this.updateTitle();\n        };\n\n        _this.updateTitle = function () {\n            var channel = _channel_store2.default.getCurrent();\n            if (channel && _this.state.currentTeam) {\n                var currentSiteName = '';\n                if (global.window.mm_config.SiteName != null) {\n                    currentSiteName = global.window.mm_config.SiteName;\n                }\n\n                var currentChannelName = channel.display_name;\n                if (channel.type === _constants.Constants.DM_CHANNEL) {\n                    var teammate = Utils.getDirectTeammate(channel.id);\n                    if (teammate != null) {\n                        currentChannelName = teammate.username;\n                    }\n                }\n\n                var unread = _this.getTotalUnreadCount();\n                var mentionTitle = unread.mentions > 0 ? '(' + unread.mentions + ') ' : '';\n                var unreadTitle = unread.msgs > 0 ? '* ' : '';\n                document.title = mentionTitle + unreadTitle + currentChannelName + ' - ' + _this.state.currentTeam.display_name + ' ' + currentSiteName;\n            }\n        };\n\n        _this.onScroll = function () {\n            _this.updateUnreadIndicators();\n        };\n\n        _this.scrollToFirstUnreadChannel = function () {\n            if (_this.firstUnreadChannel) {\n                var unreadMargin = 15;\n                var container = (0, _jquery2.default)(_reactDom2.default.findDOMNode(_this.refs.container));\n                var firstUnreadElement = (0, _jquery2.default)(_reactDom2.default.findDOMNode(_this.refs[_this.firstUnreadChannel]));\n                var scrollTop = container.scrollTop() + firstUnreadElement.position().top - unreadMargin;\n                container.stop().animate({ scrollTop: scrollTop }, 500, 'swing');\n            }\n        };\n\n        _this.scrollToLastUnreadChannel = function () {\n            if (_this.lastUnreadChannel) {\n                var unreadMargin = 15;\n                var container = (0, _jquery2.default)(_reactDom2.default.findDOMNode(_this.refs.container));\n                var lastUnreadElement = (0, _jquery2.default)(_reactDom2.default.findDOMNode(_this.refs[_this.lastUnreadChannel]));\n                var elementBottom = lastUnreadElement.position().top + lastUnreadElement.height();\n                var scrollTop = container.scrollTop() + (elementBottom - container.height()) + unreadMargin;\n                container.stop().animate({ scrollTop: scrollTop }, 500, 'swing');\n            }\n        };\n\n        _this.updateUnreadIndicators = function () {\n            var container = (0, _jquery2.default)(_reactDom2.default.findDOMNode(_this.refs.container));\n\n            var showTopUnread = false;\n            var showBottomUnread = false;\n\n            // Consider partially obscured channels as above/below\n            var unreadMargin = 15;\n\n            if (_this.firstUnreadChannel) {\n                var firstUnreadElement = (0, _jquery2.default)(_reactDom2.default.findDOMNode(_this.refs[_this.firstUnreadChannel]));\n\n                if (firstUnreadElement.position().top + firstUnreadElement.height() < unreadMargin) {\n                    showTopUnread = true;\n                }\n            }\n\n            if (_this.lastUnreadChannel) {\n                var lastUnreadElement = (0, _jquery2.default)(_reactDom2.default.findDOMNode(_this.refs[_this.lastUnreadChannel]));\n\n                if (lastUnreadElement.position().top > container.height() - unreadMargin) {\n                    showBottomUnread = true;\n                }\n            }\n\n            _this.setState({\n                showTopUnread: showTopUnread,\n                showBottomUnread: showBottomUnread\n            });\n        };\n\n        _this.updateScrollbarOnChannelChange = function (channel) {\n            var curChannel = _this.refs[channel.name].getBoundingClientRect();\n            if (curChannel.top - _constants.Constants.CHANNEL_SCROLL_ADJUSTMENT < 0 || curChannel.top + curChannel.height > _this.refs.container.getBoundingClientRect().height) {\n                _this.refs.container.scrollTop = _this.refs.container.scrollTop + (curChannel.top - _constants.Constants.CHANNEL_SCROLL_ADJUSTMENT);\n                (0, _jquery2.default)('.nav-pills__container').perfectScrollbar('update');\n            }\n        };\n\n        _this.navigateChannelShortcut = function (e) {\n            if (e.altKey && !e.shiftKey && (e.keyCode === _constants.Constants.KeyCodes.UP || e.keyCode === _constants.Constants.KeyCodes.DOWN)) {\n                e.preventDefault();\n\n                if (_this.isSwitchingChannel) {\n                    return;\n                }\n\n                _this.isSwitchingChannel = true;\n                var allChannels = _this.getDisplayedChannels();\n                var curChannelId = _this.state.activeId;\n                var curIndex = -1;\n                for (var i = 0; i < allChannels.length; i++) {\n                    if (allChannels[i].id === curChannelId) {\n                        curIndex = i;\n                    }\n                }\n                var nextIndex = curIndex;\n                if (e.keyCode === _constants.Constants.KeyCodes.DOWN) {\n                    nextIndex = curIndex + 1;\n                } else if (e.keyCode === _constants.Constants.KeyCodes.UP) {\n                    nextIndex = curIndex - 1;\n                }\n                var nextChannel = allChannels[Utils.mod(nextIndex, allChannels.length)];\n                ChannelActions.goToChannel(nextChannel);\n                _this.updateScrollbarOnChannelChange(nextChannel);\n                _this.isSwitchingChannel = false;\n            } else if (Utils.cmdOrCtrlPressed(e) && e.shiftKey && e.keyCode === _constants.Constants.KeyCodes.K) {\n                _this.handleOpenMoreDirectChannelsModal(e);\n            }\n        };\n\n        _this.navigateUnreadChannelShortcut = function (e) {\n            if (e.altKey && e.shiftKey && (e.keyCode === _constants.Constants.KeyCodes.UP || e.keyCode === _constants.Constants.KeyCodes.DOWN)) {\n                e.preventDefault();\n\n                if (_this.isSwitchingChannel) {\n                    return;\n                }\n\n                _this.isSwitchingChannel = true;\n                var allChannels = _this.getDisplayedChannels();\n                var curChannelId = _this.state.activeId;\n                var curIndex = -1;\n                for (var i = 0; i < allChannels.length; i++) {\n                    if (allChannels[i].id === curChannelId) {\n                        curIndex = i;\n                    }\n                }\n                var nextIndex = curIndex;\n                var count = 0;\n                var increment = 0;\n                if (e.keyCode === _constants.Constants.KeyCodes.UP) {\n                    increment = -1;\n                } else if (e.keyCode === _constants.Constants.KeyCodes.DOWN) {\n                    increment = 1;\n                }\n                var unreadCounts = _channel_store2.default.getUnreadCount(allChannels[nextIndex].id);\n                while (count < allChannels.length && unreadCounts.msgs === 0 && unreadCounts.mentions === 0) {\n                    nextIndex += increment;\n                    count++;\n                    nextIndex = Utils.mod(nextIndex, allChannels.length);\n                    unreadCounts = _channel_store2.default.getUnreadCount(allChannels[nextIndex].id);\n                }\n                if (unreadCounts.msgs !== 0 || unreadCounts.mentions !== 0) {\n                    var nextChannel = allChannels[nextIndex];\n                    ChannelActions.goToChannel(nextChannel);\n                    _this.updateScrollbarOnChannelChange(nextChannel);\n                }\n                _this.isSwitchingChannel = false;\n            }\n        };\n\n        _this.getDisplayedChannels = function () {\n            return _this.state.favoriteChannels.concat(_this.state.publicChannels).concat(_this.state.privateChannels).concat(_this.state.directAndGroupChannels);\n        };\n\n        _this.handleLeavePublicChannel = function (e, channel) {\n            e.preventDefault();\n            ChannelActions.leaveChannel(channel.id);\n            (0, _diagnostics_actions.trackEvent)('ui', 'ui_public_channel_x_button_clicked');\n        };\n\n        _this.handleLeavePrivateChannel = function (e, channel) {\n            e.preventDefault();\n            GlobalActions.showLeavePrivateChannelModal(channel);\n            (0, _diagnostics_actions.trackEvent)('ui', 'ui_private_channel_x_button_clicked');\n        };\n\n        _this.handleLeaveDirectChannel = function (e, channel) {\n            e.preventDefault();\n\n            if (!_this.isLeaving.get(channel.id)) {\n                _this.isLeaving.set(channel.id, true);\n\n                var id = void 0;\n                var category = void 0;\n                if (channel.type === _constants.Constants.DM_CHANNEL) {\n                    id = channel.teammate_id;\n                    category = _constants.Constants.Preferences.CATEGORY_DIRECT_CHANNEL_SHOW;\n                } else {\n                    id = channel.id;\n                    category = _constants.Constants.Preferences.CATEGORY_GROUP_CHANNEL_SHOW;\n                }\n\n                var currentUserId = _user_store2.default.getCurrentId();\n                (0, _preferences.savePreferences)(currentUserId, [{ user_id: currentUserId, category: category, name: id, value: 'false' }])(dispatch, getState).then(function () {\n                    _this.isLeaving.set(channel.id, false);\n                });\n\n                if (ChannelUtils.isFavoriteChannel(channel)) {\n                    ChannelActions.unmarkFavorite(channel.id);\n                }\n\n                _this.setState(_this.getStateFromStores());\n                (0, _diagnostics_actions.trackEvent)('ui', 'ui_direct_channel_x_button_clicked');\n            }\n\n            if (channel.id === _this.state.activeId) {\n                _this.closedDirectChannel = true;\n                _es.browserHistory.push('/' + _this.state.currentTeam.name + '/channels/town-square');\n            }\n        };\n\n        _this.showMoreChannelsModal = function () {\n            _this.setState({ showMoreChannelsModal: true });\n            (0, _diagnostics_actions.trackEvent)('ui', 'ui_channels_more_public');\n        };\n\n        _this.hideMoreChannelsModal = function () {\n            _this.setState({ showMoreChannelsModal: false });\n        };\n\n        _this.showNewChannelModal = function (type) {\n            _this.setState({ newChannelModalType: type });\n        };\n\n        _this.hideNewChannelModal = function () {\n            _this.setState({ newChannelModalType: '' });\n        };\n\n        _this.showMoreDirectChannelsModal = function (startingUsers) {\n            (0, _diagnostics_actions.trackEvent)('ui', 'ui_channels_more_direct');\n            _this.setState({ showDirectChannelsModal: true, startingUsers: startingUsers });\n        };\n\n        _this.hideMoreDirectChannelsModal = function () {\n            _this.setState({ showDirectChannelsModal: false, startingUsers: null });\n        };\n\n        _this.openLeftSidebar = function () {\n            if (Utils.isMobile()) {\n                setTimeout(function () {\n                    document.querySelector('.app__body .inner-wrap').classList.add('move--right');\n                    document.querySelector('.app__body .sidebar--left').classList.add('move--right');\n                });\n            }\n        };\n\n        _this.openQuickSwitcher = function (e) {\n            e.preventDefault();\n            _app_dispatcher2.default.handleViewAction({\n                type: _constants.ActionTypes.TOGGLE_QUICK_SWITCH_MODAL\n            });\n        };\n\n        _this.createTutorialTip = function () {\n            var screens = [];\n\n            var townSquareDisplayName = _constants.Constants.DEFAULT_CHANNEL_UI_NAME;\n            if (_this.state.townSquare) {\n                townSquareDisplayName = _this.state.townSquare.display_name;\n            }\n\n            var offTopicDisplayName = _constants.Constants.OFFTOPIC_CHANNEL_UI_NAME;\n            if (_this.state.offTopic) {\n                offTopicDisplayName = _this.state.offTopic.display_name;\n            }\n\n            screens.push(_react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                    id: 'sidebar.tutorialScreen1',\n                    defaultMessage: '<h4>Channels</h4><p><strong>Channels</strong> organize conversations across different topics. They\\u2019re open to everyone on your team. To send private communications use <strong>Direct Messages</strong> for a single person or <strong>Private Channels</strong> for multiple people.</p>'\n                })\n            ));\n\n            screens.push(_react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                    id: 'sidebar.tutorialScreen2',\n                    defaultMessage: '<h4>\"{townsquare}\" and \"{offtopic}\" channels</h4> <p>Here are two public channels to start:</p> <p><strong>{townsquare}</strong> is a place for team-wide communication. Everyone in your team is a member of this channel.</p> <p><strong>{offtopic}</strong> is a place for fun and humor outside of work-related channels. You and your team can decide what other channels to create.</p>',\n                    values: {\n                        townsquare: townSquareDisplayName,\n                        offtopic: offTopicDisplayName\n                    }\n                })\n            ));\n\n            screens.push(_react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                    id: 'sidebar.tutorialScreen3',\n                    defaultMessage: '<h4>Creating and Joining Channels</h4> <p>Click <strong>\"More...\"</strong> to create a new channel or join an existing one.</p> <p>You can also create a new public or private channel by clicking the <strong>\"+\" symbol</strong> next to the public or private channel header.</p>'\n                })\n            ));\n\n            return _react2.default.createElement(_tutorial_tip2.default, {\n                placement: 'right',\n                screens: screens,\n                overlayClass: 'tip-overlay--sidebar',\n                diagnosticsTag: 'tutorial_tip_2_channels'\n            });\n        };\n\n        _this.createChannelElement = function (channel, index, arr, handleClose) {\n            var members = _this.state.members;\n            var activeId = _this.state.activeId;\n            var channelMember = members[channel.id];\n            var unreadCount = _this.state.unreadCounts[channel.id] || { msgs: 0, mentions: 0 };\n            var msgCount = void 0;\n\n            var linkClass = '';\n            if (channel.id === activeId) {\n                linkClass = 'active';\n            }\n\n            var rowClass = 'sidebar-item';\n\n            var unread = false;\n            if (channelMember) {\n                msgCount = unreadCount.msgs + unreadCount.mentions;\n                unread = msgCount > 0 || channelMember.mention_count > 0;\n            }\n\n            if (unread) {\n                rowClass += ' unread-title';\n\n                if (channel.id !== activeId) {\n                    if (!_this.firstUnreadChannel) {\n                        _this.firstUnreadChannel = channel.name;\n                    }\n                    _this.lastUnreadChannel = channel.name;\n                }\n            }\n\n            var badge = null;\n            if (channelMember) {\n                if (unreadCount.mentions) {\n                    badge = _react2.default.createElement(\n                        'span',\n                        { className: 'badge' },\n                        unreadCount.mentions\n                    );\n                    _this.badgesActive = true;\n                }\n            } else if (_this.state.loadingDMChannel === index && channel.type === _constants.Constants.DM_CHANNEL) {\n                badge = _react2.default.createElement('img', {\n                    className: 'channel-loading-gif pull-right',\n                    src: _load2.default\n                });\n            }\n\n            if (unreadCount.mentions > 0) {\n                rowClass += ' has-badge';\n            }\n\n            var icon = null;\n            var globeIcon = _constants.Constants.GLOBE_ICON_SVG;\n            var lockIcon = _constants.Constants.LOCK_ICON_SVG;\n            if (channel.type === _constants.Constants.OPEN_CHANNEL) {\n                icon = _react2.default.createElement('span', {\n                    className: 'icon icon__globe',\n                    dangerouslySetInnerHTML: { __html: globeIcon }\n                });\n            } else if (channel.type === _constants.Constants.PRIVATE_CHANNEL) {\n                icon = _react2.default.createElement('span', {\n                    className: 'icon icon__lock',\n                    dangerouslySetInnerHTML: { __html: lockIcon }\n                });\n            } else if (channel.type === _constants.Constants.GM_CHANNEL) {\n                icon = _react2.default.createElement(\n                    'div',\n                    { className: 'status status--group' },\n                    _user_store2.default.getProfileListInChannel(channel.id, true).length\n                );\n            } else {\n                // set up status icon for direct message channels (status is null for other channel types)\n                icon = _react2.default.createElement(_status_icon2.default, {\n                    type: 'avatar',\n                    status: channel.status\n                });\n            }\n\n            var closeButton = null;\n            var removeTooltip = _react2.default.createElement(\n                _reactBootstrap.Tooltip,\n                { id: 'remove-dm-tooltip' },\n                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'sidebar.removeList',\n                    defaultMessage: 'Remove from list'\n                })\n            );\n            if (channel.type === _constants.Constants.OPEN_CHANNEL || channel.type === _constants.Constants.PRIVATE_CHANNEL) {\n                removeTooltip = _react2.default.createElement(\n                    _reactBootstrap.Tooltip,\n                    { id: 'remove-dm-tooltip' },\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'sidebar.leave',\n                        defaultMessage: 'Leave channel'\n                    })\n                );\n            }\n            if (handleClose && !badge) {\n                closeButton = _react2.default.createElement(\n                    _reactBootstrap.OverlayTrigger,\n                    {\n                        trigger: ['hover', 'focus'],\n                        delayShow: 1000,\n                        placement: 'top',\n                        overlay: removeTooltip\n                    },\n                    _react2.default.createElement(\n                        'span',\n                        {\n                            onClick: function onClick(e) {\n                                return handleClose(e, channel);\n                            },\n                            className: 'btn-close'\n                        },\n                        '×'\n                    )\n                );\n\n                rowClass += ' has-close';\n            }\n\n            var tutorialTip = null;\n            if (_this.state.showTutorialTip && channel.name === _constants.Constants.DEFAULT_CHANNEL) {\n                tutorialTip = _this.createTutorialTip();\n                _this.openLeftSidebar();\n            }\n\n            var link = '';\n            if (channel.fake) {\n                link = '/' + _this.state.currentTeam.name + '/channels/' + channel.name + '?fakechannel=' + encodeURIComponent((0, _stringify2.default)(channel));\n            } else {\n                link = '/' + _this.state.currentTeam.name + '/channels/' + channel.name;\n            }\n\n            var displayName = channel.display_name;\n\n            return _react2.default.createElement(\n                'li',\n                {\n                    key: channel.name,\n                    ref: channel.name,\n                    className: linkClass\n                },\n                _react2.default.createElement(\n                    _es.Link,\n                    {\n                        to: link,\n                        className: rowClass,\n                        onClick: _this.trackChannelSelectedEvent\n                    },\n                    icon,\n                    _react2.default.createElement(\n                        'span',\n                        { className: 'sidebar-item__name' },\n                        displayName\n                    ),\n                    badge,\n                    closeButton\n                ),\n                tutorialTip\n            );\n        };\n\n        _this.trackChannelSelectedEvent = function () {\n            (0, _diagnostics_actions.trackEvent)('ui', 'ui_channel_selected');\n        };\n\n        _this.badgesActive = false;\n        _this.firstUnreadChannel = null;\n        _this.lastUnreadChannel = null;\n\n        _this.isLeaving = new _map2.default();\n        _this.isSwitchingChannel = false;\n        _this.closedDirectChannel = false;\n\n        var state = _this.getStateFromStores();\n        state.newChannelModalType = '';\n        state.showDirectChannelsModal = false;\n        state.showMoreChannelsModal = false;\n        state.loadingDMChannel = -1;\n        state.inChannelChange = false;\n        _this.state = state;\n        return _this;\n    }\n\n    (0, _createClass3.default)(Sidebar, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            _channel_store2.default.addChangeListener(this.onChange);\n            _user_store2.default.addChangeListener(this.onChange);\n            _user_store2.default.addInTeamChangeListener(this.onChange);\n            _user_store2.default.addInChannelChangeListener(this.onInChannelChange);\n            _user_store2.default.addStatusesChangeListener(this.onChange);\n            _team_store2.default.addChangeListener(this.onChange);\n            _preference_store2.default.addChangeListener(this.onChange);\n            _modal_store2.default.addModalListener(_constants.ActionTypes.TOGGLE_DM_MODAL, this.onModalChange);\n\n            this.updateTitle();\n            this.updateUnreadIndicators();\n\n            document.addEventListener('keydown', this.navigateChannelShortcut);\n            document.addEventListener('keydown', this.navigateUnreadChannelShortcut);\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n            if (!Utils.areObjectsEqual(nextState, this.state)) {\n                return true;\n            }\n            return false;\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps, prevState) {\n            this.updateTitle();\n            this.updateUnreadIndicators();\n            if (!Utils.isMobile()) {\n                (0, _jquery2.default)('.sidebar--left .nav-pills__container').perfectScrollbar();\n            }\n\n            // reset the scrollbar upon switching teams\n            if (this.state.currentTeam !== prevState.currentTeam) {\n                this.refs.container.scrollTop = 0;\n                (0, _jquery2.default)('.nav-pills__container').perfectScrollbar('update');\n            }\n\n            // close the LHS on mobile when you change channels\n            if (this.state.activeId !== prevState.activeId) {\n                if (this.closedDirectChannel) {\n                    this.closedDirectChannel = false;\n                } else {\n                    (0, _jquery2.default)('.app__body .inner-wrap').removeClass('move--right');\n                    (0, _jquery2.default)('.app__body .sidebar--left').removeClass('move--right');\n                    (0, _jquery2.default)('.multi-teams .team-sidebar').removeClass('move--right');\n                }\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            _channel_store2.default.removeChangeListener(this.onChange);\n            _user_store2.default.removeChangeListener(this.onChange);\n            _user_store2.default.removeInTeamChangeListener(this.onChange);\n            _user_store2.default.removeInChannelChangeListener(this.onChange);\n            _user_store2.default.removeStatusesChangeListener(this.onChange);\n            _team_store2.default.removeChangeListener(this.onChange);\n            _preference_store2.default.removeChangeListener(this.onChange);\n            _modal_store2.default.removeModalListener(_constants.ActionTypes.TOGGLE_DM_MODAL, this.onModalChange);\n            document.removeEventListener('keydown', this.navigateChannelShortcut);\n            document.removeEventListener('keydown', this.navigateUnreadChannelShortcut);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var switchChannelIcon = _constants.Constants.SWITCH_CHANNEL_ICON_SVG;\n\n            // Check if we have all info needed to render\n            if (this.state.currentTeam == null || this.state.currentUser == null) {\n                return _react2.default.createElement('div', null);\n            }\n\n            this.lastBadgesActive = this.badgesActive;\n            this.badgesActive = false;\n\n            // keep track of the first and last unread channels so we can use them to set the unread indicators\n            this.firstUnreadChannel = null;\n            this.lastUnreadChannel = null;\n\n            // create elements for all 4 types of channels\n            var favoriteItems = this.state.favoriteChannels.map(function (channel, index, arr) {\n                if (channel.type === _constants.Constants.DM_CHANNEL || channel.type === _constants.Constants.GM_CHANNEL) {\n                    return _this2.createChannelElement(channel, index, arr, _this2.handleLeaveDirectChannel);\n                } else if (global.window.mm_config.EnableXToLeaveChannelsFromLHS === 'true') {\n                    if (channel.type === _constants.Constants.OPEN_CHANNEL && channel.name !== _constants.Constants.DEFAULT_CHANNEL) {\n                        return _this2.createChannelElement(channel, index, arr, _this2.handleLeavePublicChannel);\n                    } else if (channel.type === _constants.Constants.PRIVATE_CHANNEL) {\n                        return _this2.createChannelElement(channel, index, arr, _this2.handleLeavePrivateChannel);\n                    }\n                }\n\n                return _this2.createChannelElement(channel);\n            });\n\n            var publicChannelItems = this.state.publicChannels.map(function (channel, index, arr) {\n                if (global.window.mm_config.EnableXToLeaveChannelsFromLHS !== 'true' || channel.name === _constants.Constants.DEFAULT_CHANNEL) {\n                    return _this2.createChannelElement(channel);\n                }\n                return _this2.createChannelElement(channel, index, arr, _this2.handleLeavePublicChannel);\n            });\n\n            var privateChannelItems = this.state.privateChannels.map(function (channel, index, arr) {\n                if (global.window.mm_config.EnableXToLeaveChannelsFromLHS !== 'true') {\n                    return _this2.createChannelElement(channel);\n                }\n                return _this2.createChannelElement(channel, index, arr, _this2.handleLeavePrivateChannel);\n            });\n\n            var directMessageItems = this.state.directAndGroupChannels.map(function (channel, index, arr) {\n                return _this2.createChannelElement(channel, index, arr, _this2.handleLeaveDirectChannel);\n            });\n\n            // update the favicon to show if there are any notifications\n            if (this.lastBadgesActive !== this.badgesActive) {\n                var link = document.createElement('link');\n                link.type = 'image/x-icon';\n                link.rel = 'shortcut icon';\n                link.id = 'favicon';\n                if (this.badgesActive) {\n                    link.href = _redfavicon16x2.default;\n                } else {\n                    link.href = _favicon16x2.default;\n                }\n                var head = document.getElementsByTagName('head')[0];\n                var oldLink = document.getElementById('favicon');\n                if (oldLink) {\n                    head.removeChild(oldLink);\n                }\n                head.appendChild(link);\n            }\n\n            var directMessageMore = _react2.default.createElement(\n                'li',\n                { key: 'more' },\n                _react2.default.createElement(\n                    'button',\n                    {\n                        id: 'moreDirectMessage',\n                        className: 'nav-more cursor--pointer style--none btn--block',\n                        onClick: this.handleOpenMoreDirectChannelsModal\n                    },\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'sidebar.moreElips',\n                        defaultMessage: 'More...'\n                    })\n                )\n            );\n\n            var showChannelModal = false;\n            if (this.state.newChannelModalType !== '') {\n                showChannelModal = true;\n            }\n\n            var createChannelTootlip = _react2.default.createElement(\n                _reactBootstrap.Tooltip,\n                { id: 'new-channel-tooltip' },\n                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'sidebar.createChannel',\n                    defaultMessage: 'Create new public channel'\n                })\n            );\n            var createGroupTootlip = _react2.default.createElement(\n                _reactBootstrap.Tooltip,\n                { id: 'new-group-tooltip' },\n                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'sidebar.createGroup',\n                    defaultMessage: 'Create new private channel'\n                })\n            );\n\n            var createDirectMessageTooltip = _react2.default.createElement(\n                _reactBootstrap.Tooltip,\n                {\n                    id: 'new-group-tooltip',\n                    className: 'hidden-xs'\n                },\n                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'sidebar.createDirectMessage',\n                    defaultMessage: 'Create new direct message'\n                })\n            );\n\n            var above = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                id: 'sidebar.unreads',\n                defaultMessage: 'More unreads'\n            });\n\n            var below = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                id: 'sidebar.unreads',\n                defaultMessage: 'More unreads'\n            });\n\n            var isTeamAdmin = _team_store2.default.isTeamAdminForCurrentTeam();\n            var isSystemAdmin = _user_store2.default.isSystemAdminForCurrentUser();\n\n            var createPublicChannelIcon = _react2.default.createElement(\n                _reactBootstrap.OverlayTrigger,\n                {\n                    trigger: ['hover', 'focus'],\n                    delayShow: 500,\n                    placement: 'top',\n                    overlay: createChannelTootlip\n                },\n                _react2.default.createElement(\n                    'button',\n                    {\n                        id: 'createPublicChannel',\n                        className: 'add-channel-btn cursor--pointer style--none',\n                        onClick: this.showNewChannelModal.bind(this, _constants.Constants.OPEN_CHANNEL)\n                    },\n                    '+'\n                )\n            );\n\n            var createPrivateChannelIcon = _react2.default.createElement(\n                _reactBootstrap.OverlayTrigger,\n                {\n                    trigger: ['hover', 'focus'],\n                    delayShow: 500,\n                    placement: 'top',\n                    overlay: createGroupTootlip\n                },\n                _react2.default.createElement(\n                    'button',\n                    {\n                        id: 'createPrivateChannel',\n                        className: 'add-channel-btn cursor--pointer style--none',\n                        onClick: this.showNewChannelModal.bind(this, _constants.Constants.PRIVATE_CHANNEL)\n                    },\n                    '+'\n                )\n            );\n\n            if (!ChannelUtils.showCreateOption(_constants.Constants.OPEN_CHANNEL, isTeamAdmin, isSystemAdmin)) {\n                createPublicChannelIcon = null;\n            }\n\n            var createDirectMessageIcon = _react2.default.createElement(\n                _reactBootstrap.OverlayTrigger,\n                {\n                    className: 'hidden-xs',\n                    delayShow: 500,\n                    placement: 'top',\n                    overlay: createDirectMessageTooltip\n                },\n                _react2.default.createElement(\n                    'button',\n                    {\n                        className: 'add-channel-btn cursor--pointer style--none',\n                        onClick: this.handleOpenMoreDirectChannelsModal\n                    },\n                    '+'\n                )\n            );\n\n            if (!ChannelUtils.showCreateOption(_constants.Constants.PRIVATE_CHANNEL, isTeamAdmin, isSystemAdmin)) {\n                createPrivateChannelIcon = null;\n            }\n\n            var moreDirectChannelsModal = void 0;\n            if (this.state.showDirectChannelsModal) {\n                moreDirectChannelsModal = _react2.default.createElement(_more_direct_channels2.default, {\n                    onModalDismissed: this.hideMoreDirectChannelsModal,\n                    startingUsers: this.state.startingUsers\n                });\n            }\n\n            var moreChannelsModal = void 0;\n            if (this.state.showMoreChannelsModal) {\n                moreChannelsModal = _react2.default.createElement(_more_channels2.default, {\n                    onModalDismissed: this.hideMoreChannelsModal,\n                    handleNewChannel: function handleNewChannel() {\n                        _this2.hideMoreChannelsModal();\n                        _this2.showNewChannelModal(_constants.Constants.OPEN_CHANNEL);\n                    }\n                });\n            }\n\n            var quickSwitchTextShortcutId = 'quick_switch_modal.channelsShortcut.windows';\n            var quickSwitchTextShortcutDefault = '- CTRL+K';\n            if (Utils.isMac()) {\n                quickSwitchTextShortcutId = 'quick_switch_modal.channelsShortcut.mac';\n                quickSwitchTextShortcutDefault = '- ⌘K';\n            }\n\n            var quickSwitchTextShortcut = _react2.default.createElement(\n                'span',\n                { className: 'switch__shortcut hidden-xs' },\n                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: quickSwitchTextShortcutId,\n                    defaultMessage: quickSwitchTextShortcutDefault\n                })\n            );\n\n            return _react2.default.createElement(\n                'div',\n                {\n                    className: 'sidebar--left',\n                    id: 'sidebar-left',\n                    key: 'sidebar-left'\n                },\n                _react2.default.createElement(_new_channel_flow2.default, {\n                    show: showChannelModal,\n                    channelType: this.state.newChannelModalType,\n                    onModalDismissed: this.hideNewChannelModal\n                }),\n                moreDirectChannelsModal,\n                moreChannelsModal,\n                _react2.default.createElement(_sidebar_header2.default, {\n                    teamDisplayName: this.state.currentTeam.display_name,\n                    teamDescription: this.state.currentTeam.description,\n                    teamName: this.state.currentTeam.name,\n                    teamType: this.state.currentTeam.type,\n                    currentUser: this.state.currentUser\n                }),\n                _react2.default.createElement(_unread_channel_indicator2.default, {\n                    name: 'Top',\n                    show: this.state.showTopUnread,\n                    onClick: this.scrollToFirstUnreadChannel,\n                    extraClass: 'nav-pills__unread-indicator-top',\n                    text: above\n                }),\n                _react2.default.createElement(_unread_channel_indicator2.default, {\n                    name: 'Bottom',\n                    show: this.state.showBottomUnread,\n                    onClick: this.scrollToLastUnreadChannel,\n                    extraClass: 'nav-pills__unread-indicator-bottom',\n                    text: below\n                }),\n                _react2.default.createElement(\n                    'div',\n                    {\n                        id: 'sidebarChannelContainer',\n                        ref: 'container',\n                        className: 'nav-pills__container',\n                        onScroll: this.onScroll\n                    },\n                    favoriteItems.length !== 0 && _react2.default.createElement(\n                        'ul',\n                        { className: 'nav nav-pills nav-stacked' },\n                        _react2.default.createElement(\n                            'li',\n                            null,\n                            _react2.default.createElement(\n                                'h4',\n                                { id: 'favoriteChannel' },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'sidebar.favorite',\n                                    defaultMessage: 'FAVORITE CHANNELS'\n                                })\n                            )\n                        ),\n                        favoriteItems\n                    ),\n                    _react2.default.createElement(\n                        'ul',\n                        { className: 'nav nav-pills nav-stacked' },\n                        _react2.default.createElement(\n                            'li',\n                            null,\n                            _react2.default.createElement(\n                                'h4',\n                                { id: 'publicChannel' },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'sidebar.channels',\n                                    defaultMessage: 'PUBLIC CHANNELS'\n                                }),\n                                createPublicChannelIcon\n                            )\n                        ),\n                        publicChannelItems,\n                        _react2.default.createElement(\n                            'li',\n                            null,\n                            _react2.default.createElement(\n                                'button',\n                                {\n                                    id: 'sidebarChannelsMore',\n                                    className: 'nav-more cursor--pointer style--none btn--block',\n                                    onClick: this.showMoreChannelsModal\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'sidebar.moreElips',\n                                    defaultMessage: 'More...'\n                                })\n                            )\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'ul',\n                        { className: 'nav nav-pills nav-stacked' },\n                        _react2.default.createElement(\n                            'li',\n                            null,\n                            _react2.default.createElement(\n                                'h4',\n                                { id: 'privateChannel' },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'sidebar.pg',\n                                    defaultMessage: 'PRIVATE CHANNELS'\n                                }),\n                                createPrivateChannelIcon\n                            )\n                        ),\n                        privateChannelItems\n                    ),\n                    _react2.default.createElement(\n                        'ul',\n                        { className: 'nav nav-pills nav-stacked' },\n                        _react2.default.createElement(\n                            'li',\n                            null,\n                            _react2.default.createElement(\n                                'h4',\n                                { id: 'directChannel' },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'sidebar.direct',\n                                    defaultMessage: 'DIRECT MESSAGES'\n                                }),\n                                createDirectMessageIcon\n                            )\n                        ),\n                        directMessageItems,\n                        directMessageMore\n                    )\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'sidebar__switcher' },\n                    _react2.default.createElement(\n                        'button',\n                        {\n                            id: 'sidebarSwitcherButton',\n                            className: 'btn btn-link',\n                            onClick: this.openQuickSwitcher\n                        },\n                        _react2.default.createElement('span', {\n                            className: 'icon icon__switch',\n                            dangerouslySetInnerHTML: { __html: switchChannelIcon }\n                        }),\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'channel_switch_modal.title',\n                            defaultMessage: 'Switch Channels'\n                        }),\n                        quickSwitchTextShortcut\n                    )\n                )\n            );\n        }\n    }]);\n    return Sidebar;\n}(_react2.default.Component);\n\nexports.default = Sidebar;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 0.9c7e2c030757ccb2d809.js","module.exports = __webpack_public_path__ + \"files/2c9d31cec343005b617e3b39fdb20895.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./images/favicon/redfavicon-16x16.png\n// module id = 2484\n// module chunks = 0","// Copyright (c) 2017 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getChannels} from 'mattermost-redux/actions/channels';\n\nimport MoreChannels from './more_channels.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        ...ownProps\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getChannels\n        }, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoreChannels);\n\n\n\n// WEBPACK FOOTER //\n// ./components/more_channels/index.js","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport PureRenderMixin from 'react-addons-pure-render-mixin';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport {browserHistory} from 'react-router/es6';\n\nimport {joinChannel, searchMoreChannels} from 'actions/channel_actions.jsx';\nimport ChannelStore from 'stores/channel_store.jsx';\nimport TeamStore from 'stores/team_store.jsx';\nimport UserStore from 'stores/user_store.jsx';\n\nimport {showCreateOption} from 'utils/channel_utils.jsx';\nimport Constants from 'utils/constants.jsx';\n\nimport SearchableChannelList from 'components/searchable_channel_list.jsx';\n\nconst CHANNELS_CHUNK_SIZE = 50;\nconst CHANNELS_PER_PAGE = 50;\nconst SEARCH_TIMEOUT_MILLISECONDS = 100;\n\nexport default class MoreChannels extends React.Component {\n    static propTypes = {\n        onModalDismissed: PropTypes.func,\n        handleNewChannel: PropTypes.func,\n        actions: PropTypes.shape({\n            getChannels: PropTypes.func.isRequired\n        }).isRequired\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.onChange = this.onChange.bind(this);\n        this.handleJoin = this.handleJoin.bind(this);\n        this.handleHide = this.handleHide.bind(this);\n        this.handleExit = this.handleExit.bind(this);\n        this.nextPage = this.nextPage.bind(this);\n        this.search = this.search.bind(this);\n\n        this.shouldComponentUpdate = PureRenderMixin.shouldComponentUpdate.bind(this);\n\n        this.searchTimeoutId = 0;\n\n        this.state = {\n            show: true,\n            search: false,\n            channels: null,\n            serverError: null\n        };\n    }\n\n    componentDidMount() {\n        ChannelStore.addChangeListener(this.onChange);\n        this.props.actions.getChannels(TeamStore.getCurrentId(), 0, CHANNELS_CHUNK_SIZE * 2);\n    }\n\n    componentWillUnmount() {\n        ChannelStore.removeChangeListener(this.onChange);\n    }\n\n    handleHide() {\n        this.setState({show: false});\n    }\n\n    handleExit() {\n        if (this.props.onModalDismissed) {\n            this.props.onModalDismissed();\n        }\n    }\n\n    onChange(force) {\n        if (this.state.search && !force) {\n            return;\n        }\n\n        this.setState({\n            channels: ChannelStore.getMoreChannelsList(),\n            serverError: null\n        });\n    }\n\n    nextPage(page) {\n        this.props.actions.getChannels(TeamStore.getCurrentId(), page + 1, CHANNELS_PER_PAGE);\n    }\n\n    handleJoin(channel, done) {\n        joinChannel(\n            channel,\n            () => {\n                browserHistory.push(TeamStore.getCurrentTeamRelativeUrl() + '/channels/' + channel.name);\n                if (done) {\n                    done();\n                }\n\n                this.handleHide();\n            },\n            (err) => {\n                this.setState({serverError: err.message});\n                if (done) {\n                    done();\n                }\n            }\n        );\n    }\n\n    search(term) {\n        clearTimeout(this.searchTimeoutId);\n\n        if (term === '') {\n            this.onChange(true);\n            this.setState({search: false});\n            this.searchTimeoutId = '';\n            return;\n        }\n\n        const searchTimeoutId = setTimeout(\n            () => {\n                searchMoreChannels(\n                    term,\n                    (channels) => {\n                        if (searchTimeoutId !== this.searchTimeoutId) {\n                            return;\n                        }\n                        this.setState({search: true, channels});\n                    }\n                );\n            },\n            SEARCH_TIMEOUT_MILLISECONDS\n        );\n\n        this.searchTimeoutId = searchTimeoutId;\n    }\n\n    render() {\n        let serverError;\n        if (this.state.serverError) {\n            serverError = <div className='form-group has-error'><label className='control-label'>{this.state.serverError}</label></div>;\n        }\n\n        let createNewChannelButton = (\n            <button\n                id='createNewChannel'\n                type='button'\n                className='btn btn-primary channel-create-btn'\n                onClick={this.props.handleNewChannel}\n            >\n                <FormattedMessage\n                    id='more_channels.create'\n                    defaultMessage='Create New Channel'\n                />\n            </button>\n        );\n\n        let createChannelHelpText = (\n            <p className='secondary-message'>\n                <FormattedMessage\n                    id='more_channels.createClick'\n                    defaultMessage=\"Click 'Create New Channel' to make a new one\"\n                />\n            </p>\n        );\n\n        const isTeamAdmin = TeamStore.isTeamAdminForCurrentTeam();\n        const isSystemAdmin = UserStore.isSystemAdminForCurrentUser();\n\n        if (!showCreateOption(Constants.OPEN_CHANNEL, isTeamAdmin, isSystemAdmin)) {\n            createNewChannelButton = null;\n            createChannelHelpText = null;\n        }\n\n        return (\n            <Modal\n                dialogClassName='more-modal more-modal--action'\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>\n                        <FormattedMessage\n                            id='more_channels.title'\n                            defaultMessage='More Channels'\n                        />\n                    </Modal.Title>\n                    {createNewChannelButton}\n                </Modal.Header>\n                <Modal.Body>\n                    <SearchableChannelList\n                        channels={this.state.channels}\n                        channelsPerPage={CHANNELS_PER_PAGE}\n                        nextPage={this.nextPage}\n                        isSearch={this.state.search}\n                        search={this.search}\n                        handleJoin={this.handleJoin}\n                        noResultsText={createChannelHelpText}\n                    />\n                    {serverError}\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/more_channels/more_channels.jsx","// Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport $ from 'jquery';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport loadingGif from 'images/load.gif';\n\nimport LoadingScreen from './loading_screen.jsx';\n\nconst NEXT_BUTTON_TIMEOUT_MILLISECONDS = 500;\n\nexport default class SearchableChannelList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.createChannelRow = this.createChannelRow.bind(this);\n        this.nextPage = this.nextPage.bind(this);\n        this.previousPage = this.previousPage.bind(this);\n        this.doSearch = this.doSearch.bind(this);\n\n        this.nextTimeoutId = 0;\n\n        this.state = {\n            joiningChannel: '',\n            page: 0,\n            nextDisabled: false\n        };\n    }\n\n    componentDidMount() {\n        // only focus the search box on desktop so that we don't cause the keyboard to open on mobile\n        if (!UserAgent.isMobile()) {\n            this.refs.filter.focus();\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.page !== this.state.page) {\n            $(this.refs.channelList).scrollTop(0);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.isSearch && !this.props.isSearch) {\n            this.setState({page: 0});\n        }\n    }\n\n    handleJoin(channel) {\n        this.setState({joiningChannel: channel.id});\n        this.props.handleJoin(\n            channel,\n            () => {\n                this.setState({joiningChannel: ''});\n            }\n        );\n    }\n\n    createChannelRow(channel) {\n        let joinButton;\n        if (this.state.joiningChannel === channel.id) {\n            joinButton = (\n                <img\n                    className='join-channel-loading-gif'\n                    src={loadingGif}\n                />\n            );\n        } else {\n            joinButton = (\n                <button\n                    onClick={this.handleJoin.bind(this, channel)}\n                    className='btn btn-primary'\n                    disabled={this.state.joiningChannel !== '' && this.state.joiningChannel !== channel.id}\n                >\n                    <FormattedMessage\n                        id='more_channels.join'\n                        defaultMessage='Join'\n                    />\n                </button>\n            );\n        }\n\n        return (\n            <div\n                className='more-modal__row'\n                key={channel.id}\n            >\n                <div className='more-modal__details'>\n                    <p className='more-modal__name'>{channel.display_name}</p>\n                    <p className='more-modal__description'>{channel.purpose}</p>\n                </div>\n                <div className='more-modal__actions'>\n                    {joinButton}\n                </div>\n            </div>\n        );\n    }\n\n    nextPage(e) {\n        e.preventDefault();\n        this.setState({page: this.state.page + 1, nextDisabled: true});\n        this.nextTimeoutId = setTimeout(() => this.setState({nextDisabled: false}), NEXT_BUTTON_TIMEOUT_MILLISECONDS);\n        this.props.nextPage(this.state.page + 1);\n        $(ReactDOM.findDOMNode(this.refs.channelListScroll)).scrollTop(0);\n    }\n\n    previousPage(e) {\n        e.preventDefault();\n        this.setState({page: this.state.page - 1});\n        $(ReactDOM.findDOMNode(this.refs.channelListScroll)).scrollTop(0);\n    }\n\n    doSearch() {\n        const term = this.refs.filter.value;\n        this.props.search(term);\n        if (term === '') {\n            this.setState({page: 0});\n        }\n    }\n\n    render() {\n        const channels = this.props.channels;\n        let listContent;\n        let nextButton;\n        let previousButton;\n\n        if (channels == null) {\n            listContent = <LoadingScreen/>;\n        } else if (channels.length === 0) {\n            listContent = (\n                <div className='no-channel-message'>\n                    <p className='primary-message'>\n                        <FormattedMessage\n                            id='more_channels.noMore'\n                            defaultMessage='No more channels to join'\n                        />\n                    </p>\n                    {this.props.noResultsText}\n                </div>\n            );\n        } else {\n            const pageStart = this.state.page * this.props.channelsPerPage;\n            const pageEnd = pageStart + this.props.channelsPerPage;\n            const channelsToDisplay = this.props.channels.slice(pageStart, pageEnd);\n            listContent = channelsToDisplay.map(this.createChannelRow);\n\n            if (channelsToDisplay.length >= this.props.channelsPerPage && pageEnd < this.props.channels.length) {\n                nextButton = (\n                    <button\n                        className='btn btn-default filter-control filter-control__next'\n                        onClick={this.nextPage}\n                        disabled={this.state.nextDisabled}\n                    >\n                        <FormattedMessage\n                            id='more_channels.next'\n                            defaultMessage='Next'\n                        />\n                    </button>\n                );\n            }\n\n            if (this.state.page > 0) {\n                previousButton = (\n                    <button\n                        className='btn btn-default filter-control filter-control__prev'\n                        onClick={this.previousPage}\n                    >\n                        <FormattedMessage\n                            id='more_channels.prev'\n                            defaultMessage='Previous'\n                        />\n                    </button>\n                );\n            }\n        }\n\n        return (\n            <div className='filtered-user-list'>\n                <div className='filter-row'>\n                    <div className='col-sm-12'>\n                        <input\n                            id='searchChannelsTextbox'\n                            ref='filter'\n                            className='form-control filter-textbox'\n                            placeholder={localizeMessage('filtered_channels_list.search', 'Search channels')}\n                            onInput={this.doSearch}\n                        />\n                    </div>\n                </div>\n                <div\n                    ref='channelList'\n                    className='more-modal__list'\n                >\n                    <div ref='channelListScroll'>\n                        {listContent}\n                    </div>\n                </div>\n                <div className='filter-controls'>\n                    {previousButton}\n                    {nextButton}\n                </div>\n            </div>\n        );\n    }\n}\n\nSearchableChannelList.defaultProps = {\n    channels: [],\n    isSearch: false\n};\n\nSearchableChannelList.propTypes = {\n    channels: PropTypes.arrayOf(PropTypes.object),\n    channelsPerPage: PropTypes.number,\n    nextPage: PropTypes.func.isRequired,\n    isSearch: PropTypes.bool,\n    search: PropTypes.func.isRequired,\n    handleJoin: PropTypes.func.isRequired,\n    noResultsText: PropTypes.object\n};\n\n\n// WEBPACK FOOTER //\n// ./components/searchable_channel_list.jsx","// Copyright (c) 2017 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getProfiles, getProfilesInTeam} from 'mattermost-redux/actions/users';\n\nimport MoreDirectChannels from './more_direct_channels.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        ...ownProps\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getProfiles,\n            getProfilesInTeam\n        }, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoreDirectChannels);\n\n\n\n// WEBPACK FOOTER //\n// ./components/more_direct_channels/index.js","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport {browserHistory} from 'react-router/es6';\n\nimport {Client4} from 'mattermost-redux/client';\nimport {searchProfiles, searchProfilesInCurrentTeam} from 'mattermost-redux/selectors/entities/users';\n\nimport {openDirectChannelToUser, openGroupChannelToUsers} from 'actions/channel_actions.jsx';\nimport {searchUsers} from 'actions/user_actions.jsx';\nimport store from 'stores/redux_store.jsx';\nimport TeamStore from 'stores/team_store.jsx';\nimport UserStore from 'stores/user_store.jsx';\n\nimport Constants from 'utils/constants.jsx';\nimport {displayEntireNameForUser} from 'utils/utils.jsx';\n\nimport MultiSelect from 'components/multiselect/multiselect.jsx';\nimport ProfilePicture from 'components/profile_picture.jsx';\n\nconst USERS_PER_PAGE = 50;\nconst MAX_SELECTABLE_VALUES = Constants.MAX_USERS_IN_GM - 1;\n\nexport default class MoreDirectChannels extends React.Component {\n    static propTypes = {\n        startingUsers: PropTypes.arrayOf(PropTypes.object),\n        onModalDismissed: PropTypes.func,\n        actions: PropTypes.shape({\n            getProfiles: PropTypes.func.isRequired,\n            getProfilesInTeam: PropTypes.func.isRequired\n        }).isRequired\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleHide = this.handleHide.bind(this);\n        this.handleExit = this.handleExit.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handlePageChange = this.handlePageChange.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.search = this.search.bind(this);\n        this.addValue = this.addValue.bind(this);\n\n        this.searchTimeoutId = 0;\n        this.term = '';\n        this.listType = global.window.mm_config.RestrictDirectMessage;\n\n        const values = [];\n        if (props.startingUsers) {\n            for (let i = 0; i < props.startingUsers.length; i++) {\n                const user = Object.assign({}, props.startingUsers[i]);\n                user.value = user.id;\n                user.label = '@' + user.username;\n                values.push(user);\n            }\n        }\n\n        this.state = {\n            users: null,\n            values,\n            show: true,\n            search: false,\n            loadingChannel: -1\n        };\n    }\n\n    componentDidMount() {\n        UserStore.addChangeListener(this.onChange);\n        UserStore.addInTeamChangeListener(this.onChange);\n        UserStore.addStatusesChangeListener(this.onChange);\n\n        if (this.listType === 'any') {\n            this.props.actions.getProfiles(0, USERS_PER_PAGE * 2);\n        } else {\n            this.props.actions.getProfilesInTeam(TeamStore.getCurrentId(), 0, USERS_PER_PAGE * 2);\n        }\n    }\n\n    componentWillUnmount() {\n        UserStore.removeChangeListener(this.onChange);\n        UserStore.removeInTeamChangeListener(this.onChange);\n        UserStore.removeStatusesChangeListener(this.onChange);\n    }\n\n    handleHide() {\n        this.setState({show: false});\n    }\n\n    handleExit() {\n        if (this.exitToChannel) {\n            browserHistory.push(this.exitToChannel);\n        }\n\n        if (this.props.onModalDismissed) {\n            this.props.onModalDismissed();\n        }\n    }\n\n    handleSubmit(e) {\n        if (e) {\n            e.preventDefault();\n        }\n\n        if (this.state.loadingChannel !== -1) {\n            return;\n        }\n\n        const userIds = this.state.values.map((v) => v.id);\n        if (userIds.length === 0) {\n            return;\n        }\n\n        this.setState({loadingChannel: 1});\n\n        const success = (channel) => {\n            // Due to how react-overlays Modal handles focus, we delay pushing\n            // the new channel information until the modal is fully exited.\n            // The channel information will be pushed in `handleExit`\n            this.exitToChannel = TeamStore.getCurrentTeamRelativeUrl() + '/channels/' + channel.name;\n            this.setState({loadingChannel: -1});\n            this.handleHide();\n        };\n\n        const error = () => {\n            this.setState({loadingChannel: -1});\n        };\n\n        if (userIds.length === 1) {\n            openDirectChannelToUser(userIds[0], success, error);\n        } else {\n            openGroupChannelToUsers(userIds, success, error);\n        }\n    }\n\n    addValue(value) {\n        const values = Object.assign([], this.state.values);\n        if (values.indexOf(value) === -1) {\n            values.push(value);\n        }\n\n        this.setState({values});\n    }\n\n    onChange() {\n        let users;\n        if (this.term) {\n            if (this.listType === 'any') {\n                users = Object.assign([], searchProfiles(store.getState(), this.term, true));\n            } else {\n                users = Object.assign([], searchProfilesInCurrentTeam(store.getState(), this.term, true));\n            }\n        } else if (this.listType === 'any') {\n            users = Object.assign([], UserStore.getProfileList(true));\n        } else {\n            users = Object.assign([], UserStore.getProfileListInTeam(TeamStore.getCurrentId(), true));\n        }\n\n        for (let i = 0; i < users.length; i++) {\n            const user = Object.assign({}, users[i]);\n            user.value = user.id;\n            user.label = '@' + user.username;\n            users[i] = user;\n        }\n\n        this.setState({\n            users\n        });\n    }\n\n    handlePageChange(page, prevPage) {\n        if (page > prevPage) {\n            if (this.listType === 'any') {\n                this.props.actions.getProfiles(page + 1, USERS_PER_PAGE);\n            } else {\n                this.props.actions.getProfilesInTeam(page + 1, USERS_PER_PAGE);\n            }\n        }\n    }\n\n    resetPaging = () => {\n        if (this.refs.multiselect) {\n            this.refs.multiselect.resetPaging();\n        }\n    }\n\n    search(term) {\n        clearTimeout(this.searchTimeoutId);\n        this.term = term;\n\n        if (term === '') {\n            this.resetPaging();\n            this.onChange();\n            return;\n        }\n\n        let teamId;\n        if (this.listType === 'any') {\n            teamId = '';\n        } else {\n            teamId = TeamStore.getCurrentId();\n        }\n\n        this.searchTimeoutId = setTimeout(\n            () => {\n                searchUsers(term, teamId, {}, this.resetPaging);\n            },\n            Constants.SEARCH_TIMEOUT_MILLISECONDS\n        );\n    }\n\n    handleDelete(values) {\n        this.setState({values});\n    }\n\n    renderOption(option, isSelected, onAdd) {\n        var rowSelected = '';\n        if (isSelected) {\n            rowSelected = 'more-modal__row--selected';\n        }\n\n        return (\n            <div\n                key={option.id}\n                ref={isSelected ? 'selected' : option.id}\n                className={'more-modal__row clickable ' + rowSelected}\n                onClick={() => onAdd(option)}\n            >\n                <ProfilePicture\n                    src={Client4.getProfilePictureUrl(option.id, option.last_picture_update)}\n                    status={`${UserStore.getStatus(option.id)}`}\n                    width='32'\n                    height='32'\n                />\n                <div\n                    className='more-modal__details'\n                >\n                    <div className='more-modal__name'>\n                        {displayEntireNameForUser(option)}\n                    </div>\n                    <div className='more-modal__description'>\n                        {option.email}\n                    </div>\n                </div>\n                <div className='more-modal__actions'>\n                    <div className='more-modal__actions--round'>\n                        <i className='fa fa-plus'/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderValue(user) {\n        return user.username;\n    }\n\n    render() {\n        let note;\n        if (this.props.startingUsers) {\n            if (this.state.values && this.state.values.length >= MAX_SELECTABLE_VALUES) {\n                note = (\n                    <FormattedMessage\n                        id='more_direct_channels.new_convo_note.full'\n                        defaultMessage='You’ve reached the maximum number of people for this conversation. Consider creating a private channel instead.'\n                    />\n                );\n            } else {\n                note = (\n                    <FormattedMessage\n                        id='more_direct_channels.new_convo_note'\n                        defaultMessage='This will start a new conversation. If you’re adding a lot of people, consider creating a private channel instead.'\n                    />\n                );\n            }\n        }\n\n        const buttonSubmitText = (\n            <FormattedMessage\n                id='multiselect.go'\n                defaultMessage='Go'\n            />\n        );\n\n        const numRemainingText = (\n            <FormattedMessage\n                id='multiselect.numPeopleRemaining'\n                defaultMessage='Use ↑↓ to browse, ↵ to select. You can add {num, number} more {num, plural, one {person} other {people}}. '\n                values={{\n                    num: MAX_SELECTABLE_VALUES - this.state.values.length\n                }}\n            />\n        );\n\n        let users = [];\n        if (this.state.users) {\n            users = this.state.users.filter((user) => user.delete_at === 0);\n        }\n\n        return (\n            <Modal\n                dialogClassName={'more-modal more-direct-channels'}\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>\n                        <FormattedMessage\n                            id='more_direct_channels.title'\n                            defaultMessage='Direct Messages'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <MultiSelect\n                        key='moreDirectChannelsList'\n                        ref='multiselect'\n                        options={users}\n                        optionRenderer={this.renderOption}\n                        values={this.state.values}\n                        valueRenderer={this.renderValue}\n                        perPage={USERS_PER_PAGE}\n                        handlePageChange={this.handlePageChange}\n                        handleInput={this.search}\n                        handleDelete={this.handleDelete}\n                        handleAdd={this.addValue}\n                        handleSubmit={this.handleSubmit}\n                        noteText={note}\n                        maxValues={MAX_SELECTABLE_VALUES}\n                        numRemainingText={numRemainingText}\n                        buttonSubmitText={buttonSubmitText}\n                    />\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/more_direct_channels/more_direct_channels.jsx","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {browserHistory} from 'react-router/es6';\n\nimport {createChannel} from 'actions/channel_actions.jsx';\nimport TeamStore from 'stores/team_store.jsx';\n\nimport {cleanUpUrlable} from 'utils/url.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport NewChannelModal from 'components/new_channel_modal';\n\nimport ChangeURLModal from './change_url_modal.jsx';\n\nconst SHOW_NEW_CHANNEL = 1;\nconst SHOW_EDIT_URL = 2;\nconst SHOW_EDIT_URL_THEN_COMPLETE = 3;\n\nexport default class NewChannelFlow extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.doSubmit = this.doSubmit.bind(this);\n        this.onModalExited = this.onModalExited.bind(this);\n        this.typeSwitched = this.typeSwitched.bind(this);\n        this.urlChangeRequested = this.urlChangeRequested.bind(this);\n        this.urlChangeSubmitted = this.urlChangeSubmitted.bind(this);\n        this.urlChangeDismissed = this.urlChangeDismissed.bind(this);\n        this.channelDataChanged = this.channelDataChanged.bind(this);\n\n        this.state = {\n            serverError: '',\n            channelType: 'O',\n            flowState: SHOW_NEW_CHANNEL,\n            channelDisplayName: '',\n            channelName: '',\n            channelPurpose: '',\n            channelHeader: '',\n            nameModified: false\n        };\n    }\n    componentWillReceiveProps(nextProps) {\n        // If we are being shown, grab channel type from props and clear\n        if (nextProps.show === true && this.props.show === false) {\n            this.setState({\n                serverError: '',\n                channelType: nextProps.channelType,\n                flowState: SHOW_NEW_CHANNEL,\n                channelDisplayName: '',\n                channelName: '',\n                channelPurpose: '',\n                channelHeader: '',\n                nameModified: false\n            });\n        }\n    }\n    doSubmit() {\n        if (!this.state.channelDisplayName) {\n            this.setState({serverError: Utils.localizeMessage('channel_flow.invalidName', 'Invalid Channel Name')});\n            return;\n        }\n\n        if (this.state.channelName < 2) {\n            this.setState({flowState: SHOW_EDIT_URL_THEN_COMPLETE});\n            return;\n        }\n\n        const channel = {\n            team_id: TeamStore.getCurrentId(),\n            name: this.state.channelName,\n            display_name: this.state.channelDisplayName,\n            purpose: this.state.channelPurpose,\n            header: this.state.channelHeader,\n            type: this.state.channelType\n        };\n\n        createChannel(\n            channel,\n            (data) => {\n                this.doOnModalExited = () => {\n                    browserHistory.push(TeamStore.getCurrentTeamRelativeUrl() + '/channels/' + data.name);\n                };\n\n                this.props.onModalDismissed();\n            },\n            (err) => {\n                if (err.id === 'model.channel.is_valid.2_or_more.app_error') {\n                    this.setState({\n                        flowState: SHOW_EDIT_URL_THEN_COMPLETE,\n                        serverError: (\n                            <FormattedMessage\n                                id='channel_flow.handleTooShort'\n                                defaultMessage='Channel URL must be 2 or more lowercase alphanumeric characters'\n                            />\n                        )\n                    });\n                    return;\n                }\n                if (err.id === 'store.sql_channel.update.exists.app_error') {\n                    this.setState({serverError: Utils.localizeMessage('channel_flow.alreadyExist', 'A channel with that URL already exists')});\n                    return;\n                }\n                this.setState({serverError: err.message});\n            }\n        );\n    }\n    onModalExited() {\n        if (this.doOnModalExited) {\n            this.doOnModalExited();\n        }\n    }\n    typeSwitched() {\n        if (this.state.channelType === 'P') {\n            this.setState({channelType: 'O'});\n        } else {\n            this.setState({channelType: 'P'});\n        }\n    }\n    urlChangeRequested() {\n        this.setState({flowState: SHOW_EDIT_URL});\n    }\n    urlChangeSubmitted(newURL) {\n        if (this.state.flowState === SHOW_EDIT_URL_THEN_COMPLETE) {\n            this.setState({channelName: newURL, nameModified: true}, this.doSubmit);\n        } else {\n            this.setState({flowState: SHOW_NEW_CHANNEL, serverError: null, channelName: newURL, nameModified: true});\n        }\n    }\n    urlChangeDismissed() {\n        this.setState({flowState: SHOW_NEW_CHANNEL});\n    }\n    channelDataChanged(data) {\n        this.setState({\n            channelDisplayName: data.displayName,\n            channelPurpose: data.purpose,\n            channelHeader: data.header\n        });\n        if (!this.state.nameModified) {\n            this.setState({channelName: cleanUpUrlable(data.displayName.trim())});\n        }\n    }\n    render() {\n        const channelData = {\n            name: this.state.channelName,\n            displayName: this.state.channelDisplayName,\n            purpose: this.state.channelPurpose\n        };\n\n        let showChannelModal = false;\n        let showGroupModal = false;\n        let showChangeURLModal = false;\n\n        let changeURLTitle = '';\n        let changeURLSubmitButtonText = '';\n\n        // Only listen to flow state if we are being shown\n        if (this.props.show) {\n            switch (this.state.flowState) {\n            case SHOW_NEW_CHANNEL:\n                if (this.state.channelType === 'O') {\n                    showChannelModal = true;\n                } else {\n                    showGroupModal = true;\n                }\n                break;\n            case SHOW_EDIT_URL:\n                showChangeURLModal = true;\n                changeURLTitle = (\n                    <FormattedMessage\n                        id='channel_flow.changeUrlTitle'\n                        defaultMessage='Change Channel URL'\n                    />\n                );\n                changeURLSubmitButtonText = changeURLTitle;\n                break;\n            case SHOW_EDIT_URL_THEN_COMPLETE:\n                showChangeURLModal = true;\n                changeURLTitle = (\n                    <FormattedMessage\n                        id='channel_flow.set_url_title'\n                        defaultMessage='Set Channel URL'\n                    />\n                );\n                changeURLSubmitButtonText = (\n                    <FormattedMessage\n                        id='channel_flow.create'\n                        defaultMessage='Create Channel'\n                    />\n                );\n                break;\n            }\n        }\n        return (\n            <span>\n                <NewChannelModal\n                    show={showChannelModal}\n                    channelType={'O'}\n                    channelData={channelData}\n                    serverError={this.state.serverError}\n                    onSubmitChannel={this.doSubmit}\n                    onModalDismissed={this.props.onModalDismissed}\n                    onModalExited={this.onModalExited}\n                    onTypeSwitched={this.typeSwitched}\n                    onChangeURLPressed={this.urlChangeRequested}\n                    onDataChanged={this.channelDataChanged}\n                />\n                <NewChannelModal\n                    show={showGroupModal}\n                    channelType={'P'}\n                    channelData={channelData}\n                    serverError={this.state.serverError}\n                    onSubmitChannel={this.doSubmit}\n                    onModalExited={this.onModalExited}\n                    onModalDismissed={this.props.onModalDismissed}\n                    onTypeSwitched={this.typeSwitched}\n                    onChangeURLPressed={this.urlChangeRequested}\n                    onDataChanged={this.channelDataChanged}\n                />\n                <ChangeURLModal\n                    show={showChangeURLModal}\n                    title={changeURLTitle}\n                    submitButtonText={changeURLSubmitButtonText}\n                    currentURL={this.state.channelName}\n                    serverError={this.state.serverError}\n                    onModalSubmit={this.urlChangeSubmitted}\n                    onModalDismissed={this.urlChangeDismissed}\n                    onModalExited={this.onModalExited}\n                />\n            </span>\n        );\n    }\n}\n\nNewChannelFlow.defaultProps = {\n    show: false,\n    channelType: 'O'\n};\n\nNewChannelFlow.propTypes = {\n    show: PropTypes.bool.isRequired,\n    channelType: PropTypes.string.isRequired,\n    onModalDismissed: PropTypes.func.isRequired\n};\n\n\n\n// WEBPACK FOOTER //\n// ./components/new_channel_flow.jsx","// Copyright (c) 2017 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {Preferences} from 'mattermost-redux/constants';\nimport {getBool} from 'mattermost-redux/selectors/entities/preferences';\nimport {isCurrentUserCurrentTeamAdmin} from 'mattermost-redux/selectors/entities/teams';\nimport {isCurrentUserSystemAdmin} from 'mattermost-redux/selectors/entities/users';\n\nimport NewChannelModal from './new_channel_modal.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        ...ownProps,\n        ctrlSend: getBool(state, Preferences.CATEGORY_ADVANCED_SETTINGS, 'send_on_ctrl_enter'),\n        isTeamAdmin: isCurrentUserCurrentTeamAdmin(state),\n        isSystemAdmin: isCurrentUserSystemAdmin(state)\n    };\n}\n\nexport default connect(mapStateToProps)(NewChannelModal);\n\n\n\n// WEBPACK FOOTER //\n// ./components/new_channel_modal/index.js","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport $ from 'jquery';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as ChannelUtils from 'utils/channel_utils.jsx';\nimport Constants from 'utils/constants.jsx';\nimport {getShortenedURL} from 'utils/url.jsx';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class NewChannelModal extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Set whether to show the modal or not\n         */\n        show: PropTypes.bool.isRequired,\n\n        /**\n         * The type of channel to create, 'O' or 'P'\n         */\n        channelType: PropTypes.string.isRequired,\n\n        /**\n         * The data needed to create the channel\n         */\n        channelData: PropTypes.object.isRequired,\n\n        /**\n         * Set to force form submission on CTRL/CMD + ENTER instead of ENTER\n         */\n        ctrlSend: PropTypes.bool,\n\n        /**\n         * Set to show options available to team admins\n         */\n        isTeamAdmin: PropTypes.bool,\n\n        /**\n         * Set to show options available to system admins\n         */\n        isSystemAdmin: PropTypes.bool,\n\n        /**\n         * Server error from failed channel creation\n         */\n        serverError: PropTypes.node,\n\n        /**\n         * Function used to submit the channel\n         */\n        onSubmitChannel: PropTypes.func.isRequired,\n\n        /**\n         * Function to call when modal is dimissed\n         */\n        onModalDismissed: PropTypes.func.isRequired,\n\n        /**\n         * Function to call when modal has exited\n         */\n        onModalExited: PropTypes.func,\n\n        /**\n         * Function to call to switch channel type\n         */\n        onTypeSwitched: PropTypes.func.isRequired,\n\n        /**\n         * Function to call when edit URL button is pressed\n         */\n        onChangeURLPressed: PropTypes.func.isRequired,\n\n        /**\n         * Function to call when channel data is modified\n         */\n        onDataChanged: PropTypes.func.isRequired\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.onEnterKeyDown = this.onEnterKeyDown.bind(this);\n\n        this.state = {\n            displayNameError: ''\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.show === true && this.props.show === false) {\n            this.setState({\n                displayNameError: ''\n            });\n\n            document.addEventListener('keydown', this.onEnterKeyDown);\n        } else if (nextProps.show === false && this.props.show === true) {\n            document.removeEventListener('keydown', this.onEnterKeyDown);\n        }\n    }\n\n    componentDidMount() {\n        // ???\n        if (UserAgent.isInternetExplorer() || UserAgent.isEdge()) {\n            $('body').addClass('browser--ie');\n        }\n    }\n\n    onEnterKeyDown(e) {\n        if (this.props.ctrlSend && e.keyCode === Constants.KeyCodes.ENTER && e.ctrlKey) {\n            this.handleSubmit(e);\n        } else if (!this.props.ctrlSend && e.keyCode === Constants.KeyCodes.ENTER && !e.shiftKey && !e.altKey) {\n            this.handleSubmit(e);\n        }\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        const displayName = ReactDOM.findDOMNode(this.refs.display_name).value.trim();\n        if (displayName.length < Constants.MIN_CHANNELNAME_LENGTH) {\n            this.setState({displayNameError: true});\n            return;\n        }\n\n        this.props.onSubmitChannel();\n    }\n\n    handleChange() {\n        const newData = {\n            displayName: this.refs.display_name.value,\n            header: this.refs.channel_header.value,\n            purpose: this.refs.channel_purpose.value\n        };\n        this.props.onDataChanged(newData);\n    }\n\n    render() {\n        var displayNameError = null;\n        var serverError = null;\n        var displayNameClass = 'form-group';\n\n        if (this.state.displayNameError) {\n            displayNameError = (\n                <p className='input__help error'>\n                    <FormattedMessage\n                        id='channel_modal.displayNameError'\n                        defaultMessage='Channel name must be 2 or more characters'\n                    />\n                    {this.state.displayNameError}\n                </p>\n            );\n            displayNameClass += ' has-error';\n        }\n\n        if (this.props.serverError) {\n            serverError = <div className='form-group has-error'><div className='col-sm-12'><p className='input__help error'>{this.props.serverError}</p></div></div>;\n        }\n\n        let createPublicChannelLink = (\n            <a\n                href='#'\n                onClick={this.props.onTypeSwitched}\n            >\n                <FormattedMessage\n                    id='channel_modal.publicChannel1'\n                    defaultMessage='Create a public channel'\n                />\n            </a>\n        );\n\n        let createPrivateChannelLink = (\n            <a\n                href='#'\n                onClick={this.props.onTypeSwitched}\n            >\n                <FormattedMessage\n                    id='channel_modal.privateGroup2'\n                    defaultMessage='Create a private channel'\n                />\n            </a>\n        );\n\n        if (!ChannelUtils.showCreateOption(Constants.OPEN_CHANNEL, this.props.isTeamAdmin, this.props.isSystemAdmin)) {\n            createPublicChannelLink = null;\n        }\n\n        if (!ChannelUtils.showCreateOption(Constants.PRIVATE_CHANNEL, this.props.isTeamAdmin, this.props.isSystemAdmin)) {\n            createPrivateChannelLink = null;\n        }\n\n        var channelSwitchText = '';\n        let inputPrefixId = '';\n        switch (this.props.channelType) {\n        case 'P':\n            channelSwitchText = (\n                <div className='modal-intro'>\n                    <FormattedMessage\n                        id='channel_modal.privateGroup1'\n                        defaultMessage='Create a new private channel with restricted membership. '\n                    />\n                    {createPublicChannelLink}\n                </div>\n            );\n            inputPrefixId = 'newPrivateChannel';\n            break;\n        case 'O':\n            channelSwitchText = (\n                <div className='modal-intro'>\n                    <FormattedMessage\n                        id='channel_modal.publicChannel2'\n                        defaultMessage='Create a new public channel anyone can join. '\n                    />\n                    {createPrivateChannelLink}\n                </div>\n            );\n            inputPrefixId = 'newPublicChannel';\n            break;\n        }\n\n        const prettyTeamURL = getShortenedURL();\n\n        return (\n            <span>\n                <Modal\n                    dialogClassName='new-channel__modal'\n                    show={this.props.show}\n                    bsSize='large'\n                    onHide={this.props.onModalDismissed}\n                    onExited={this.props.onModalExited}\n                >\n                    <Modal.Header closeButton={true}>\n                        <Modal.Title>\n                            <FormattedMessage\n                                id='channel_modal.modalTitle'\n                                defaultMessage='New Channel'\n                            />\n                        </Modal.Title>\n                    </Modal.Header>\n                    <form\n                        role='form'\n                        className='form-horizontal'\n                    >\n                        <Modal.Body>\n                            <div>\n                                {channelSwitchText}\n                            </div>\n                            <div className={displayNameClass}>\n                                <label className='col-sm-3 form__label control-label'>\n                                    <FormattedMessage\n                                        id='channel_modal.name'\n                                        defaultMessage='Name'\n                                    />\n                                </label>\n                                <div className='col-sm-9'>\n                                    <input\n                                        id={inputPrefixId + 'Name'}\n                                        onChange={this.handleChange}\n                                        type='text'\n                                        ref='display_name'\n                                        className='form-control'\n                                        placeholder={Utils.localizeMessage('channel_modal.nameEx', 'E.g.: \"Bugs\", \"Marketing\", \"客户支持\"')}\n                                        maxLength={Constants.MAX_CHANNELNAME_LENGTH}\n                                        value={this.props.channelData.displayName}\n                                        autoFocus={true}\n                                        tabIndex='1'\n                                    />\n                                    {displayNameError}\n                                    <p className='input__help dark'>\n                                        {'URL: ' + prettyTeamURL + this.props.channelData.name + ' ('}\n                                        <button\n                                            className='color--link style--none'\n                                            onClick={this.props.onChangeURLPressed}\n                                        >\n                                            <FormattedMessage\n                                                id='channel_modal.edit'\n                                                defaultMessage='Edit'\n                                            />\n                                        </button>\n                                        {')'}\n                                    </p>\n                                </div>\n                            </div>\n                            <div className='form-group'>\n                                <div className='col-sm-3'>\n                                    <label className='form__label control-label'>\n                                        <FormattedMessage\n                                            id='channel_modal.purpose'\n                                            defaultMessage='Purpose'\n                                        />\n                                    </label>\n                                    <label className='form__label light'>\n                                        <FormattedMessage\n                                            id='channel_modal.optional'\n                                            defaultMessage='(optional)'\n                                        />\n                                    </label>\n                                </div>\n                                <div className='col-sm-9'>\n                                    <textarea\n                                        id={inputPrefixId + 'Purpose'}\n                                        className='form-control no-resize'\n                                        ref='channel_purpose'\n                                        rows='4'\n                                        placeholder={Utils.localizeMessage('channel_modal.purposeEx', 'E.g.: \"A channel to file bugs and improvements\"')}\n                                        maxLength='250'\n                                        value={this.props.channelData.purpose}\n                                        onChange={this.handleChange}\n                                        tabIndex='2'\n                                    />\n                                    <p className='input__help'>\n                                        <FormattedMessage\n                                            id='channel_modal.descriptionHelp'\n                                            defaultMessage='Describe how this channel should be used.'\n                                        />\n                                    </p>\n                                </div>\n                            </div>\n                            <div className='form-group less'>\n                                <div className='col-sm-3'>\n                                    <label className='form__label control-label'>\n                                        <FormattedMessage\n                                            id='channel_modal.header'\n                                            defaultMessage='Header'\n                                        />\n                                    </label>\n                                    <label className='form__label light'>\n                                        <FormattedMessage\n                                            id='channel_modal.optional'\n                                            defaultMessage='(optional)'\n                                        />\n                                    </label>\n                                </div>\n                                <div className='col-sm-9'>\n                                    <textarea\n                                        id={inputPrefixId + 'Header'}\n                                        className='form-control no-resize'\n                                        ref='channel_header'\n                                        rows='4'\n                                        placeholder={Utils.localizeMessage('channel_modal.headerEx', 'E.g.: \"[Link Title](http://example.com)\"')}\n                                        maxLength='1024'\n                                        value={this.props.channelData.header}\n                                        onChange={this.handleChange}\n                                        tabIndex='2'\n                                    />\n                                    <p className='input__help'>\n                                        <FormattedMessage\n                                            id='channel_modal.headerHelp'\n                                            defaultMessage='Set text that will appear in the header of the channel beside the channel name. For example, include frequently used links by typing [Link Title](http://example.com).'\n                                        />\n                                    </p>\n                                    {serverError}\n                                </div>\n                            </div>\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <button\n                                type='button'\n                                className='btn btn-default'\n                                onClick={this.props.onModalDismissed}\n                            >\n                                <FormattedMessage\n                                    id='channel_modal.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </button>\n                            <button\n                                onClick={this.handleSubmit}\n                                type='submit'\n                                className='btn btn-primary'\n                                tabIndex='3'\n                            >\n                                <FormattedMessage\n                                    id='channel_modal.createNew'\n                                    defaultMessage='Create New Channel'\n                                />\n                            </button>\n                        </Modal.Footer>\n                    </form>\n                </Modal>\n            </span>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/new_channel_modal/new_channel_modal.jsx","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal, OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport TeamStore from 'stores/team_store.jsx';\n\nimport Constants from 'utils/constants.jsx';\nimport * as URL from 'utils/url.jsx';\n\nexport default class ChangeUrlModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onURLChanged = this.onURLChanged.bind(this);\n        this.doSubmit = this.doSubmit.bind(this);\n        this.doCancel = this.doCancel.bind(this);\n\n        this.state = {\n            currentURL: props.currentURL,\n            urlError: '',\n            userEdit: false\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // This check prevents the url being deleted when we re-render\n        // because of user status check\n        if (!this.state.userEdit) {\n            this.setState({\n                currentURL: nextProps.currentURL\n            });\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.show === true && prevProps.show === false) {\n            ReactDOM.findDOMNode(this.refs.urlinput).select();\n        }\n    }\n\n    onURLChanged(e) {\n        const url = e.target.value.trim();\n        this.setState({currentURL: url.replace(/[^A-Za-z0-9-_]/g, '').toLowerCase(), userEdit: true});\n    }\n\n    getURLError(url) {\n        let error = []; //eslint-disable-line prefer-const\n        if (url.length < 2) {\n            error.push(\n                <span key='error1'>\n                    <FormattedMessage\n                        id='change_url.longer'\n                        defaultMessage='URL must be two or more characters.'\n                    />\n                    <br/>\n                </span>\n            );\n        }\n        if (url.charAt(0) === '-' || url.charAt(0) === '_') {\n            error.push(\n                <span key='error2'>\n                    <FormattedMessage\n                        id='change_url.startWithLetter'\n                        defaultMessage='URL must start with a letter or number.'\n                    />\n                    <br/>\n                </span>\n            );\n        }\n        if (url.length > 1 && (url.charAt(url.length - 1) === '-' || url.charAt(url.length - 1) === '_')) {\n            error.push(\n                <span key='error3'>\n                    <FormattedMessage\n                        id='change_url.endWithLetter'\n                        defaultMessage='URL must end with a letter or number.'\n                    />\n                    <br/>\n                </span>);\n        }\n        if (url.indexOf('__') > -1) {\n            error.push(\n                <span key='error4'>\n                    <FormattedMessage\n                        id='change_url.noUnderscore'\n                        defaultMessage='URL can not contain two underscores in a row.'\n                    />\n                    <br/>\n                </span>);\n        }\n\n        // In case of error we don't detect\n        if (error.length === 0) {\n            error.push(\n                <span key='errorlast'>\n                    <FormattedMessage\n                        id='change_url.invalidUrl'\n                        defaultMessage='Invalid URL'\n                    />\n                    <br/>\n                </span>);\n        }\n        return error;\n    }\n\n    doSubmit(e) {\n        e.preventDefault();\n\n        const url = ReactDOM.findDOMNode(this.refs.urlinput).value;\n        const cleanedURL = URL.cleanUpUrlable(url);\n        if (cleanedURL !== url || url.length < 2 || url.indexOf('__') > -1) {\n            this.setState({urlError: this.getURLError(url)});\n            return;\n        }\n        this.setState({urlError: '', userEdit: false});\n        this.props.onModalSubmit(url);\n    }\n\n    doCancel() {\n        this.setState({urlError: '', userEdit: false});\n        this.props.onModalDismissed();\n    }\n\n    render() {\n        let urlClass = 'input-group input-group--limit';\n        let error = null;\n\n        if (this.state.urlError) {\n            urlClass += ' has-error';\n        }\n\n        if (this.props.serverError || this.state.urlError) {\n            error = (\n                <div className='form-group has-error'>\n                    <p className='input__help error'>\n                        {this.state.urlError || this.props.serverError}\n                    </p>\n                </div>\n            );\n        }\n\n        const fullUrl = TeamStore.getCurrentTeamUrl() + '/channels';\n        const shortURL = URL.getShortenedURL(fullUrl);\n        const urlTooltip = (\n            <Tooltip id='urlTooltip'>{fullUrl}</Tooltip>\n        );\n\n        return (\n            <Modal\n                show={this.props.show}\n                onHide={this.doCancel}\n                onExited={this.props.onModalExited}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title>{this.props.title}</Modal.Title>\n                </Modal.Header>\n                <form\n                    role='form'\n                    className='form-horizontal'\n                >\n                    <Modal.Body>\n                        <div className='modal-intro'>\n                            <FormattedMessage\n                                id='channel_flow.changeUrlDescription'\n                                defaultMessage='Some characters are now allowed in URLs and may be removed.'\n                            />\n                        </div>\n                        <div className='form-group'>\n                            <label className='col-sm-2 form__label control-label'>\n                                <FormattedMessage\n                                    id='change_url.urlLabel'\n                                    defaultMessage='Channel URL'\n                                />\n                            </label>\n                            <div className='col-sm-10'>\n                                <div className={urlClass}>\n                                    <OverlayTrigger\n                                        trigger={['hover', 'focus']}\n                                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                                        placement='top'\n                                        overlay={urlTooltip}\n                                    >\n                                        <span className='input-group-addon'>{shortURL}</span>\n                                    </OverlayTrigger>\n                                    <input\n                                        type='text'\n                                        ref='urlinput'\n                                        className='form-control'\n                                        maxLength={Constants.MAX_CHANNELNAME_LENGTH}\n                                        onChange={this.onURLChanged}\n                                        value={this.state.currentURL}\n                                        autoFocus={true}\n                                        tabIndex='1'\n                                    />\n                                </div>\n                                {error}\n                            </div>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button\n                            type='button'\n                            className='btn btn-default'\n                            onClick={this.doCancel}\n                        >\n                            <FormattedMessage\n                                id='change_url.close'\n                                defaultMessage='Close'\n                            />\n                        </button>\n                        <button\n                            onClick={this.doSubmit}\n                            type='submit'\n                            className='btn btn-primary'\n                            tabIndex='2'\n                        >\n                            {this.props.submitButtonText}\n                        </button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n        );\n    }\n}\n\nChangeUrlModal.defaultProps = {\n    show: false,\n    title: 'Change URL',\n    submitButtonText: 'Save',\n    currentURL: '',\n    serverError: null\n};\n\nChangeUrlModal.propTypes = {\n    show: PropTypes.bool.isRequired,\n    title: PropTypes.node,\n    submitButtonText: PropTypes.node,\n    currentURL: PropTypes.string,\n    serverError: PropTypes.node,\n    onModalSubmit: PropTypes.func.isRequired,\n    onModalExited: PropTypes.func,\n    onModalDismissed: PropTypes.func.isRequired\n};\n\n\n\n// WEBPACK FOOTER //\n// ./components/change_url_modal.jsx","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\n\nimport PreferenceStore from 'stores/preference_store.jsx';\n\nimport {Constants, Preferences, TutorialSteps} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport StatusDropdown from 'components/status_dropdown/index.jsx';\nimport {createMenuTip} from 'components/tutorial/tutorial_tip.jsx';\n\nimport SidebarHeaderDropdown from './sidebar_header_dropdown.jsx';\n\nexport default class SidebarHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = this.getStateFromStores();\n    }\n\n    componentDidMount() {\n        PreferenceStore.addChangeListener(this.onPreferenceChange);\n        window.addEventListener('resize', this.handleResize);\n    }\n\n    componentWillUnmount() {\n        PreferenceStore.removeChangeListener(this.onPreferenceChange);\n        window.removeEventListener('resize', this.handleResize);\n    }\n\n    handleResize = () => {\n        const isMobile = Utils.isMobile();\n        this.setState({isMobile});\n    }\n\n    getPreferences = () => {\n        if (!this.props.currentUser) {\n            return {};\n        }\n        const tutorialStep = PreferenceStore.getInt(Preferences.TUTORIAL_STEP, this.props.currentUser.id, 999);\n        const showTutorialTip = tutorialStep === TutorialSteps.MENU_POPOVER && !Utils.isMobile();\n\n        return {showTutorialTip};\n    }\n\n    getStateFromStores = () => {\n        const preferences = this.getPreferences();\n        const isMobile = Utils.isMobile();\n        return {...preferences, isMobile};\n    }\n\n    onPreferenceChange = () => {\n        this.setState(this.getPreferences());\n    }\n\n    toggleDropdown = (e) => {\n        e.preventDefault();\n\n        this.refs.dropdown.toggleDropdown();\n    }\n\n    renderStatusDropdown = () => {\n        if (this.state.isMobile) {\n            return null;\n        }\n        return (\n            <StatusDropdown/>\n        );\n    }\n\n    render() {\n        const statusDropdown = this.renderStatusDropdown();\n\n        let tutorialTip = null;\n        if (this.state.showTutorialTip) {\n            tutorialTip = createMenuTip(this.toggleDropdown);\n        }\n\n        let teamNameWithToolTip = null;\n        if (this.props.teamDescription === '') {\n            teamNameWithToolTip = (\n                <div\n                    id='headerTeamName'\n                    className='team__name'\n                >\n                    {this.props.teamDisplayName}\n                </div>\n            );\n        } else {\n            teamNameWithToolTip = (\n                <OverlayTrigger\n                    trigger={['hover', 'focus']}\n                    delayShow={Constants.OVERLAY_TIME_DELAY}\n                    placement='bottom'\n                    overlay={<Tooltip id='team-name__tooltip'>{this.props.teamDescription}</Tooltip>}\n                    ref='descriptionOverlay'\n                >\n                    <div\n                        id='headerTeamName'\n                        className='team__name'\n                    >\n                        {this.props.teamDisplayName}\n                    </div>\n                </OverlayTrigger>\n            );\n        }\n\n        return (\n            <div\n                id='teamHeader'\n                className='team__header theme'\n            >\n                {tutorialTip}\n                <div\n                    id='headerInfo'\n                    className='header__info'\n                >\n                    {teamNameWithToolTip}\n                    <div\n                        id='headerUsername'\n                        className='user__name'\n                    >\n                        {'@' + this.props.currentUser.username}\n                    </div>\n                </div>\n                <div id='sidebarDropdownMenuContainer'>\n                    <SidebarHeaderDropdown\n                        ref='dropdown'\n                        teamType={this.props.teamType}\n                        teamDisplayName={this.props.teamDisplayName}\n                        teamName={this.props.teamName}\n                        currentUser={this.props.currentUser}\n                    />\n                </div>\n                {statusDropdown}\n            </div>\n        );\n    }\n}\n\nSidebarHeader.defaultProps = {\n    teamDisplayName: '',\n    teamDescription: '',\n    teamType: ''\n};\nSidebarHeader.propTypes = {\n    teamDisplayName: PropTypes.string,\n    teamDescription: PropTypes.string,\n    teamName: PropTypes.string,\n    teamType: PropTypes.string,\n    currentUser: PropTypes.object\n};\n\n\n\n// WEBPACK FOOTER //\n// ./components/sidebar_header.jsx","// Copyright (c) 2017-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {setStatus} from 'mattermost-redux/actions/users';\nimport {Client4} from 'mattermost-redux/client';\nimport {getCurrentUser, getStatusForUserId} from 'mattermost-redux/selectors/entities/users';\n\nimport StatusDropdown from 'components/status_dropdown/status_dropdown.jsx';\n\nfunction mapStateToProps(state) {\n    const currentUser = getCurrentUser(state);\n    const userId = currentUser.id;\n    const lastPicUpdate = currentUser.last_picture_update;\n    const profilePicture = Client4.getProfilePictureUrl(userId, lastPicUpdate);\n    const status = getStatusForUserId(state, currentUser.id);\n    return {\n        userId,\n        profilePicture,\n        status\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            setStatus\n        }, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusDropdown);\n\n\n\n// WEBPACK FOOTER //\n// ./components/status_dropdown/index.jsx","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Dropdown} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {UserStatuses} from 'utils/constants.jsx';\n\nimport BootstrapSpan from 'components/bootstrap_span.jsx';\nimport StatusIcon from 'components/status_icon.jsx';\n\nexport default class StatusDropdown extends React.Component {\n\n    static propTypes = {\n        style: PropTypes.object,\n        status: PropTypes.string,\n        userId: PropTypes.string.isRequired,\n        profilePicture: PropTypes.string,\n        actions: PropTypes.shape({\n            setStatus: PropTypes.func.isRequired\n        }).isRequired\n    }\n\n    state = {\n        showDropdown: false\n    }\n\n    onToggle = (showDropdown) => {\n        this.setState({showDropdown});\n    }\n\n    closeDropdown = () => {\n        this.setState({showDropdown: false});\n    }\n\n    setStatus = (status) => {\n        this.props.actions.setStatus({\n            user_id: this.props.userId,\n            status\n        });\n        this.closeDropdown();\n    }\n\n    setOnline = (event) => {\n        event.preventDefault();\n        this.setStatus(UserStatuses.ONLINE);\n    }\n\n    setOffline = (event) => {\n        event.preventDefault();\n        this.setStatus(UserStatuses.OFFLINE);\n    }\n\n    setAway = (event) => {\n        event.preventDefault();\n        this.setStatus(UserStatuses.AWAY);\n    }\n\n    renderStatusOnlineAction = () => {\n        return this.renderStatusAction(UserStatuses.ONLINE, this.setOnline);\n    }\n\n    renderStatusAwayAction = () => {\n        return this.renderStatusAction(UserStatuses.AWAY, this.setAway);\n    }\n\n    renderStatusOfflineAction = () => {\n        return this.renderStatusAction(UserStatuses.OFFLINE, this.setOffline);\n    }\n\n    renderProfilePicture = () => {\n        if (!this.props.profilePicture) {\n            return null;\n        }\n        return (\n            <img\n                className='user__picture'\n                src={this.props.profilePicture}\n            />\n        );\n    }\n\n    renderStatusAction = (status, onClick) => {\n        return (\n            <li key={status}>\n                <a\n                    id={'status' + status}\n                    href={'#'}\n                    onClick={onClick}\n                >\n                    <FormattedMessage\n                        id={`status_dropdown.set_${status}`}\n                        defaultMessage={status}\n                    />\n                </a>\n            </li>\n        );\n    }\n\n    render() {\n        const profilePicture = this.renderProfilePicture();\n        const actions = [\n            this.renderStatusOnlineAction(),\n            this.renderStatusAwayAction(),\n            this.renderStatusOfflineAction()\n        ];\n        return (\n            <Dropdown\n                id={'status-dropdown'}\n                open={this.state.showDropdown}\n                onToggle={this.onToggle}\n                style={this.props.style}\n            >\n                <BootstrapSpan\n                    bsRole={'toggle'}\n                >\n                    <div className='status-wrapper status-selector'>\n                        {profilePicture}\n                        <StatusIcon status={this.props.status}/>\n                        <span className={'status status-edit edit'}>\n                            <i className={'fa fa-caret-down'}/>\n                        </span>\n                    </div>\n                </BootstrapSpan>\n                <Dropdown.Menu id='editStatusMenu'>\n                    {actions}\n                </Dropdown.Menu>\n            </Dropdown>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/status_dropdown/status_dropdown.jsx","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nclass BootstrapSpan extends React.PureComponent {\n\n    static propTypes = {\n        children: PropTypes.element\n    }\n\n    render() {\n        const {children, ...props} = this.props;\n        delete props.bsRole;\n        delete props.bsClass;\n\n        return <span {...props}>{children}</span>;\n    }\n}\n\nexport default BootstrapSpan;\n\n\n\n// WEBPACK FOOTER //\n// ./components/bootstrap_span.jsx","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport $ from 'jquery';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Dropdown} from 'react-bootstrap';\nimport ReactDOM from 'react-dom';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router/es6';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport TeamStore from 'stores/team_store.jsx';\nimport UserStore from 'stores/user_store.jsx';\nimport WebrtcStore from 'stores/webrtc_store.jsx';\n\nimport {Constants, WebrtcActionTypes} from 'utils/constants.jsx';\nimport {useSafeUrl} from 'utils/url';\nimport * as UserAgent from 'utils/user_agent.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport AboutBuildModal from 'components/about_build_modal';\nimport AddUsersToTeam from 'components/add_users_to_team';\n\nimport SidebarHeaderDropdownButton from './sidebar_header_dropdown_button.jsx';\nimport TeamMembersModal from './team_members_modal.jsx';\n\nexport default class SidebarHeaderDropdown extends React.Component {\n    static propTypes = {\n        teamType: PropTypes.string,\n        teamDisplayName: PropTypes.string,\n        teamName: PropTypes.string,\n        currentUser: PropTypes.object\n    };\n\n    static defaultProps = {\n        teamType: ''\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.toggleDropdown = this.toggleDropdown.bind(this);\n\n        this.handleAboutModal = this.handleAboutModal.bind(this);\n        this.aboutModalDismissed = this.aboutModalDismissed.bind(this);\n        this.showAccountSettingsModal = this.showAccountSettingsModal.bind(this);\n        this.showAddUsersToTeamModal = this.showAddUsersToTeamModal.bind(this);\n        this.hideAddUsersToTeamModal = this.hideAddUsersToTeamModal.bind(this);\n        this.showInviteMemberModal = this.showInviteMemberModal.bind(this);\n        this.showGetTeamInviteLinkModal = this.showGetTeamInviteLinkModal.bind(this);\n        this.showTeamMembersModal = this.showTeamMembersModal.bind(this);\n        this.hideTeamMembersModal = this.hideTeamMembersModal.bind(this);\n        this.showShortcutsModal = this.showShortcutsModal.bind(this);\n\n        this.onTeamChange = this.onTeamChange.bind(this);\n\n        this.renderCustomEmojiLink = this.renderCustomEmojiLink.bind(this);\n\n        this.handleClick = this.handleClick.bind(this);\n\n        this.state = {\n            teamMembers: TeamStore.getMyTeamMembers(),\n            teamListings: TeamStore.getTeamListings(),\n            showAboutModal: false,\n            showDropdown: false,\n            showTeamMembersModal: false,\n            showAddUsersToTeamModal: false\n        };\n    }\n\n    handleClick(e) {\n        if (WebrtcStore.isBusy()) {\n            WebrtcStore.emitChanged({action: WebrtcActionTypes.IN_PROGRESS});\n            e.preventDefault();\n        }\n    }\n\n    toggleDropdown(val) {\n        if (typeof (val) === 'boolean') {\n            this.setState({showDropdown: val});\n            return;\n        }\n\n        if (val && val.preventDefault) {\n            val.preventDefault();\n        }\n\n        this.setState({showDropdown: !this.state.showDropdown});\n    }\n\n    handleAboutModal(e) {\n        e.preventDefault();\n\n        this.setState({\n            showAboutModal: true,\n            showDropdown: false\n        });\n    }\n\n    aboutModalDismissed() {\n        this.setState({showAboutModal: false});\n    }\n\n    showAccountSettingsModal(e) {\n        e.preventDefault();\n\n        this.setState({showDropdown: false});\n\n        GlobalActions.showAccountSettingsModal();\n    }\n\n    showShortcutsModal(e) {\n        e.preventDefault();\n        this.setState({showDropdown: false});\n\n        GlobalActions.showShortcutsModal();\n    }\n\n    showAddUsersToTeamModal(e) {\n        e.preventDefault();\n\n        this.setState({\n            showAddUsersToTeamModal: true,\n            showDropdown: false\n        });\n    }\n\n    hideAddUsersToTeamModal() {\n        this.setState({\n            showAddUsersToTeamModal: false\n        });\n    }\n\n    showInviteMemberModal(e) {\n        e.preventDefault();\n\n        this.setState({showDropdown: false});\n\n        GlobalActions.showInviteMemberModal();\n    }\n\n    showGetTeamInviteLinkModal(e) {\n        e.preventDefault();\n\n        this.setState({showDropdown: false});\n\n        GlobalActions.showGetTeamInviteLinkModal();\n    }\n\n    showTeamMembersModal(e) {\n        e.preventDefault();\n\n        this.setState({\n            showTeamMembersModal: true\n        });\n    }\n\n    hideTeamMembersModal() {\n        this.setState({\n            showTeamMembersModal: false\n        });\n    }\n\n    componentDidMount() {\n        TeamStore.addChangeListener(this.onTeamChange);\n    }\n\n    onTeamChange() {\n        this.setState({\n            teamMembers: TeamStore.getMyTeamMembers(),\n            teamListings: TeamStore.getTeamListings(),\n            showDropdown: false\n        });\n    }\n\n    componentWillUnmount() {\n        $(ReactDOM.findDOMNode(this.refs.dropdown)).off('hide.bs.dropdown');\n        TeamStore.removeChangeListener(this.onTeamChange);\n    }\n\n    renderCustomEmojiLink() {\n        if (window.mm_config.EnableCustomEmoji !== 'true' || !Utils.canCreateCustomEmoji(this.props.currentUser)) {\n            return null;\n        }\n\n        return (\n            <li>\n                <Link\n                    id='customEmoji'\n                    onClick={this.handleClick}\n                    to={'/' + this.props.teamName + '/emoji'}\n                >\n                    <FormattedMessage\n                        id='navbar_dropdown.emoji'\n                        defaultMessage='Custom Emoji'\n                    />\n                </Link>\n            </li>\n        );\n    }\n\n    render() {\n        const config = global.mm_config;\n        const currentUser = this.props.currentUser;\n        let teamLink = '';\n        let inviteLink = '';\n        let addMemberToTeam = '';\n        let manageLink = '';\n        let sysAdminLink = '';\n        let isAdmin = false;\n        let isSystemAdmin = false;\n        let teamSettings = null;\n        let integrationsLink = null;\n\n        if (!currentUser) {\n            return null;\n        }\n\n        if (currentUser != null) {\n            isAdmin = TeamStore.isTeamAdminForCurrentTeam() || UserStore.isSystemAdminForCurrentUser();\n            isSystemAdmin = UserStore.isSystemAdminForCurrentUser();\n\n            inviteLink = (\n                <li>\n                    <button\n                        className='style--none'\n                        id='sendEmailInvite'\n                        onClick={this.showInviteMemberModal}\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.inviteMember'\n                            defaultMessage='Send Email Invite'\n                        />\n                    </button>\n                </li>\n            );\n\n            addMemberToTeam = (\n                <li>\n                    <button\n                        className='style--none'\n                        id='addUsersToTeam'\n                        onClick={this.showAddUsersToTeamModal}\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.addMemberToTeam'\n                            defaultMessage='Add Members to Team'\n                        />\n                    </button>\n                </li>\n            );\n\n            if (this.props.teamType === Constants.OPEN_TEAM && config.EnableUserCreation === 'true') {\n                teamLink = (\n                    <li>\n                        <button\n                            className='style--none'\n                            id='getTeamInviteLink'\n                            onClick={this.showGetTeamInviteLinkModal}\n                        >\n                            <FormattedMessage\n                                id='navbar_dropdown.teamLink'\n                                defaultMessage='Get Team Invite Link'\n                            />\n                        </button>\n                    </li>\n                );\n            }\n\n            if (global.window.mm_license.IsLicensed === 'true') {\n                if (config.RestrictTeamInvite === Constants.PERMISSIONS_SYSTEM_ADMIN && !isSystemAdmin) {\n                    teamLink = null;\n                    inviteLink = null;\n                    addMemberToTeam = null;\n                } else if (config.RestrictTeamInvite === Constants.PERMISSIONS_TEAM_ADMIN && !isAdmin) {\n                    teamLink = null;\n                    inviteLink = null;\n                    addMemberToTeam = null;\n                }\n            }\n        }\n\n        let membersName = (\n            <FormattedMessage\n                id='navbar_dropdown.manageMembers'\n                defaultMessage='Manage Members'\n            />\n        );\n\n        if (isAdmin) {\n            teamSettings = (\n                <li>\n                    <button\n                        className='style--none'\n                        id='teamSettings'\n                        data-toggle='modal'\n                        data-target='#team_settings'\n                        onClick={this.toggleDropdown}\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.teamSettings'\n                            defaultMessage='Team Settings'\n                        />\n                    </button>\n                </li>\n            );\n        } else {\n            membersName = (\n                <FormattedMessage\n                    id='navbar_dropdown.viewMembers'\n                    defaultMessage='View Members'\n                />\n            );\n        }\n\n        manageLink = (\n            <li>\n                <button\n                    id='manageMembers'\n                    className='style--none'\n                    onClick={this.showTeamMembersModal}\n                >\n                    {membersName}\n                </button>\n            </li>\n        );\n\n        const integrationsEnabled =\n            config.EnableIncomingWebhooks === 'true' ||\n            config.EnableOutgoingWebhooks === 'true' ||\n            config.EnableCommands === 'true' ||\n            (config.EnableOAuthServiceProvider === 'true' && (isSystemAdmin || config.EnableOnlyAdminIntegrations !== 'true'));\n        if (integrationsEnabled && (isAdmin || config.EnableOnlyAdminIntegrations !== 'true')) {\n            integrationsLink = (\n                <li>\n                    <Link\n                        id='Integrations'\n                        to={'/' + this.props.teamName + '/integrations'}\n                        onClick={this.handleClick}\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.integrations'\n                            defaultMessage='Integrations'\n                        />\n                    </Link>\n                </li>\n            );\n        }\n\n        if (isSystemAdmin) {\n            sysAdminLink = (\n                <li>\n                    <Link\n                        id='systemConsole'\n                        to={'/admin_console'}\n                        onClick={this.handleClick}\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.console'\n                            defaultMessage='System Console'\n                        />\n                    </Link>\n                </li>\n            );\n        }\n\n        const teams = [];\n        let moreTeams = false;\n\n        if (config.EnableTeamCreation === 'true' || UserStore.isSystemAdminForCurrentUser()) {\n            teams.push(\n                <li key='newTeam_li'>\n                    <Link\n                        id='createTeam'\n                        key='newTeam_a'\n                        to='/create_team'\n                        onClick={this.handleClick}\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.create'\n                            defaultMessage='Create a New Team'\n                        />\n                    </Link>\n                </li>\n            );\n        }\n\n        const isAlreadyMember = this.state.teamMembers.reduce((result, item) => {\n            result[item.team_id] = true;\n            return result;\n        }, {});\n\n        for (const id in this.state.teamListings) {\n            if (this.state.teamListings.hasOwnProperty(id) && !isAlreadyMember[id]) {\n                moreTeams = true;\n                break;\n            }\n        }\n\n        if (moreTeams) {\n            teams.push(\n                <li key='joinTeam_li'>\n                    <Link\n                        id='joinAnotherTeam'\n                        onClick={this.handleClick}\n                        to='/select_team'\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.join'\n                            defaultMessage='Join Another Team'\n                        />\n                    </Link>\n                </li>\n            );\n        }\n\n        teams.push(\n            <li key='leaveTeam_li'>\n                <button\n                    className='style--none'\n                    id='leaveTeam'\n                    onClick={GlobalActions.showLeaveTeamModal}\n                >\n                    <FormattedMessage\n                        id='navbar_dropdown.leave'\n                        defaultMessage='Leave Team'\n                    />\n                </button>\n            </li>\n        );\n\n        let helpLink = null;\n        if (config.HelpLink) {\n            helpLink = (\n                <li>\n                    <Link\n                        id='helpLink'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        to={config.HelpLink}\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.help'\n                            defaultMessage='Help'\n                        />\n                    </Link>\n                </li>\n            );\n        }\n\n        let reportLink = null;\n        if (config.ReportAProblemLink) {\n            reportLink = (\n                <li>\n                    <Link\n                        id='reportLink'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        to={config.ReportAProblemLink}\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.report'\n                            defaultMessage='Report a Problem'\n                        />\n                    </Link>\n                </li>\n            );\n        }\n\n        let nativeAppLink = null;\n        if (global.window.mm_config.AppDownloadLink && !UserAgent.isMobileApp()) {\n            nativeAppLink = (\n                <li>\n                    <Link\n                        id='nativeAppLink'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        to={useSafeUrl(global.window.mm_config.AppDownloadLink)}\n                    >\n                        <FormattedMessage\n                            id='navbar_dropdown.nativeApps'\n                            defaultMessage='Download Apps'\n                        />\n                    </Link>\n                </li>\n            );\n        }\n\n        let teamMembersModal;\n        if (this.state.showTeamMembersModal) {\n            teamMembersModal = (\n                <TeamMembersModal\n                    onLoad={this.toggleDropdown}\n                    onHide={this.hideTeamMembersModal}\n                    isAdmin={isAdmin}\n                />\n            );\n        }\n\n        let addUsersToTeamModal;\n        if (this.state.showAddUsersToTeamModal) {\n            addUsersToTeamModal = (\n                <AddUsersToTeam\n                    onModalDismissed={this.hideAddUsersToTeamModal}\n                />\n            );\n        }\n\n        const keyboardShortcuts = (\n            <li>\n                <button\n                    className='style--none'\n                    id='keyboardShortcuts'\n                    onClick={this.showShortcutsModal}\n                >\n                    <FormattedMessage\n                        id='navbar_dropdown.keyboardShortcuts'\n                        defaultMessage='Keyboard Shortcuts'\n                    />\n                </button>\n            </li>\n        );\n\n        const accountSettings = (\n            <li>\n                <button\n                    className='style--none'\n                    id='accountSettings'\n                    onClick={this.showAccountSettingsModal}\n                >\n                    <FormattedMessage\n                        id='navbar_dropdown.accountSettings'\n                        defaultMessage='Account Settings'\n                    />\n                </button>\n            </li>\n        );\n\n        const about = (\n            <li>\n                <button\n                    id='about'\n                    className='style--none'\n                    onClick={this.handleAboutModal}\n                >\n                    <FormattedMessage\n                        id='navbar_dropdown.about'\n                        defaultMessage='About Mattermost'\n                    />\n                </button>\n            </li>\n        );\n\n        const logout = (\n            <li>\n                <button\n                    className='style--none'\n                    id='logout'\n                    onClick={() => GlobalActions.emitUserLoggedOutEvent()}\n                >\n                    <FormattedMessage\n                        id='navbar_dropdown.logout'\n                        defaultMessage='Logout'\n                    />\n                </button>\n            </li>\n        );\n\n        const customEmoji = this.renderCustomEmojiLink();\n\n        // Dividers.\n        let inviteDivider = null;\n        if (inviteLink || teamLink || addMemberToTeam) {\n            inviteDivider = <li className='divider'/>;\n        }\n\n        let teamDivider = null;\n        if (teamSettings || manageLink || teams) {\n            teamDivider = <li className='divider'/>;\n        }\n\n        let backstageDivider = null;\n        if (integrationsLink || customEmoji) {\n            backstageDivider = <li className='divider'/>;\n        }\n\n        let sysAdminDivider = null;\n        if (sysAdminLink) {\n            sysAdminDivider = <li className='divider'/>;\n        }\n\n        let helpDivider = null;\n        if (helpLink || reportLink || nativeAppLink || about) {\n            helpDivider = <li className='divider'/>;\n        }\n\n        let logoutDivider = null;\n        if (logout) {\n            logoutDivider = <li className='divider'/>;\n        }\n\n        return (\n            <Dropdown\n                id='sidebar-header-dropdown'\n                open={this.state.showDropdown}\n                onToggle={this.toggleDropdown}\n                className='sidebar-header-dropdown'\n                pullRight={true}\n            >\n                <SidebarHeaderDropdownButton\n                    bsRole='toggle'\n                    onClick={this.toggleDropdown}\n                />\n                <Dropdown.Menu id='sidebarDropdownMenu'>\n                    {accountSettings}\n                    {inviteDivider}\n                    {inviteLink}\n                    {teamLink}\n                    {addMemberToTeam}\n                    {teamDivider}\n                    {teamSettings}\n                    {manageLink}\n                    {teams}\n                    {backstageDivider}\n                    {integrationsLink}\n                    {customEmoji}\n                    {sysAdminDivider}\n                    {sysAdminLink}\n                    {helpDivider}\n                    {helpLink}\n                    {keyboardShortcuts}\n                    {reportLink}\n                    {nativeAppLink}\n                    {about}\n                    {logoutDivider}\n                    {logout}\n                    {teamMembersModal}\n                    <AboutBuildModal\n                        show={this.state.showAboutModal}\n                        onModalDismissed={this.aboutModalDismissed}\n                    />\n                    {addUsersToTeamModal}\n                </Dropdown.Menu>\n            </Dropdown>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/sidebar_header_dropdown.jsx","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants.jsx';\n\nexport default class SidebarHeaderDropdownButton extends React.PureComponent {\n    static propTypes = {\n        bsRole: PropTypes.oneOf(['toggle']).isRequired, // eslint-disable-line react/no-unused-prop-types\n        onClick: PropTypes.func.isRequired\n    };\n\n    render() {\n        const mainMenuToolTip = (\n            <Tooltip id='main-menu__tooltip'>\n                <FormattedMessage\n                    id='sidebar.mainMenu'\n                    defaultMessage='Main menu'\n                />\n            </Tooltip>\n        );\n\n        return (\n            <OverlayTrigger\n                trigger={['hover', 'focus']}\n                delayShow={Constants.OVERLAY_TIME_DELAY}\n                placement='right'\n                overlay={mainMenuToolTip}\n            >\n                <button\n                    id='sidebarHeaderDropdownButton'\n                    className='sidebar-header-dropdown__toggle cursor--pointer style--none'\n                    onClick={this.props.onClick}\n                >\n                    <span\n                        className='sidebar-header-dropdown__icon'\n                        dangerouslySetInnerHTML={{__html: Constants.MENU_ICON}}\n                    />\n                </button>\n            </OverlayTrigger>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/sidebar_header_dropdown_button.jsx","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Constants from 'utils/constants.jsx';\n\nexport default class UnreadChannelIndicator extends React.PureComponent {\n    static propTypes = {\n\n      /**\n       * Function to call when the indicator is clicked\n       */\n        onClick: PropTypes.func.isRequired,\n\n      /**\n       * Set whether to show the indicator or not\n       */\n        show: PropTypes.bool,\n\n      /**\n       * The additional CSS class for the indicator\n       */\n        extraClass: PropTypes.string,\n\n      /**\n       * The content of the indicator\n       */\n        content: PropTypes.node,\n\n      /**\n       * The name of the indicator\n       */\n        name: PropTypes.string\n    }\n\n    static defaultProps = {\n        show: false,\n        extraClass: '',\n        content: ''\n    }\n\n    render() {\n        const unreadIcon = Constants.UNREAD_ICON_SVG;\n\n        let displayValue = 'none';\n        if (this.props.show) {\n            displayValue = 'block';\n        }\n\n        return (\n            <div\n                id={'unreadIndicator' + this.props.name}\n                className={'nav-pills__unread-indicator ' + this.props.extraClass}\n                style={{display: displayValue}}\n                onClick={this.props.onClick}\n            >\n                {this.props.content}\n                <span\n                    className='icon icon__unread'\n                    dangerouslySetInnerHTML={{__html: unreadIcon}}\n                />\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/unread_channel_indicator.jsx","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport $ from 'jquery';\n\nimport React from 'react';\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\nimport ReactDOM from 'react-dom';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\nimport {browserHistory, Link} from 'react-router/es6';\n\nimport {savePreferences} from 'mattermost-redux/actions/preferences';\nimport {getChannelsByCategory} from 'mattermost-redux/selectors/entities/channels';\n\nimport * as ChannelActions from 'actions/channel_actions.jsx';\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport AppDispatcher from 'dispatcher/app_dispatcher.jsx';\nimport ChannelStore from 'stores/channel_store.jsx';\nimport ModalStore from 'stores/modal_store.jsx';\nimport PreferenceStore from 'stores/preference_store.jsx';\nimport store from 'stores/redux_store.jsx';\nimport TeamStore from 'stores/team_store.jsx';\nimport UserStore from 'stores/user_store.jsx';\n\nimport * as ChannelUtils from 'utils/channel_utils.jsx';\nimport {ActionTypes, Constants} from 'utils/constants.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport favicon from 'images/favicon/favicon-16x16.png';\nimport redFavicon from 'images/favicon/redfavicon-16x16.png';\nimport loadingGif from 'images/load.gif';\n\nimport MoreChannels from 'components/more_channels';\nimport MoreDirectChannels from 'components/more_direct_channels';\n\nimport NewChannelFlow from './new_channel_flow.jsx';\nimport SidebarHeader from './sidebar_header.jsx';\nimport StatusIcon from './status_icon.jsx';\nimport TutorialTip from './tutorial/tutorial_tip.jsx';\nimport UnreadChannelIndicator from './unread_channel_indicator.jsx';\n\nconst Preferences = Constants.Preferences;\nconst TutorialSteps = Constants.TutorialSteps;\n\nconst dispatch = store.dispatch;\nconst getState = store.getState;\n\nexport default class Sidebar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.badgesActive = false;\n        this.firstUnreadChannel = null;\n        this.lastUnreadChannel = null;\n\n        this.isLeaving = new Map();\n        this.isSwitchingChannel = false;\n        this.closedDirectChannel = false;\n\n        const state = this.getStateFromStores();\n        state.newChannelModalType = '';\n        state.showDirectChannelsModal = false;\n        state.showMoreChannelsModal = false;\n        state.loadingDMChannel = -1;\n        state.inChannelChange = false;\n        this.state = state;\n    }\n\n    getTotalUnreadCount = () => {\n        const unreads = ChannelUtils.getCountsStateFromStores(this.state.currentTeam, this.state.teamMembers, this.state.unreadCounts);\n        return {msgs: unreads.messageCount, mentions: unreads.mentionCount};\n    }\n\n    getStateFromStores = () => {\n        const members = ChannelStore.getMyMembers();\n        const teamMembers = TeamStore.getMyTeamMembers();\n        const currentChannelId = ChannelStore.getCurrentId();\n        const tutorialStep = PreferenceStore.getInt(Preferences.TUTORIAL_STEP, UserStore.getCurrentId(), 999);\n\n        const displayableChannels = getChannelsByCategory(store.getState());\n\n        return {\n            activeId: currentChannelId,\n            members,\n            teamMembers,\n            ...displayableChannels,\n            unreadCounts: JSON.parse(JSON.stringify(ChannelStore.getUnreadCounts())),\n            showTutorialTip: tutorialStep === TutorialSteps.CHANNEL_POPOVER,\n            currentTeam: TeamStore.getCurrent(),\n            currentUser: UserStore.getCurrentUser(),\n            townSquare: ChannelStore.getByName(Constants.DEFAULT_CHANNEL),\n            offTopic: ChannelStore.getByName(Constants.OFFTOPIC_CHANNEL)\n        };\n    }\n\n    onInChannelChange = () => {\n        this.setState({inChannelChange: !this.state.inChannelChange});\n    }\n\n    componentDidMount() {\n        ChannelStore.addChangeListener(this.onChange);\n        UserStore.addChangeListener(this.onChange);\n        UserStore.addInTeamChangeListener(this.onChange);\n        UserStore.addInChannelChangeListener(this.onInChannelChange);\n        UserStore.addStatusesChangeListener(this.onChange);\n        TeamStore.addChangeListener(this.onChange);\n        PreferenceStore.addChangeListener(this.onChange);\n        ModalStore.addModalListener(ActionTypes.TOGGLE_DM_MODAL, this.onModalChange);\n\n        this.updateTitle();\n        this.updateUnreadIndicators();\n\n        document.addEventListener('keydown', this.navigateChannelShortcut);\n        document.addEventListener('keydown', this.navigateUnreadChannelShortcut);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (!Utils.areObjectsEqual(nextState, this.state)) {\n            return true;\n        }\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.updateTitle();\n        this.updateUnreadIndicators();\n        if (!Utils.isMobile()) {\n            $('.sidebar--left .nav-pills__container').perfectScrollbar();\n        }\n\n        // reset the scrollbar upon switching teams\n        if (this.state.currentTeam !== prevState.currentTeam) {\n            this.refs.container.scrollTop = 0;\n            $('.nav-pills__container').perfectScrollbar('update');\n        }\n\n        // close the LHS on mobile when you change channels\n        if (this.state.activeId !== prevState.activeId) {\n            if (this.closedDirectChannel) {\n                this.closedDirectChannel = false;\n            } else {\n                $('.app__body .inner-wrap').removeClass('move--right');\n                $('.app__body .sidebar--left').removeClass('move--right');\n                $('.multi-teams .team-sidebar').removeClass('move--right');\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        ChannelStore.removeChangeListener(this.onChange);\n        UserStore.removeChangeListener(this.onChange);\n        UserStore.removeInTeamChangeListener(this.onChange);\n        UserStore.removeInChannelChangeListener(this.onChange);\n        UserStore.removeStatusesChangeListener(this.onChange);\n        TeamStore.removeChangeListener(this.onChange);\n        PreferenceStore.removeChangeListener(this.onChange);\n        ModalStore.removeModalListener(ActionTypes.TOGGLE_DM_MODAL, this.onModalChange);\n        document.removeEventListener('keydown', this.navigateChannelShortcut);\n        document.removeEventListener('keydown', this.navigateUnreadChannelShortcut);\n    }\n\n    onModalChange = (value, args) => {\n        this.showMoreDirectChannelsModal(UserStore.getProfileListInChannel(args.channelId, true, false));\n    }\n\n    handleOpenMoreDirectChannelsModal = (e) => {\n        e.preventDefault();\n        if (this.state.showDirectChannelsModal) {\n            this.hideMoreDirectChannelsModal();\n        } else {\n            this.showMoreDirectChannelsModal();\n        }\n    }\n\n    onChange = () => {\n        if (this.state.currentTeam.id !== TeamStore.getCurrentId()) {\n            ChannelStore.clear();\n        }\n        this.setState(this.getStateFromStores());\n        this.updateTitle();\n    }\n\n    updateTitle = () => {\n        const channel = ChannelStore.getCurrent();\n        if (channel && this.state.currentTeam) {\n            let currentSiteName = '';\n            if (global.window.mm_config.SiteName != null) {\n                currentSiteName = global.window.mm_config.SiteName;\n            }\n\n            let currentChannelName = channel.display_name;\n            if (channel.type === Constants.DM_CHANNEL) {\n                const teammate = Utils.getDirectTeammate(channel.id);\n                if (teammate != null) {\n                    currentChannelName = teammate.username;\n                }\n            }\n\n            const unread = this.getTotalUnreadCount();\n            const mentionTitle = unread.mentions > 0 ? '(' + unread.mentions + ') ' : '';\n            const unreadTitle = unread.msgs > 0 ? '* ' : '';\n            document.title = mentionTitle + unreadTitle + currentChannelName + ' - ' + this.state.currentTeam.display_name + ' ' + currentSiteName;\n        }\n    }\n\n    onScroll = () => {\n        this.updateUnreadIndicators();\n    }\n\n    scrollToFirstUnreadChannel = () => {\n        if (this.firstUnreadChannel) {\n            const unreadMargin = 15;\n            const container = $(ReactDOM.findDOMNode(this.refs.container));\n            const firstUnreadElement = $(ReactDOM.findDOMNode(this.refs[this.firstUnreadChannel]));\n            const scrollTop = (container.scrollTop() + firstUnreadElement.position().top) - unreadMargin;\n            container.stop().animate({scrollTop}, 500, 'swing');\n        }\n    }\n\n    scrollToLastUnreadChannel = () => {\n        if (this.lastUnreadChannel) {\n            const unreadMargin = 15;\n            const container = $(ReactDOM.findDOMNode(this.refs.container));\n            const lastUnreadElement = $(ReactDOM.findDOMNode(this.refs[this.lastUnreadChannel]));\n            const elementBottom = lastUnreadElement.position().top + lastUnreadElement.height();\n            const scrollTop = (container.scrollTop() + (elementBottom - container.height())) + unreadMargin;\n            container.stop().animate({scrollTop}, 500, 'swing');\n        }\n    }\n\n    updateUnreadIndicators = () => {\n        const container = $(ReactDOM.findDOMNode(this.refs.container));\n\n        var showTopUnread = false;\n        var showBottomUnread = false;\n\n        // Consider partially obscured channels as above/below\n        const unreadMargin = 15;\n\n        if (this.firstUnreadChannel) {\n            var firstUnreadElement = $(ReactDOM.findDOMNode(this.refs[this.firstUnreadChannel]));\n\n            if (firstUnreadElement.position().top + firstUnreadElement.height() < unreadMargin) {\n                showTopUnread = true;\n            }\n        }\n\n        if (this.lastUnreadChannel) {\n            var lastUnreadElement = $(ReactDOM.findDOMNode(this.refs[this.lastUnreadChannel]));\n\n            if (lastUnreadElement.position().top > container.height() - unreadMargin) {\n                showBottomUnread = true;\n            }\n        }\n\n        this.setState({\n            showTopUnread,\n            showBottomUnread\n        });\n    }\n\n    updateScrollbarOnChannelChange = (channel) => {\n        const curChannel = this.refs[channel.name].getBoundingClientRect();\n        if ((curChannel.top - Constants.CHANNEL_SCROLL_ADJUSTMENT < 0) || (curChannel.top + curChannel.height > this.refs.container.getBoundingClientRect().height)) {\n            this.refs.container.scrollTop = this.refs.container.scrollTop + (curChannel.top - Constants.CHANNEL_SCROLL_ADJUSTMENT);\n            $('.nav-pills__container').perfectScrollbar('update');\n        }\n    }\n\n    navigateChannelShortcut = (e) => {\n        if (e.altKey && !e.shiftKey && (e.keyCode === Constants.KeyCodes.UP || e.keyCode === Constants.KeyCodes.DOWN)) {\n            e.preventDefault();\n\n            if (this.isSwitchingChannel) {\n                return;\n            }\n\n            this.isSwitchingChannel = true;\n            const allChannels = this.getDisplayedChannels();\n            const curChannelId = this.state.activeId;\n            let curIndex = -1;\n            for (let i = 0; i < allChannels.length; i++) {\n                if (allChannels[i].id === curChannelId) {\n                    curIndex = i;\n                }\n            }\n            let nextIndex = curIndex;\n            if (e.keyCode === Constants.KeyCodes.DOWN) {\n                nextIndex = curIndex + 1;\n            } else if (e.keyCode === Constants.KeyCodes.UP) {\n                nextIndex = curIndex - 1;\n            }\n            const nextChannel = allChannels[Utils.mod(nextIndex, allChannels.length)];\n            ChannelActions.goToChannel(nextChannel);\n            this.updateScrollbarOnChannelChange(nextChannel);\n            this.isSwitchingChannel = false;\n        } else if (Utils.cmdOrCtrlPressed(e) && e.shiftKey && e.keyCode === Constants.KeyCodes.K) {\n            this.handleOpenMoreDirectChannelsModal(e);\n        }\n    }\n\n    navigateUnreadChannelShortcut = (e) => {\n        if (e.altKey && e.shiftKey && (e.keyCode === Constants.KeyCodes.UP || e.keyCode === Constants.KeyCodes.DOWN)) {\n            e.preventDefault();\n\n            if (this.isSwitchingChannel) {\n                return;\n            }\n\n            this.isSwitchingChannel = true;\n            const allChannels = this.getDisplayedChannels();\n            const curChannelId = this.state.activeId;\n            let curIndex = -1;\n            for (let i = 0; i < allChannels.length; i++) {\n                if (allChannels[i].id === curChannelId) {\n                    curIndex = i;\n                }\n            }\n            let nextIndex = curIndex;\n            let count = 0;\n            let increment = 0;\n            if (e.keyCode === Constants.KeyCodes.UP) {\n                increment = -1;\n            } else if (e.keyCode === Constants.KeyCodes.DOWN) {\n                increment = 1;\n            }\n            let unreadCounts = ChannelStore.getUnreadCount(allChannels[nextIndex].id);\n            while (count < allChannels.length && unreadCounts.msgs === 0 && unreadCounts.mentions === 0) {\n                nextIndex += increment;\n                count++;\n                nextIndex = Utils.mod(nextIndex, allChannels.length);\n                unreadCounts = ChannelStore.getUnreadCount(allChannels[nextIndex].id);\n            }\n            if (unreadCounts.msgs !== 0 || unreadCounts.mentions !== 0) {\n                const nextChannel = allChannels[nextIndex];\n                ChannelActions.goToChannel(nextChannel);\n                this.updateScrollbarOnChannelChange(nextChannel);\n            }\n            this.isSwitchingChannel = false;\n        }\n    }\n\n    getDisplayedChannels = () => {\n        return this.state.favoriteChannels.concat(this.state.publicChannels).concat(this.state.privateChannels).concat(this.state.directAndGroupChannels);\n    }\n\n    handleLeavePublicChannel = (e, channel) => {\n        e.preventDefault();\n        ChannelActions.leaveChannel(channel.id);\n        trackEvent('ui', 'ui_public_channel_x_button_clicked');\n    }\n\n    handleLeavePrivateChannel = (e, channel) => {\n        e.preventDefault();\n        GlobalActions.showLeavePrivateChannelModal(channel);\n        trackEvent('ui', 'ui_private_channel_x_button_clicked');\n    }\n\n    handleLeaveDirectChannel = (e, channel) => {\n        e.preventDefault();\n\n        if (!this.isLeaving.get(channel.id)) {\n            this.isLeaving.set(channel.id, true);\n\n            let id;\n            let category;\n            if (channel.type === Constants.DM_CHANNEL) {\n                id = channel.teammate_id;\n                category = Constants.Preferences.CATEGORY_DIRECT_CHANNEL_SHOW;\n            } else {\n                id = channel.id;\n                category = Constants.Preferences.CATEGORY_GROUP_CHANNEL_SHOW;\n            }\n\n            const currentUserId = UserStore.getCurrentId();\n            savePreferences(currentUserId, [{user_id: currentUserId, category, name: id, value: 'false'}])(dispatch, getState).then(\n                () => {\n                    this.isLeaving.set(channel.id, false);\n                }\n            );\n\n            if (ChannelUtils.isFavoriteChannel(channel)) {\n                ChannelActions.unmarkFavorite(channel.id);\n            }\n\n            this.setState(this.getStateFromStores());\n            trackEvent('ui', 'ui_direct_channel_x_button_clicked');\n        }\n\n        if (channel.id === this.state.activeId) {\n            this.closedDirectChannel = true;\n            browserHistory.push('/' + this.state.currentTeam.name + '/channels/town-square');\n        }\n    }\n\n    showMoreChannelsModal = () => {\n        this.setState({showMoreChannelsModal: true});\n        trackEvent('ui', 'ui_channels_more_public');\n    }\n\n    hideMoreChannelsModal = () => {\n        this.setState({showMoreChannelsModal: false});\n    }\n\n    showNewChannelModal = (type) => {\n        this.setState({newChannelModalType: type});\n    }\n\n    hideNewChannelModal = () => {\n        this.setState({newChannelModalType: ''});\n    }\n\n    showMoreDirectChannelsModal = (startingUsers) => {\n        trackEvent('ui', 'ui_channels_more_direct');\n        this.setState({showDirectChannelsModal: true, startingUsers});\n    }\n\n    hideMoreDirectChannelsModal = () => {\n        this.setState({showDirectChannelsModal: false, startingUsers: null});\n    }\n\n    openLeftSidebar = () => {\n        if (Utils.isMobile()) {\n            setTimeout(() => {\n                document.querySelector('.app__body .inner-wrap').classList.add('move--right');\n                document.querySelector('.app__body .sidebar--left').classList.add('move--right');\n            });\n        }\n    }\n\n    openQuickSwitcher = (e) => {\n        e.preventDefault();\n        AppDispatcher.handleViewAction({\n            type: ActionTypes.TOGGLE_QUICK_SWITCH_MODAL\n        });\n    }\n\n    createTutorialTip = () => {\n        const screens = [];\n\n        let townSquareDisplayName = Constants.DEFAULT_CHANNEL_UI_NAME;\n        if (this.state.townSquare) {\n            townSquareDisplayName = this.state.townSquare.display_name;\n        }\n\n        let offTopicDisplayName = Constants.OFFTOPIC_CHANNEL_UI_NAME;\n        if (this.state.offTopic) {\n            offTopicDisplayName = this.state.offTopic.display_name;\n        }\n\n        screens.push(\n            <div>\n                <FormattedHTMLMessage\n                    id='sidebar.tutorialScreen1'\n                    defaultMessage='<h4>Channels</h4><p><strong>Channels</strong> organize conversations across different topics. They’re open to everyone on your team. To send private communications use <strong>Direct Messages</strong> for a single person or <strong>Private Channels</strong> for multiple people.</p>'\n                />\n            </div>\n        );\n\n        screens.push(\n            <div>\n                <FormattedHTMLMessage\n                    id='sidebar.tutorialScreen2'\n                    defaultMessage='<h4>\"{townsquare}\" and \"{offtopic}\" channels</h4>\n                    <p>Here are two public channels to start:</p>\n                    <p><strong>{townsquare}</strong> is a place for team-wide communication. Everyone in your team is a member of this channel.</p>\n                    <p><strong>{offtopic}</strong> is a place for fun and humor outside of work-related channels. You and your team can decide what other channels to create.</p>'\n                    values={{\n                        townsquare: townSquareDisplayName,\n                        offtopic: offTopicDisplayName\n                    }}\n                />\n            </div>\n        );\n\n        screens.push(\n            <div>\n                <FormattedHTMLMessage\n                    id='sidebar.tutorialScreen3'\n                    defaultMessage='<h4>Creating and Joining Channels</h4>\n                    <p>Click <strong>\"More...\"</strong> to create a new channel or join an existing one.</p>\n                    <p>You can also create a new public or private channel by clicking the <strong>\"+\" symbol</strong> next to the public or private channel header.</p>'\n                />\n            </div>\n        );\n\n        return (\n            <TutorialTip\n                placement='right'\n                screens={screens}\n                overlayClass='tip-overlay--sidebar'\n                diagnosticsTag='tutorial_tip_2_channels'\n            />\n        );\n    }\n\n    createChannelElement = (channel, index, arr, handleClose) => {\n        const members = this.state.members;\n        const activeId = this.state.activeId;\n        const channelMember = members[channel.id];\n        const unreadCount = this.state.unreadCounts[channel.id] || {msgs: 0, mentions: 0};\n        let msgCount;\n\n        let linkClass = '';\n        if (channel.id === activeId) {\n            linkClass = 'active';\n        }\n\n        let rowClass = 'sidebar-item';\n\n        var unread = false;\n        if (channelMember) {\n            msgCount = unreadCount.msgs + unreadCount.mentions;\n            unread = msgCount > 0 || channelMember.mention_count > 0;\n        }\n\n        if (unread) {\n            rowClass += ' unread-title';\n\n            if (channel.id !== activeId) {\n                if (!this.firstUnreadChannel) {\n                    this.firstUnreadChannel = channel.name;\n                }\n                this.lastUnreadChannel = channel.name;\n            }\n        }\n\n        var badge = null;\n        if (channelMember) {\n            if (unreadCount.mentions) {\n                badge = <span className='badge'>{unreadCount.mentions}</span>;\n                this.badgesActive = true;\n            }\n        } else if (this.state.loadingDMChannel === index && channel.type === Constants.DM_CHANNEL) {\n            badge = (\n                <img\n                    className='channel-loading-gif pull-right'\n                    src={loadingGif}\n                />\n            );\n        }\n\n        if (unreadCount.mentions > 0) {\n            rowClass += ' has-badge';\n        }\n\n        var icon = null;\n        const globeIcon = Constants.GLOBE_ICON_SVG;\n        const lockIcon = Constants.LOCK_ICON_SVG;\n        if (channel.type === Constants.OPEN_CHANNEL) {\n            icon = (\n                <span\n                    className='icon icon__globe'\n                    dangerouslySetInnerHTML={{__html: globeIcon}}\n                />\n            );\n        } else if (channel.type === Constants.PRIVATE_CHANNEL) {\n            icon = (\n                <span\n                    className='icon icon__lock'\n                    dangerouslySetInnerHTML={{__html: lockIcon}}\n                />\n            );\n        } else if (channel.type === Constants.GM_CHANNEL) {\n            icon = <div className='status status--group'>{UserStore.getProfileListInChannel(channel.id, true).length}</div>;\n        } else {\n            // set up status icon for direct message channels (status is null for other channel types)\n            icon = (\n                <StatusIcon\n                    type='avatar'\n                    status={channel.status}\n                />);\n        }\n\n        let closeButton = null;\n        let removeTooltip = (\n            <Tooltip id='remove-dm-tooltip'>\n                <FormattedMessage\n                    id='sidebar.removeList'\n                    defaultMessage='Remove from list'\n                />\n            </Tooltip>\n        );\n        if (channel.type === Constants.OPEN_CHANNEL || channel.type === Constants.PRIVATE_CHANNEL) {\n            removeTooltip = (\n                <Tooltip id='remove-dm-tooltip'>\n                    <FormattedMessage\n                        id='sidebar.leave'\n                        defaultMessage='Leave channel'\n                    />\n                </Tooltip>\n            );\n        }\n        if (handleClose && !badge) {\n            closeButton = (\n                <OverlayTrigger\n                    trigger={['hover', 'focus']}\n                    delayShow={1000}\n                    placement='top'\n                    overlay={removeTooltip}\n                >\n                    <span\n                        onClick={(e) => handleClose(e, channel)}\n                        className='btn-close'\n                    >\n                        {'×'}\n                    </span>\n                </OverlayTrigger>\n            );\n\n            rowClass += ' has-close';\n        }\n\n        let tutorialTip = null;\n        if (this.state.showTutorialTip && channel.name === Constants.DEFAULT_CHANNEL) {\n            tutorialTip = this.createTutorialTip();\n            this.openLeftSidebar();\n        }\n\n        let link = '';\n        if (channel.fake) {\n            link = '/' + this.state.currentTeam.name + '/channels/' + channel.name + '?fakechannel=' + encodeURIComponent(JSON.stringify(channel));\n        } else {\n            link = '/' + this.state.currentTeam.name + '/channels/' + channel.name;\n        }\n\n        const displayName = channel.display_name;\n\n        return (\n            <li\n                key={channel.name}\n                ref={channel.name}\n                className={linkClass}\n            >\n                <Link\n                    to={link}\n                    className={rowClass}\n                    onClick={this.trackChannelSelectedEvent}\n                >\n                    {icon}\n                    <span className='sidebar-item__name'>{displayName}</span>\n                    {badge}\n                    {closeButton}\n                </Link>\n                {tutorialTip}\n            </li>\n        );\n    }\n\n    trackChannelSelectedEvent = () => {\n        trackEvent('ui', 'ui_channel_selected');\n    }\n\n    render() {\n        const switchChannelIcon = Constants.SWITCH_CHANNEL_ICON_SVG;\n\n        // Check if we have all info needed to render\n        if (this.state.currentTeam == null || this.state.currentUser == null) {\n            return (<div/>);\n        }\n\n        this.lastBadgesActive = this.badgesActive;\n        this.badgesActive = false;\n\n        // keep track of the first and last unread channels so we can use them to set the unread indicators\n        this.firstUnreadChannel = null;\n        this.lastUnreadChannel = null;\n\n        // create elements for all 4 types of channels\n        const favoriteItems = this.state.favoriteChannels.\n            map((channel, index, arr) => {\n                if (channel.type === Constants.DM_CHANNEL || channel.type === Constants.GM_CHANNEL) {\n                    return this.createChannelElement(channel, index, arr, this.handleLeaveDirectChannel);\n                } else if (global.window.mm_config.EnableXToLeaveChannelsFromLHS === 'true') {\n                    if (channel.type === Constants.OPEN_CHANNEL && channel.name !== Constants.DEFAULT_CHANNEL) {\n                        return this.createChannelElement(channel, index, arr, this.handleLeavePublicChannel);\n                    } else if (channel.type === Constants.PRIVATE_CHANNEL) {\n                        return this.createChannelElement(channel, index, arr, this.handleLeavePrivateChannel);\n                    }\n                }\n\n                return this.createChannelElement(channel);\n            });\n\n        const publicChannelItems = this.state.publicChannels.map((channel, index, arr) => {\n            if (global.window.mm_config.EnableXToLeaveChannelsFromLHS !== 'true' ||\n                channel.name === Constants.DEFAULT_CHANNEL\n            ) {\n                return this.createChannelElement(channel);\n            }\n            return this.createChannelElement(channel, index, arr, this.handleLeavePublicChannel);\n        });\n\n        const privateChannelItems = this.state.privateChannels.map((channel, index, arr) => {\n            if (global.window.mm_config.EnableXToLeaveChannelsFromLHS !== 'true') {\n                return this.createChannelElement(channel);\n            }\n            return this.createChannelElement(channel, index, arr, this.handleLeavePrivateChannel);\n        });\n\n        const directMessageItems = this.state.directAndGroupChannels.map((channel, index, arr) => {\n            return this.createChannelElement(channel, index, arr, this.handleLeaveDirectChannel);\n        });\n\n        // update the favicon to show if there are any notifications\n        if (this.lastBadgesActive !== this.badgesActive) {\n            var link = document.createElement('link');\n            link.type = 'image/x-icon';\n            link.rel = 'shortcut icon';\n            link.id = 'favicon';\n            if (this.badgesActive) {\n                link.href = redFavicon;\n            } else {\n                link.href = favicon;\n            }\n            var head = document.getElementsByTagName('head')[0];\n            var oldLink = document.getElementById('favicon');\n            if (oldLink) {\n                head.removeChild(oldLink);\n            }\n            head.appendChild(link);\n        }\n\n        var directMessageMore = (\n            <li key='more'>\n                <button\n                    id='moreDirectMessage'\n                    className='nav-more cursor--pointer style--none btn--block'\n                    onClick={this.handleOpenMoreDirectChannelsModal}\n                >\n                    <FormattedMessage\n                        id='sidebar.moreElips'\n                        defaultMessage='More...'\n                    />\n                </button>\n            </li>\n        );\n\n        let showChannelModal = false;\n        if (this.state.newChannelModalType !== '') {\n            showChannelModal = true;\n        }\n\n        const createChannelTootlip = (\n            <Tooltip id='new-channel-tooltip' >\n                <FormattedMessage\n                    id='sidebar.createChannel'\n                    defaultMessage='Create new public channel'\n                />\n            </Tooltip>\n        );\n        const createGroupTootlip = (\n            <Tooltip id='new-group-tooltip'>\n                <FormattedMessage\n                    id='sidebar.createGroup'\n                    defaultMessage='Create new private channel'\n                />\n            </Tooltip>\n        );\n\n        const createDirectMessageTooltip = (\n            <Tooltip\n                id='new-group-tooltip'\n                className='hidden-xs'\n            >\n                <FormattedMessage\n                    id='sidebar.createDirectMessage'\n                    defaultMessage='Create new direct message'\n                />\n            </Tooltip>\n        );\n\n        const above = (\n            <FormattedMessage\n                id='sidebar.unreads'\n                defaultMessage='More unreads'\n            />\n        );\n\n        const below = (\n            <FormattedMessage\n                id='sidebar.unreads'\n                defaultMessage='More unreads'\n            />\n        );\n\n        const isTeamAdmin = TeamStore.isTeamAdminForCurrentTeam();\n        const isSystemAdmin = UserStore.isSystemAdminForCurrentUser();\n\n        let createPublicChannelIcon = (\n            <OverlayTrigger\n                trigger={['hover', 'focus']}\n                delayShow={500}\n                placement='top'\n                overlay={createChannelTootlip}\n            >\n                <button\n                    id='createPublicChannel'\n                    className='add-channel-btn cursor--pointer style--none'\n                    onClick={this.showNewChannelModal.bind(this, Constants.OPEN_CHANNEL)}\n                >\n                    {'+'}\n                </button>\n            </OverlayTrigger>\n        );\n\n        let createPrivateChannelIcon = (\n            <OverlayTrigger\n                trigger={['hover', 'focus']}\n                delayShow={500}\n                placement='top'\n                overlay={createGroupTootlip}\n            >\n                <button\n                    id='createPrivateChannel'\n                    className='add-channel-btn cursor--pointer style--none'\n                    onClick={this.showNewChannelModal.bind(this, Constants.PRIVATE_CHANNEL)}\n                >\n                    {'+'}\n                </button>\n            </OverlayTrigger>\n        );\n\n        if (!ChannelUtils.showCreateOption(Constants.OPEN_CHANNEL, isTeamAdmin, isSystemAdmin)) {\n            createPublicChannelIcon = null;\n        }\n\n        const createDirectMessageIcon = (\n            <OverlayTrigger\n                className='hidden-xs'\n                delayShow={500}\n                placement='top'\n                overlay={createDirectMessageTooltip}\n            >\n                <button\n                    className='add-channel-btn cursor--pointer style--none'\n                    onClick={this.handleOpenMoreDirectChannelsModal}\n                >\n                    {'+'}\n                </button>\n            </OverlayTrigger>\n        );\n\n        if (!ChannelUtils.showCreateOption(Constants.PRIVATE_CHANNEL, isTeamAdmin, isSystemAdmin)) {\n            createPrivateChannelIcon = null;\n        }\n\n        let moreDirectChannelsModal;\n        if (this.state.showDirectChannelsModal) {\n            moreDirectChannelsModal = (\n                <MoreDirectChannels\n                    onModalDismissed={this.hideMoreDirectChannelsModal}\n                    startingUsers={this.state.startingUsers}\n                />\n            );\n        }\n\n        let moreChannelsModal;\n        if (this.state.showMoreChannelsModal) {\n            moreChannelsModal = (\n                <MoreChannels\n                    onModalDismissed={this.hideMoreChannelsModal}\n                    handleNewChannel={() => {\n                        this.hideMoreChannelsModal();\n                        this.showNewChannelModal(Constants.OPEN_CHANNEL);\n                    }}\n                />\n            );\n        }\n\n        let quickSwitchTextShortcutId = 'quick_switch_modal.channelsShortcut.windows';\n        let quickSwitchTextShortcutDefault = '- CTRL+K';\n        if (Utils.isMac()) {\n            quickSwitchTextShortcutId = 'quick_switch_modal.channelsShortcut.mac';\n            quickSwitchTextShortcutDefault = '- ⌘K';\n        }\n\n        const quickSwitchTextShortcut = (\n            <span className='switch__shortcut hidden-xs'>\n                <FormattedMessage\n                    id={quickSwitchTextShortcutId}\n                    defaultMessage={quickSwitchTextShortcutDefault}\n                />\n            </span>\n        );\n\n        return (\n            <div\n                className='sidebar--left'\n                id='sidebar-left'\n                key='sidebar-left'\n            >\n                <NewChannelFlow\n                    show={showChannelModal}\n                    channelType={this.state.newChannelModalType}\n                    onModalDismissed={this.hideNewChannelModal}\n                />\n                {moreDirectChannelsModal}\n                {moreChannelsModal}\n\n                <SidebarHeader\n                    teamDisplayName={this.state.currentTeam.display_name}\n                    teamDescription={this.state.currentTeam.description}\n                    teamName={this.state.currentTeam.name}\n                    teamType={this.state.currentTeam.type}\n                    currentUser={this.state.currentUser}\n                />\n\n                <UnreadChannelIndicator\n                    name='Top'\n                    show={this.state.showTopUnread}\n                    onClick={this.scrollToFirstUnreadChannel}\n                    extraClass='nav-pills__unread-indicator-top'\n                    text={above}\n                />\n                <UnreadChannelIndicator\n                    name='Bottom'\n                    show={this.state.showBottomUnread}\n                    onClick={this.scrollToLastUnreadChannel}\n                    extraClass='nav-pills__unread-indicator-bottom'\n                    text={below}\n                />\n\n                <div\n                    id='sidebarChannelContainer'\n                    ref='container'\n                    className='nav-pills__container'\n                    onScroll={this.onScroll}\n                >\n                    {favoriteItems.length !== 0 && <ul className='nav nav-pills nav-stacked'>\n                        <li>\n                            <h4 id='favoriteChannel'>\n                                <FormattedMessage\n                                    id='sidebar.favorite'\n                                    defaultMessage='FAVORITE CHANNELS'\n                                />\n                            </h4>\n                        </li>\n                        {favoriteItems}\n                    </ul>}\n                    <ul className='nav nav-pills nav-stacked'>\n                        <li>\n                            <h4 id='publicChannel'>\n                                <FormattedMessage\n                                    id='sidebar.channels'\n                                    defaultMessage='PUBLIC CHANNELS'\n                                />\n                                {createPublicChannelIcon}\n                            </h4>\n                        </li>\n                        {publicChannelItems}\n                        <li>\n                            <button\n                                id='sidebarChannelsMore'\n                                className='nav-more cursor--pointer style--none btn--block'\n                                onClick={this.showMoreChannelsModal}\n                            >\n                                <FormattedMessage\n                                    id='sidebar.moreElips'\n                                    defaultMessage='More...'\n                                />\n                            </button>\n                        </li>\n                    </ul>\n\n                    <ul className='nav nav-pills nav-stacked'>\n                        <li>\n                            <h4 id='privateChannel'>\n                                <FormattedMessage\n                                    id='sidebar.pg'\n                                    defaultMessage='PRIVATE CHANNELS'\n                                />\n                                {createPrivateChannelIcon}\n                            </h4>\n                        </li>\n                        {privateChannelItems}\n                    </ul>\n                    <ul className='nav nav-pills nav-stacked'>\n                        <li>\n                            <h4 id='directChannel'>\n                                <FormattedMessage\n                                    id='sidebar.direct'\n                                    defaultMessage='DIRECT MESSAGES'\n                                />\n                                {createDirectMessageIcon}\n                            </h4>\n                        </li>\n                        {directMessageItems}\n                        {directMessageMore}\n                    </ul>\n                </div>\n                <div className='sidebar__switcher'>\n                    <button\n                        id='sidebarSwitcherButton'\n                        className='btn btn-link'\n                        onClick={this.openQuickSwitcher}\n                    >\n                        <span\n                            className='icon icon__switch'\n                            dangerouslySetInnerHTML={{__html: switchChannelIcon}}\n                        />\n                        <FormattedMessage\n                            id={'channel_switch_modal.title'}\n                            defaultMessage='Switch Channels'\n                        />\n                        {quickSwitchTextShortcut}\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/sidebar.jsx"],"sourceRoot":""}