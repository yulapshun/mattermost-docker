{"version":3,"sources":["webpack:///34.c33c6a9bb3ed5708d459.js","webpack:///./components/password_reset_send_link.jsx"],"names":["webpackJsonp","2140","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_jquery","_jquery2","_propTypes","_propTypes2","_react","_react2","_reactDom","_reactDom2","_reactIntl","_user_actions","_utils","Utils","newObj","key","prototype","hasOwnProperty","call","_back_button","_back_button2","PasswordResetSendLink","_React$Component","props","this","_this","__proto__","handleSendLink","bind","state","error","updateText","e","_this2","preventDefault","email","findDOMNode","refs","trim","toLowerCase","isEmail","setState","createElement","FormattedMessage","id","defaultMessage","sendPasswordResetEmail","className","FormattedHTMLMessage","values","reset_form","hide","err","message","update_text","formClass","onSubmit","ref","type","name","placeholder","localizeMessage","spellCheck","Component","defaultProps","propTypes","params","object","isRequired"],"mappings":"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","file":"34.c33c6a9bb3ed5708d459.js","sourcesContent":["webpackJsonp([34],{\n\n/***/ 2140:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(4);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(7);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(8);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _propTypes = __webpack_require__(2);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(47);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _reactIntl = __webpack_require__(17);\n\nvar _user_actions = __webpack_require__(69);\n\nvar _utils = __webpack_require__(16);\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _back_button = __webpack_require__(2082);\n\nvar _back_button2 = _interopRequireDefault(_back_button);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar PasswordResetSendLink = function (_React$Component) {\n    (0, _inherits3.default)(PasswordResetSendLink, _React$Component);\n\n    function PasswordResetSendLink(props) {\n        (0, _classCallCheck3.default)(this, PasswordResetSendLink);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (PasswordResetSendLink.__proto__ || (0, _getPrototypeOf2.default)(PasswordResetSendLink)).call(this, props));\n\n        _this.handleSendLink = _this.handleSendLink.bind(_this);\n\n        _this.state = {\n            error: '',\n            updateText: ''\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(PasswordResetSendLink, [{\n        key: 'handleSendLink',\n        value: function handleSendLink(e) {\n            var _this2 = this;\n\n            e.preventDefault();\n\n            var email = _reactDom2.default.findDOMNode(this.refs.email).value.trim().toLowerCase();\n            if (!email || !Utils.isEmail(email)) {\n                this.setState({\n                    error: _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'password_send.error',\n                        defaultMessage: 'Please enter a valid email address.'\n                    })\n                });\n                return;\n            }\n\n            // End of error checking clear error\n            this.setState({\n                error: ''\n            });\n\n            (0, _user_actions.sendPasswordResetEmail)(email, function () {\n                _this2.setState({\n                    error: null,\n                    updateText: _react2.default.createElement(\n                        'div',\n                        { className: 'reset-form alert alert-success' },\n                        _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                            id: 'password_send.link',\n                            defaultMessage: 'If the account exists, a password reset email will be sent to: <br/><b>{email}</b><br/><br/>',\n                            values: {\n                                email: email\n                            }\n                        }),\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'password_send.checkInbox',\n                            defaultMessage: 'Please check your inbox.'\n                        })\n                    )\n                });\n                (0, _jquery2.default)(_reactDom2.default.findDOMNode(_this2.refs.reset_form)).hide();\n            }, function (err) {\n                _this2.setState({\n                    error: err.message,\n                    update_text: null\n                });\n            });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var error = null;\n            if (this.state.error) {\n                error = _react2.default.createElement(\n                    'div',\n                    { className: 'form-group has-error' },\n                    _react2.default.createElement(\n                        'label',\n                        { className: 'control-label' },\n                        this.state.error\n                    )\n                );\n            }\n\n            var formClass = 'form-group';\n            if (error) {\n                formClass += ' has-error';\n            }\n\n            return _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(_back_button2.default, null),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'col-sm-12' },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'signup-team__container' },\n                        _react2.default.createElement(\n                            'h3',\n                            null,\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'password_send.title',\n                                defaultMessage: 'Password Reset'\n                            })\n                        ),\n                        this.state.updateText,\n                        _react2.default.createElement(\n                            'form',\n                            {\n                                onSubmit: this.handleSendLink,\n                                ref: 'reset_form'\n                            },\n                            _react2.default.createElement(\n                                'p',\n                                null,\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'password_send.description',\n                                    defaultMessage: 'To reset your password, enter the email address you used to sign up'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: formClass },\n                                _react2.default.createElement('input', {\n                                    type: 'email',\n                                    className: 'form-control',\n                                    name: 'email',\n                                    ref: 'email',\n                                    placeholder: Utils.localizeMessage('password_send.email', 'Email'),\n                                    spellCheck: 'false'\n                                })\n                            ),\n                            error,\n                            _react2.default.createElement(\n                                'button',\n                                {\n                                    type: 'submit',\n                                    className: 'btn btn-primary'\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'password_send.reset',\n                                    defaultMessage: 'Reset my password'\n                                })\n                            )\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return PasswordResetSendLink;\n}(_react2.default.Component);\n\nPasswordResetSendLink.defaultProps = {};\nPasswordResetSendLink.propTypes = {\n    params: _propTypes2.default.object.isRequired\n};\n\nexports.default = PasswordResetSendLink;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 34.c33c6a9bb3ed5708d459.js","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport $ from 'jquery';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {FormattedHTMLMessage, FormattedMessage} from 'react-intl';\n\nimport {sendPasswordResetEmail} from 'actions/user_actions.jsx';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport BackButton from 'components/common/back_button.jsx';\n\nclass PasswordResetSendLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSendLink = this.handleSendLink.bind(this);\n\n        this.state = {\n            error: '',\n            updateText: ''\n        };\n    }\n    handleSendLink(e) {\n        e.preventDefault();\n\n        var email = ReactDOM.findDOMNode(this.refs.email).value.trim().toLowerCase();\n        if (!email || !Utils.isEmail(email)) {\n            this.setState({\n                error: (\n                    <FormattedMessage\n                        id={'password_send.error'}\n                        defaultMessage={'Please enter a valid email address.'}\n                    />\n                )\n            });\n            return;\n        }\n\n        // End of error checking clear error\n        this.setState({\n            error: ''\n        });\n\n        sendPasswordResetEmail(\n            email,\n            () => {\n                this.setState({\n                    error: null,\n                    updateText: (\n                        <div className='reset-form alert alert-success'>\n                            <FormattedHTMLMessage\n                                id='password_send.link'\n                                defaultMessage='If the account exists, a password reset email will be sent to: <br/><b>{email}</b><br/><br/>'\n                                values={{\n                                    email\n                                }}\n                            />\n                            <FormattedMessage\n                                id='password_send.checkInbox'\n                                defaultMessage='Please check your inbox.'\n                            />\n                        </div>\n                    )\n                });\n                $(ReactDOM.findDOMNode(this.refs.reset_form)).hide();\n            },\n            (err) => {\n                this.setState({\n                    error: err.message,\n                    update_text: null\n                });\n            }\n        );\n    }\n    render() {\n        var error = null;\n        if (this.state.error) {\n            error = <div className='form-group has-error'><label className='control-label'>{this.state.error}</label></div>;\n        }\n\n        var formClass = 'form-group';\n        if (error) {\n            formClass += ' has-error';\n        }\n\n        return (\n            <div>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <h3>\n                            <FormattedMessage\n                                id='password_send.title'\n                                defaultMessage='Password Reset'\n                            />\n                        </h3>\n                        {this.state.updateText}\n                        <form\n                            onSubmit={this.handleSendLink}\n                            ref='reset_form'\n                        >\n                            <p>\n                                <FormattedMessage\n                                    id='password_send.description'\n                                    defaultMessage='To reset your password, enter the email address you used to sign up'\n                                />\n                            </p>\n                            <div className={formClass}>\n                                <input\n                                    type='email'\n                                    className='form-control'\n                                    name='email'\n                                    ref='email'\n                                    placeholder={Utils.localizeMessage(\n                                        'password_send.email',\n                                        'Email'\n                                    )}\n                                    spellCheck='false'\n                                />\n                            </div>\n                            {error}\n                            <button\n                                type='submit'\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='password_send.reset'\n                                    defaultMessage='Reset my password'\n                                />\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPasswordResetSendLink.defaultProps = {\n};\nPasswordResetSendLink.propTypes = {\n    params: PropTypes.object.isRequired\n};\n\nexport default PasswordResetSendLink;\n\n\n\n// WEBPACK FOOTER //\n// ./components/password_reset_send_link.jsx"],"sourceRoot":""}