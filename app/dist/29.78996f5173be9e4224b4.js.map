{"version":3,"sources":["webpack:///29.78996f5173be9e4224b4.js","webpack:///./components/signup/signup_controller.jsx"],"names":["webpackJsonp","2142","module","exports","__webpack_require__","global","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_propTypes","_propTypes2","_react","_react2","_reactIntl","_es","_client","_global_actions","GlobalActions","newObj","key","prototype","hasOwnProperty","call","_team_actions","_user_actions","_browser_store","_browser_store2","_user_store","_user_store2","_logo","_logo2","_announcement_bar","_announcement_bar2","_back_button","_back_button2","_form_error","_form_error2","_loading_screen","_loading_screen2","SignupController","_React$Component","props","this","_this","__proto__","_initialiseProps","renderSignupControls","bind","loading","serverError","noOpenServerError","usedBefore","location","query","hash","h","inviteId","id","getCurrentUser","getGlobalItem","window","mm_config","EnableOpenServer","getNoAccounts","createElement","FormattedMessage","defaultMessage","state","_this2","removeGlobalItem","data","d","userLoggedIn","addUserToTeamFromInvite","team","loadMe","then","browserHistory","push","name","handleInvalidInvite","getInviteInfo","inviteData","setState","redirectUserToDefaultTeam","signupControls","EnableSignUpWithEmail","Link","className","to","search","EnableSignUpWithGitLab","href","Client4","getOAuthRoute","mm_license","IsLicensed","EnableSignUpWithGoogle","EnableSignUpWithOffice365","EnableLdap","EnableSaml","SamlLoginButtonText","length","signupDisabledError","error","margin","src","SiteName","Component","_this3","err","server_error_id","message","propTypes","object"],"mappings":"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","file":"29.78996f5173be9e4224b4.js","sourcesContent":["webpackJsonp([29],{\n\n/***/ 2142:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(4);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(7);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(8);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _propTypes = __webpack_require__(2);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactIntl = __webpack_require__(17);\n\nvar _es = __webpack_require__(44);\n\nvar _client = __webpack_require__(29);\n\nvar _global_actions = __webpack_require__(56);\n\nvar GlobalActions = _interopRequireWildcard(_global_actions);\n\nvar _team_actions = __webpack_require__(435);\n\nvar _user_actions = __webpack_require__(69);\n\nvar _browser_store = __webpack_require__(135);\n\nvar _browser_store2 = _interopRequireDefault(_browser_store);\n\nvar _user_store = __webpack_require__(25);\n\nvar _user_store2 = _interopRequireDefault(_user_store);\n\nvar _logo = __webpack_require__(2081);\n\nvar _logo2 = _interopRequireDefault(_logo);\n\nvar _announcement_bar = __webpack_require__(2083);\n\nvar _announcement_bar2 = _interopRequireDefault(_announcement_bar);\n\nvar _back_button = __webpack_require__(2082);\n\nvar _back_button2 = _interopRequireDefault(_back_button);\n\nvar _form_error = __webpack_require__(238);\n\nvar _form_error2 = _interopRequireDefault(_form_error);\n\nvar _loading_screen = __webpack_require__(236);\n\nvar _loading_screen2 = _interopRequireDefault(_loading_screen);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SignupController = function (_React$Component) {\n    (0, _inherits3.default)(SignupController, _React$Component);\n\n    function SignupController(props) {\n        (0, _classCallCheck3.default)(this, SignupController);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (SignupController.__proto__ || (0, _getPrototypeOf2.default)(SignupController)).call(this, props));\n\n        _initialiseProps.call(_this);\n\n        _this.renderSignupControls = _this.renderSignupControls.bind(_this);\n\n        var loading = false;\n        var serverError = '';\n        var noOpenServerError = false;\n        var usedBefore = false;\n\n        if (props.location.query) {\n            var hash = props.location.query.h;\n            var inviteId = props.location.query.id;\n\n            if (inviteId) {\n                loading = true;\n            } else if (hash && !_user_store2.default.getCurrentUser()) {\n                usedBefore = _browser_store2.default.getGlobalItem(hash);\n            } else if (!inviteId && global.window.mm_config.EnableOpenServer !== 'true' && !_user_store2.default.getNoAccounts()) {\n                noOpenServerError = true;\n                serverError = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'signup_user_completed.no_open_server',\n                    defaultMessage: 'This server does not allow open signups.  Please speak with your Administrator to receive an invitation.'\n                });\n            }\n        }\n\n        _this.state = {\n            loading: loading,\n            serverError: serverError,\n            noOpenServerError: noOpenServerError,\n            usedBefore: usedBefore\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(SignupController, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var _this2 = this;\n\n            _browser_store2.default.removeGlobalItem('team');\n            if (this.props.location.query) {\n                var hash = this.props.location.query.h;\n                var data = this.props.location.query.d;\n                var inviteId = this.props.location.query.id;\n\n                var userLoggedIn = _user_store2.default.getCurrentUser() != null;\n\n                if ((inviteId || hash) && userLoggedIn) {\n                    (0, _team_actions.addUserToTeamFromInvite)(data, hash, inviteId, function (team) {\n                        (0, _user_actions.loadMe)().then(function () {\n                            _es.browserHistory.push('/' + team.name + '/channels/town-square');\n                        });\n                    }, this.handleInvalidInvite);\n\n                    return;\n                }\n\n                if (inviteId) {\n                    (0, _team_actions.getInviteInfo)(inviteId, function (inviteData) {\n                        if (!inviteData) {\n                            return;\n                        }\n\n                        _this2.setState({ // eslint-disable-line react/no-did-mount-set-state\n                            serverError: '',\n                            loading: false\n                        });\n                    }, this.handleInvalidInvite);\n\n                    return;\n                }\n\n                if (userLoggedIn) {\n                    GlobalActions.redirectUserToDefaultTeam();\n                }\n            }\n        }\n    }, {\n        key: 'renderSignupControls',\n        value: function renderSignupControls() {\n            var signupControls = [];\n\n            if (global.window.mm_config.EnableSignUpWithEmail === 'true') {\n                signupControls.push(_react2.default.createElement(\n                    _es.Link,\n                    {\n                        className: 'btn btn-custom-login btn--full email',\n                        key: 'email',\n                        to: '/signup_email' + window.location.search\n                    },\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement('span', { className: 'icon fa fa-envelope' }),\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'signup.email',\n                            defaultMessage: 'Email and Password'\n                        })\n                    )\n                ));\n            }\n\n            if (global.window.mm_config.EnableSignUpWithGitLab === 'true') {\n                signupControls.push(_react2.default.createElement(\n                    'a',\n                    {\n                        className: 'btn btn-custom-login btn--full gitlab',\n                        key: 'gitlab',\n                        href: _client.Client4.getOAuthRoute() + '/gitlab/signup' + window.location.search\n                    },\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement('span', { className: 'icon' }),\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup.gitlab',\n                                defaultMessage: 'GitLab Single Sign-On'\n                            })\n                        )\n                    )\n                ));\n            }\n\n            if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSignUpWithGoogle === 'true') {\n                signupControls.push(_react2.default.createElement(\n                    'a',\n                    {\n                        className: 'btn btn-custom-login btn--full google',\n                        key: 'google',\n                        href: _client.Client4.getOAuthRoute() + '/google/signup' + window.location.search\n                    },\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement('span', { className: 'icon' }),\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup.google',\n                                defaultMessage: 'Google Account'\n                            })\n                        )\n                    )\n                ));\n            }\n\n            if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSignUpWithOffice365 === 'true') {\n                signupControls.push(_react2.default.createElement(\n                    'a',\n                    {\n                        className: 'btn btn-custom-login btn--full office365',\n                        key: 'office365',\n                        href: _client.Client4.getOAuthRoute() + '/office365/signup' + window.location.search\n                    },\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement('span', { className: 'icon' }),\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup.office365',\n                                defaultMessage: 'Office 365'\n                            })\n                        )\n                    )\n                ));\n            }\n\n            if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableLdap === 'true') {\n                signupControls.push(_react2.default.createElement(\n                    _es.Link,\n                    {\n                        className: 'btn btn-custom-login btn--full ldap',\n                        key: 'ldap',\n                        to: '/signup_ldap' + window.location.search\n                    },\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement('span', { className: 'icon fa fa-folder-open fa--margin-top' }),\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup.ldap',\n                                defaultMessage: 'AD/LDAP Credentials'\n                            })\n                        )\n                    )\n                ));\n            }\n\n            if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSaml === 'true') {\n                var query = '';\n                if (window.location.search) {\n                    query = '&action=signup';\n                } else {\n                    query = '?action=signup';\n                }\n\n                signupControls.push(_react2.default.createElement(\n                    'a',\n                    {\n                        className: 'btn btn-custom-login btn--full saml',\n                        key: 'saml',\n                        href: '/login/sso/saml' + window.location.search + query\n                    },\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement('span', { className: 'icon fa fa-lock fa--margin-top' }),\n                        _react2.default.createElement(\n                            'span',\n                            null,\n                            global.window.mm_config.SamlLoginButtonText\n                        )\n                    )\n                ));\n            }\n\n            if (signupControls.length === 0) {\n                var signupDisabledError = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'signup_user_completed.none',\n                    defaultMessage: 'No user creation method has been enabled. Please contact an administrator for access.'\n                });\n                signupControls = _react2.default.createElement(_form_error2.default, {\n                    error: signupDisabledError,\n                    margin: true\n                });\n            } else if (signupControls.length === 1) {\n                if (global.window.mm_config.EnableSignUpWithEmail === 'true') {\n                    return _es.browserHistory.push('/signup_email' + window.location.search);\n                } else if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableLdap === 'true') {\n                    return _es.browserHistory.push('/signup_ldap' + window.location.search);\n                }\n            }\n\n            return signupControls;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            if (this.state.loading) {\n                return _react2.default.createElement(_loading_screen2.default, null);\n            }\n\n            if (this.state.usedBefore) {\n                return _react2.default.createElement(\n                    'div',\n                    null,\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'signup_user_completed.expired',\n                        defaultMessage: 'You\\'ve already completed the signup process for this invitation or this invitation has expired.'\n                    })\n                );\n            }\n\n            var serverError = null;\n            if (this.state.serverError) {\n                serverError = _react2.default.createElement(\n                    'div',\n                    { className: 'form-group has-error' },\n                    _react2.default.createElement(\n                        'label',\n                        { className: 'control-label' },\n                        this.state.serverError\n                    )\n                );\n            }\n\n            var signupControls = void 0;\n            if (this.state.noOpenServerError || this.state.usedBefore) {\n                signupControls = null;\n            } else {\n                signupControls = this.renderSignupControls();\n            }\n\n            return _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(_announcement_bar2.default, null),\n                _react2.default.createElement(_back_button2.default, null),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'col-sm-12' },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'signup-team__container' },\n                        _react2.default.createElement('img', {\n                            className: 'signup-team-logo',\n                            src: _logo2.default\n                        }),\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'signup__content' },\n                            _react2.default.createElement(\n                                'h1',\n                                null,\n                                global.window.mm_config.SiteName\n                            ),\n                            _react2.default.createElement(\n                                'h4',\n                                { className: 'color--light' },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'web.root.signup_info'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'margin--extra' },\n                                _react2.default.createElement(\n                                    'h5',\n                                    null,\n                                    _react2.default.createElement(\n                                        'strong',\n                                        null,\n                                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                            id: 'signup.title',\n                                            defaultMessage: 'Create an account with:'\n                                        })\n                                    )\n                                )\n                            ),\n                            signupControls,\n                            serverError\n                        ),\n                        _react2.default.createElement(\n                            'span',\n                            { className: 'color--light' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup_user_completed.haveAccount',\n                                defaultMessage: 'Already have an account?'\n                            }),\n                            ' ',\n                            _react2.default.createElement(\n                                _es.Link,\n                                {\n                                    to: '/login',\n                                    query: this.props.location.query\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'signup_user_completed.signIn',\n                                    defaultMessage: 'Click here to sign in.'\n                                })\n                            )\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return SignupController;\n}(_react2.default.Component); // Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar _initialiseProps = function _initialiseProps() {\n    var _this3 = this;\n\n    this.handleInvalidInvite = function (err) {\n        var serverError = void 0;\n        if (err.server_error_id === 'store.sql_user.save.max_accounts.app_error') {\n            serverError = err.message;\n        } else {\n            serverError = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                id: 'signup_user_completed.invalid_invite',\n                defaultMessage: 'The invite link was invalid.  Please speak with your Administrator to receive an invitation.'\n            });\n        }\n\n        _this3.setState({\n            noOpenServerError: true,\n            loading: false,\n            serverError: serverError\n        });\n    };\n};\n\nexports.default = SignupController;\n\n\nSignupController.propTypes = {\n    location: _propTypes2.default.object\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(22)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 29.78996f5173be9e4224b4.js","// Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {browserHistory, Link} from 'react-router/es6';\n\nimport {Client4} from 'mattermost-redux/client';\n\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport {addUserToTeamFromInvite, getInviteInfo} from 'actions/team_actions.jsx';\nimport {loadMe} from 'actions/user_actions.jsx';\nimport BrowserStore from 'stores/browser_store.jsx';\nimport UserStore from 'stores/user_store.jsx';\n\nimport logoImage from 'images/logo.png';\n\nimport AnnouncementBar from 'components/announcement_bar';\nimport BackButton from 'components/common/back_button.jsx';\nimport FormError from 'components/form_error.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nexport default class SignupController extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.renderSignupControls = this.renderSignupControls.bind(this);\n\n        let loading = false;\n        let serverError = '';\n        let noOpenServerError = false;\n        let usedBefore = false;\n\n        if (props.location.query) {\n            const hash = props.location.query.h;\n            const inviteId = props.location.query.id;\n\n            if (inviteId) {\n                loading = true;\n            } else if (hash && !UserStore.getCurrentUser()) {\n                usedBefore = BrowserStore.getGlobalItem(hash);\n            } else if (!inviteId && global.window.mm_config.EnableOpenServer !== 'true' && !UserStore.getNoAccounts()) {\n                noOpenServerError = true;\n                serverError = (\n                    <FormattedMessage\n                        id='signup_user_completed.no_open_server'\n                        defaultMessage='This server does not allow open signups.  Please speak with your Administrator to receive an invitation.'\n                    />\n                );\n            }\n        }\n\n        this.state = {\n            loading,\n            serverError,\n            noOpenServerError,\n            usedBefore\n        };\n    }\n\n    componentDidMount() {\n        BrowserStore.removeGlobalItem('team');\n        if (this.props.location.query) {\n            const hash = this.props.location.query.h;\n            const data = this.props.location.query.d;\n            const inviteId = this.props.location.query.id;\n\n            const userLoggedIn = UserStore.getCurrentUser() != null;\n\n            if ((inviteId || hash) && userLoggedIn) {\n                addUserToTeamFromInvite(\n                    data,\n                    hash,\n                    inviteId,\n                    (team) => {\n                        loadMe().then(\n                            () => {\n                                browserHistory.push('/' + team.name + '/channels/town-square');\n                            }\n                        );\n                    },\n                    this.handleInvalidInvite\n                );\n\n                return;\n            }\n\n            if (inviteId) {\n                getInviteInfo(\n                    inviteId,\n                    (inviteData) => {\n                        if (!inviteData) {\n                            return;\n                        }\n\n                        this.setState({ // eslint-disable-line react/no-did-mount-set-state\n                            serverError: '',\n                            loading: false\n                        });\n                    },\n                    this.handleInvalidInvite\n                );\n\n                return;\n            }\n\n            if (userLoggedIn) {\n                GlobalActions.redirectUserToDefaultTeam();\n            }\n        }\n    }\n\n    handleInvalidInvite = (err) => {\n        let serverError;\n        if (err.server_error_id === 'store.sql_user.save.max_accounts.app_error') {\n            serverError = err.message;\n        } else {\n            serverError = (\n                <FormattedMessage\n                    id='signup_user_completed.invalid_invite'\n                    defaultMessage='The invite link was invalid.  Please speak with your Administrator to receive an invitation.'\n                />\n            );\n        }\n\n        this.setState({\n            noOpenServerError: true,\n            loading: false,\n            serverError\n        });\n    }\n\n    renderSignupControls() {\n        let signupControls = [];\n\n        if (global.window.mm_config.EnableSignUpWithEmail === 'true') {\n            signupControls.push(\n                <Link\n                    className='btn btn-custom-login btn--full email'\n                    key='email'\n                    to={'/signup_email' + window.location.search}\n                >\n                    <span>\n                        <span className='icon fa fa-envelope'/>\n                        <FormattedMessage\n                            id='signup.email'\n                            defaultMessage='Email and Password'\n                        />\n                    </span>\n                </Link>\n            );\n        }\n\n        if (global.window.mm_config.EnableSignUpWithGitLab === 'true') {\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full gitlab'\n                    key='gitlab'\n                    href={Client4.getOAuthRoute() + '/gitlab/signup' + window.location.search}\n                >\n                    <span>\n                        <span className='icon'/>\n                        <span>\n                            <FormattedMessage\n                                id='signup.gitlab'\n                                defaultMessage='GitLab Single Sign-On'\n                            />\n                        </span>\n                    </span>\n                </a>\n            );\n        }\n\n        if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSignUpWithGoogle === 'true') {\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full google'\n                    key='google'\n                    href={Client4.getOAuthRoute() + '/google/signup' + window.location.search}\n                >\n                    <span>\n                        <span className='icon'/>\n                        <span>\n                            <FormattedMessage\n                                id='signup.google'\n                                defaultMessage='Google Account'\n                            />\n                        </span>\n                    </span>\n                </a>\n            );\n        }\n\n        if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSignUpWithOffice365 === 'true') {\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full office365'\n                    key='office365'\n                    href={Client4.getOAuthRoute() + '/office365/signup' + window.location.search}\n                >\n                    <span>\n                        <span className='icon'/>\n                        <span>\n                            <FormattedMessage\n                                id='signup.office365'\n                                defaultMessage='Office 365'\n                            />\n                        </span>\n                    </span>\n                </a>\n            );\n        }\n\n        if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableLdap === 'true') {\n            signupControls.push(\n                <Link\n                    className='btn btn-custom-login btn--full ldap'\n                    key='ldap'\n                    to={'/signup_ldap' + window.location.search}\n                >\n                    <span>\n                        <span className='icon fa fa-folder-open fa--margin-top'/>\n                        <span>\n                            <FormattedMessage\n                                id='signup.ldap'\n                                defaultMessage='AD/LDAP Credentials'\n                            />\n                        </span>\n                    </span>\n                </Link>\n            );\n        }\n\n        if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSaml === 'true') {\n            let query = '';\n            if (window.location.search) {\n                query = '&action=signup';\n            } else {\n                query = '?action=signup';\n            }\n\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full saml'\n                    key='saml'\n                    href={'/login/sso/saml' + window.location.search + query}\n                >\n                    <span>\n                        <span className='icon fa fa-lock fa--margin-top'/>\n                        <span>\n                            {global.window.mm_config.SamlLoginButtonText}\n                        </span>\n                    </span>\n                </a>\n            );\n        }\n\n        if (signupControls.length === 0) {\n            const signupDisabledError = (\n                <FormattedMessage\n                    id='signup_user_completed.none'\n                    defaultMessage='No user creation method has been enabled. Please contact an administrator for access.'\n                />\n            );\n            signupControls = (\n                <FormError\n                    error={signupDisabledError}\n                    margin={true}\n                />\n            );\n        } else if (signupControls.length === 1) {\n            if (global.window.mm_config.EnableSignUpWithEmail === 'true') {\n                return browserHistory.push('/signup_email' + window.location.search);\n            } else if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableLdap === 'true') {\n                return browserHistory.push('/signup_ldap' + window.location.search);\n            }\n        }\n\n        return signupControls;\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<LoadingScreen/>);\n        }\n\n        if (this.state.usedBefore) {\n            return (\n                <div>\n                    <FormattedMessage\n                        id='signup_user_completed.expired'\n                        defaultMessage=\"You've already completed the signup process for this invitation or this invitation has expired.\"\n                    />\n                </div>\n            );\n        }\n\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className={'form-group has-error'}>\n                    <label className='control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n\n        let signupControls;\n        if (this.state.noOpenServerError || this.state.usedBefore) {\n            signupControls = null;\n        } else {\n            signupControls = this.renderSignupControls();\n        }\n\n        return (\n            <div>\n                <AnnouncementBar/>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <img\n                            className='signup-team-logo'\n                            src={logoImage}\n                        />\n                        <div className='signup__content'>\n                            <h1>{global.window.mm_config.SiteName}</h1>\n                            <h4 className='color--light'>\n                                <FormattedMessage\n                                    id='web.root.signup_info'\n                                />\n                            </h4>\n                            <div className='margin--extra'>\n                                <h5><strong>\n                                    <FormattedMessage\n                                        id='signup.title'\n                                        defaultMessage='Create an account with:'\n                                    />\n                                </strong></h5>\n                            </div>\n                            {signupControls}\n                            {serverError}\n                        </div>\n                        <span className='color--light'>\n                            <FormattedMessage\n                                id='signup_user_completed.haveAccount'\n                                defaultMessage='Already have an account?'\n                            />\n                            {' '}\n                            <Link\n                                to={'/login'}\n                                query={this.props.location.query}\n                            >\n                                <FormattedMessage\n                                    id='signup_user_completed.signIn'\n                                    defaultMessage='Click here to sign in.'\n                                />\n                            </Link>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nSignupController.propTypes = {\n    location: PropTypes.object\n};\n\n\n\n// WEBPACK FOOTER //\n// ./components/signup/signup_controller.jsx"],"sourceRoot":""}